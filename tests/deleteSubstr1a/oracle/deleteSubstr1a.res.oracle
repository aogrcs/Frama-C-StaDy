[kernel] Parsing FRAMAC_SHARE/libc/__fc_builtin_for_normalization.i (no preprocessing)
[kernel] Parsing tests/deleteSubstr1a/deleteSubstr1a.c (with preprocessing)
tests/deleteSubstr1a/deleteSubstr1a.c:60:[stady] warning: Native Precondition:
                 \separated(dest+(0 .. strlen-1), str+(0 .. strlen-1)) unsupported
tests/deleteSubstr1a/deleteSubstr1a.c:60:[stady] warning: Native Precondition:
                 \separated(dest+(0 .. strlen-1), substr+(0 .. sublen-1)) unsupported
tests/deleteSubstr1a/deleteSubstr1a.c:60:[stady] warning: \separated(dest+(0 .. strlen-1), substr+(0 .. sublen-1)) unsupported
tests/deleteSubstr1a/deleteSubstr1a.c:60:[stady] warning: \separated(dest+(0 .. strlen-1), str+(0 .. strlen-1)) unsupported
[stady:generated-pl] generated Prolog precondition:
:- module(test_parameters).
:- import create_input_val/3 from substitution.
:- export dom/4.
:- export create_input_vals/2.
:- export unquantif_preconds/2.
:- export quantif_preconds/2.
:- export strategy/2.
:- export precondition_of/2.

dom(0,0,0,0).
dom('delete_substr', dim('substr'), [], int([0..4294967295])).
dom('delete_substr', dim('str'), [], int([0..4294967295])).
dom('delete_substr', cont('substr',_), [], int([-128..127])).
dom('delete_substr', dim('dest'), [], int([0..4294967295])).
dom('delete_substr', cont('dest',_), [], int([-128..127])).
dom('delete_substr', cont('str',_), [], int([-128..127])).
dom('pathcrawler__delete_substr_precond',A,B,C) :-
  dom('delete_substr',A,B,C).
create_input_vals('delete_substr', Ins):-
  create_input_val(dim('substr'), int([0..4294967295]),Ins),
  create_input_val('strlen', int([-2147483648..2]),Ins),
  create_input_val(dim('str'), int([0..4294967295]),Ins),
  create_input_val(dim('dest'), int([0..4294967295]),Ins),
  create_input_val('sublen', int([1..2147483647]),Ins),
  true.
create_input_vals('pathcrawler__delete_substr_precond',Ins) :-
  create_input_vals('delete_substr',Ins).
quantif_preconds('delete_substr',
  [

  ]
).
quantif_preconds('pathcrawler__delete_substr_precond',A) :-
  quantif_preconds('delete_substr',A).
unquantif_preconds('delete_substr',
  [
    cond(infegal,'sublen','strlen',pre),
    cond(egal,dim('str'),+(int(math), -(int(math), 'strlen', 1), 1),pre),
    cond(egal,dim('dest'),+(int(math), -(int(math), 'strlen', 1), 1),pre),
    cond(egal,dim('substr'),+(int(math), -(int(math), 'sublen', 1), 1),pre)
  ]
).
unquantif_preconds('pathcrawler__delete_substr_precond',A) :-
  unquantif_preconds('delete_substr',A).
strategy('delete_substr',[]).
strategy('pathcrawler__delete_substr_precond',A) :-
  strategy('delete_substr',A).
precondition_of('delete_substr','pathcrawler__delete_substr_precond').
[stady:generated-c] generated C file:
/* Generated by Frama-C */
#include "/usr/local/share/frama-c/stady/externals.h"
/*@ requires 0 < sublen <= strlen;
    requires \valid(str+(0 .. strlen-1));
    requires \valid(substr+(0 .. sublen-1));
    assigns \nothing;
    
    behavior present:
      assumes
        \exists integer i;
          0 <= i < strlen-sublen &&
          (\forall integer j; 0 <= j < sublen ==> *(str+(i+j)) == *(substr+j));
      ensures 0 <= \result < \old(strlen)-\old(sublen);
      ensures
        \forall integer j;
          0 <= j < \old(sublen) ==>
          *(\old(str)+(\result+j)) == *(\old(substr)+j);
    
    behavior not_present:
      assumes
        \forall integer i;
          0 <= i < strlen-sublen ==>
          (\exists integer j; 0 <= j < sublen && *(str+(i+j)) != *(substr+j));
      ensures \result == -1;
 */
int find_substr(char *str, int strlen, char *substr, int sublen)
{
  mpz_t __sd_Z_cst_0;
  __gmpz_init_set_str(__sd_Z_cst_0,"0",10);
  mpz_t __sd_Z_to_Z_0;
  __gmpz_init_set_si(__sd_Z_to_Z_0,sublen);
  int __sd_lt_0;
  __sd_lt_0 = __gmpz_cmp(__sd_Z_cst_0,__sd_Z_to_Z_0);
  __gmpz_clear(__sd_Z_cst_0);
  __gmpz_clear(__sd_Z_to_Z_0);
  int __sd_and_0;
  __sd_and_0 = __sd_lt_0 < 0;
  if(__sd_and_0) {
    __sd_and_0 = sublen <= strlen;
  }
  if(! __sd_and_0) {
    pathcrawler_assert_exception("",24);
  }
  mpz_t __sd_Z_cst_1;
  __gmpz_init_set_str(__sd_Z_cst_1,"0",10);
  mpz_t __sd_Z_to_Z_1;
  __gmpz_init_set_si(__sd_Z_to_Z_1,strlen);
  mpz_t __sd_Z_cst_2;
  __gmpz_init_set_str(__sd_Z_cst_2,"1",10);
  mpz_t __sd_Z_sub_0;
  __gmpz_init(__sd_Z_sub_0);
  __gmpz_sub(__sd_Z_sub_0,__sd_Z_to_Z_1,__sd_Z_cst_2);
  __gmpz_clear(__sd_Z_to_Z_1);
  __gmpz_clear(__sd_Z_cst_2);
  int __sd_valid_0;
  int __sd_valid_cmp_0;
  __sd_valid_cmp_0 = __gmpz_cmp(__sd_Z_cst_1,__sd_Z_sub_0);
  if(__sd_valid_cmp_0 <= 0) {
    int __sd_valid_dim_0;
    __sd_valid_dim_0 = pathcrawler_dimension(str);
    int __sd_valid_cmp_1;
    __sd_valid_cmp_1 = __gmpz_cmp_ui(__sd_Z_sub_0,__sd_valid_dim_0);
    int __sd_valid_cmp_2;
    __sd_valid_cmp_2 = __gmpz_cmp_ui(__sd_Z_sub_0,0);
    __sd_valid_0 = __sd_valid_cmp_2 >= 0 && __sd_valid_cmp_1 < 0;
  }
  else {
    __sd_valid_0 = 1;
  }
  __gmpz_clear(__sd_Z_cst_1);
  __gmpz_clear(__sd_Z_sub_0);
  if(! __sd_valid_0) {
    pathcrawler_assert_exception("",25);
  }
  mpz_t __sd_Z_cst_3;
  __gmpz_init_set_str(__sd_Z_cst_3,"0",10);
  mpz_t __sd_Z_to_Z_2;
  __gmpz_init_set_si(__sd_Z_to_Z_2,sublen);
  mpz_t __sd_Z_cst_4;
  __gmpz_init_set_str(__sd_Z_cst_4,"1",10);
  mpz_t __sd_Z_sub_1;
  __gmpz_init(__sd_Z_sub_1);
  __gmpz_sub(__sd_Z_sub_1,__sd_Z_to_Z_2,__sd_Z_cst_4);
  __gmpz_clear(__sd_Z_to_Z_2);
  __gmpz_clear(__sd_Z_cst_4);
  int __sd_valid_1;
  int __sd_valid_cmp_3;
  __sd_valid_cmp_3 = __gmpz_cmp(__sd_Z_cst_3,__sd_Z_sub_1);
  if(__sd_valid_cmp_3 <= 0) {
    int __sd_valid_dim_1;
    __sd_valid_dim_1 = pathcrawler_dimension(substr);
    int __sd_valid_cmp_4;
    __sd_valid_cmp_4 = __gmpz_cmp_ui(__sd_Z_sub_1,__sd_valid_dim_1);
    int __sd_valid_cmp_5;
    __sd_valid_cmp_5 = __gmpz_cmp_ui(__sd_Z_sub_1,0);
    __sd_valid_1 = __sd_valid_cmp_5 >= 0 && __sd_valid_cmp_4 < 0;
  }
  else {
    __sd_valid_1 = 1;
  }
  __gmpz_clear(__sd_Z_cst_3);
  __gmpz_clear(__sd_Z_sub_1);
  if(! __sd_valid_1) {
    pathcrawler_assert_exception("",11);
  }
  char *old_str;
  char *old_ptr_str;
  old_str = str;
  mpz_t __sd_Z_to_Z_16;
  __gmpz_init_set_si(__sd_Z_to_Z_16,strlen);
  unsigned long __sd_to_ctype_6;
  __sd_to_ctype_6 = __gmpz_get_ui(__sd_Z_to_Z_16);
  __gmpz_clear(__sd_Z_to_Z_16);
  unsigned long __sd_iter_0;
  old_ptr_str = (char *)malloc(__sd_to_ctype_6 * (unsigned long)sizeof(char));
  __sd_iter_0 = 0;
  while(__sd_iter_0 < __sd_to_ctype_6) {
    *(old_ptr_str + __sd_iter_0) = *(str + __sd_iter_0);
    __sd_iter_0 ++;
  }
  int old_strlen;
  old_strlen = strlen;
  char *old_substr;
  char *old_ptr_substr;
  old_substr = substr;
  mpz_t __sd_Z_to_Z_17;
  __gmpz_init_set_si(__sd_Z_to_Z_17,sublen);
  unsigned long __sd_to_ctype_7;
  __sd_to_ctype_7 = __gmpz_get_ui(__sd_Z_to_Z_17);
  __gmpz_clear(__sd_Z_to_Z_17);
  unsigned long __sd_iter_1;
  old_ptr_substr = (char *)malloc(__sd_to_ctype_7 * (unsigned long)sizeof(char));
  __sd_iter_1 = 0;
  while(__sd_iter_1 < __sd_to_ctype_7) {
    *(old_ptr_substr + __sd_iter_1) = *(substr + __sd_iter_1);
    __sd_iter_1 ++;
  }
  int old_sublen;
  old_sublen = sublen;
  {
    int __retres;
    int i;
    i = 0;
    i = 0;
    {
      mpz_t __sd_Z_cst_16;
      __gmpz_init_set_str(__sd_Z_cst_16,"0",10);
      mpz_t __sd_Z_to_Z_28;
      __gmpz_init_set_si(__sd_Z_to_Z_28,i);
      int __sd_le_3;
      __sd_le_3 = __gmpz_cmp(__sd_Z_cst_16,__sd_Z_to_Z_28);
      __gmpz_clear(__sd_Z_cst_16);
      __gmpz_clear(__sd_Z_to_Z_28);
      int __sd_and_4;
      __sd_and_4 = __sd_le_3 <= 0;
      if(__sd_and_4) {
        mpz_t __sd_Z_to_Z_29;
        __gmpz_init_set_si(__sd_Z_to_Z_29,i);
        mpz_t __sd_Z_to_Z_30;
        __gmpz_init_set_si(__sd_Z_to_Z_30,strlen);
        mpz_t __sd_Z_to_Z_31;
        __gmpz_init_set_si(__sd_Z_to_Z_31,sublen);
        mpz_t __sd_Z_sub_7;
        __gmpz_init(__sd_Z_sub_7);
        __gmpz_sub(__sd_Z_sub_7,__sd_Z_to_Z_30,__sd_Z_to_Z_31);
        __gmpz_clear(__sd_Z_to_Z_30);
        __gmpz_clear(__sd_Z_to_Z_31);
        int __sd_le_4;
        __sd_le_4 = __gmpz_cmp(__sd_Z_to_Z_29,__sd_Z_sub_7);
        __gmpz_clear(__sd_Z_to_Z_29);
        __gmpz_clear(__sd_Z_sub_7);
        __sd_and_4 = __sd_le_4 <= 0;
      }
      if(! __sd_and_4) {
        pathcrawler_assert_exception("not established",6);
      }
      int __sd_forall_5;
      __sd_forall_5 = 1;
      {
        mpz_t __q_k;
        mpz_t __sd_Z_cst_18;
        __gmpz_init_set_str(__sd_Z_cst_18,"0",10);
        mpz_t __sd_Z_to_Z_36;
        __gmpz_init_set_si(__sd_Z_to_Z_36,i);
        __gmpz_init_set(__q_k,__sd_Z_cst_18);
        int __sd_forall_cmp_5;
        __sd_forall_cmp_5 = __gmpz_cmp(__q_k,__sd_Z_to_Z_36);
        while(__sd_forall_cmp_5 < 0 && __sd_forall_5) {
          int __sd_exists_2;
          __sd_exists_2 = 0;
          {
            mpz_t __q_l;
            mpz_t __sd_Z_cst_19;
            __gmpz_init_set_str(__sd_Z_cst_19,"0",10);
            mpz_t __sd_Z_to_Z_37;
            __gmpz_init_set_si(__sd_Z_to_Z_37,sublen);
            __gmpz_init_set(__q_l,__sd_Z_cst_19);
            int __sd_exists_cmp_2;
            __sd_exists_cmp_2 = __gmpz_cmp(__q_l,__sd_Z_to_Z_37);
            while(__sd_exists_cmp_2 < 0 && ! __sd_exists_2) {
              mpz_t __sd_Z_lval_12;
              __gmpz_init_set(__sd_Z_lval_12,__q_k);
              mpz_t __sd_Z_lval_13;
              __gmpz_init_set(__sd_Z_lval_13,__q_l);
              mpz_t __sd_Z_add_5;
              __gmpz_init(__sd_Z_add_5);
              __gmpz_add(__sd_Z_add_5,__sd_Z_lval_12,__sd_Z_lval_13);
              __gmpz_clear(__sd_Z_lval_12);
              __gmpz_clear(__sd_Z_lval_13);
              int __sd_to_ctype_12;
              __sd_to_ctype_12 = (int)__gmpz_get_si(__sd_Z_add_5);
              __gmpz_clear(__sd_Z_add_5);
              mpz_t __sd_Z_lval_14;
              __gmpz_init_set(__sd_Z_lval_14,__q_l);
              int __sd_to_ctype_13;
              __sd_to_ctype_13 = (int)__gmpz_get_si(__sd_Z_lval_14);
              __gmpz_clear(__sd_Z_lval_14);
              __sd_exists_2 = (int)*(str + __sd_to_ctype_12) != (int)*(
                              substr + __sd_to_ctype_13);
              __gmpz_add_ui(__q_l,__q_l,1);
              __sd_exists_cmp_2 = __gmpz_cmp(__q_l,__sd_Z_to_Z_37);
            }
            __gmpz_clear(__q_l);
            __gmpz_clear(__sd_Z_cst_19);
            __gmpz_clear(__sd_Z_to_Z_37);
          }
          __sd_forall_5 = __sd_exists_2;
          __gmpz_add_ui(__q_k,__q_k,1);
          __sd_forall_cmp_5 = __gmpz_cmp(__q_k,__sd_Z_to_Z_36);
        }
        __gmpz_clear(__q_k);
        __gmpz_clear(__sd_Z_cst_18);
        __gmpz_clear(__sd_Z_to_Z_36);
      }
      if(! __sd_forall_5) {
        pathcrawler_assert_exception("not established",27);
      }
      while (1) {
        if (! (i < strlen - sublen)) break;mpz_t __sd_Z_to_Z_40;
        __gmpz_init_set_si(__sd_Z_to_Z_40,strlen);
        mpz_t __sd_Z_to_Z_41;
        __gmpz_init_set_si(__sd_Z_to_Z_41,sublen);
        mpz_t __sd_Z_sub_9;
        __gmpz_init(__sd_Z_sub_9);
        __gmpz_sub(__sd_Z_sub_9,__sd_Z_to_Z_40,__sd_Z_to_Z_41);
        __gmpz_clear(__sd_Z_to_Z_40);
        __gmpz_clear(__sd_Z_to_Z_41);
        mpz_t __sd_Z_to_Z_42;
        __gmpz_init_set_si(__sd_Z_to_Z_42,i);
        mpz_t __sd_Z_sub_10;
        __gmpz_init(__sd_Z_sub_10);
        __gmpz_sub(__sd_Z_sub_10,__sd_Z_sub_9,__sd_Z_to_Z_42);
        __gmpz_clear(__sd_Z_sub_9);
        __gmpz_clear(__sd_Z_to_Z_42);
        int __sd_variant_pos_1;
        __sd_variant_pos_1 = __gmpz_cmp_ui(__sd_Z_sub_10,0);
        if(__sd_variant_pos_1 < 0) {
          pathcrawler_assert_exception("non positive",0);
        }
        {
          int j;
          j = 0;
          j = 0;
          {
            mpz_t __sd_Z_cst_12;
            __gmpz_init_set_str(__sd_Z_cst_12,"0",10);
            mpz_t __sd_Z_to_Z_18;
            __gmpz_init_set_si(__sd_Z_to_Z_18,j);
            int __sd_le_1;
            __sd_le_1 = __gmpz_cmp(__sd_Z_cst_12,__sd_Z_to_Z_18);
            __gmpz_clear(__sd_Z_cst_12);
            __gmpz_clear(__sd_Z_to_Z_18);
            int __sd_and_2;
            __sd_and_2 = __sd_le_1 <= 0;
            if(__sd_and_2) {
              __sd_and_2 = j <= sublen;
            }
            if(! __sd_and_2) {
              pathcrawler_assert_exception("not established",21);
            }
            int __sd_forall_3;
            __sd_forall_3 = 1;
            {
              mpz_t __q_k;
              mpz_t __sd_Z_cst_14;
              __gmpz_init_set_str(__sd_Z_cst_14,"0",10);
              mpz_t __sd_Z_to_Z_20;
              __gmpz_init_set_si(__sd_Z_to_Z_20,j);
              __gmpz_init_set(__q_k,__sd_Z_cst_14);
              int __sd_forall_cmp_3;
              __sd_forall_cmp_3 = __gmpz_cmp(__q_k,__sd_Z_to_Z_20);
              while(__sd_forall_cmp_3 < 0 && __sd_forall_3) {
                mpz_t __sd_Z_to_Z_21;
                __gmpz_init_set_si(__sd_Z_to_Z_21,i);
                mpz_t __sd_Z_lval_8;
                __gmpz_init_set(__sd_Z_lval_8,__q_k);
                mpz_t __sd_Z_add_3;
                __gmpz_init(__sd_Z_add_3);
                __gmpz_add(__sd_Z_add_3,__sd_Z_to_Z_21,__sd_Z_lval_8);
                __gmpz_clear(__sd_Z_to_Z_21);
                __gmpz_clear(__sd_Z_lval_8);
                int __sd_to_ctype_8;
                __sd_to_ctype_8 = (int)__gmpz_get_si(__sd_Z_add_3);
                __gmpz_clear(__sd_Z_add_3);
                mpz_t __sd_Z_lval_9;
                __gmpz_init_set(__sd_Z_lval_9,__q_k);
                int __sd_to_ctype_9;
                __sd_to_ctype_9 = (int)__gmpz_get_si(__sd_Z_lval_9);
                __gmpz_clear(__sd_Z_lval_9);
                __sd_forall_3 = (int)*(str + __sd_to_ctype_8) == (int)*(
                                substr + __sd_to_ctype_9);
                __gmpz_add_ui(__q_k,__q_k,1);
                __sd_forall_cmp_3 = __gmpz_cmp(__q_k,__sd_Z_to_Z_20);
              }
              __gmpz_clear(__q_k);
              __gmpz_clear(__sd_Z_cst_14);
              __gmpz_clear(__sd_Z_to_Z_20);
            }
            if(! __sd_forall_3) {
              pathcrawler_assert_exception("not established",23);
            }
            while (1) {
              if (! (j < sublen)) break;mpz_t __sd_Z_to_Z_24;
              __gmpz_init_set_si(__sd_Z_to_Z_24,sublen);
              mpz_t __sd_Z_to_Z_25;
              __gmpz_init_set_si(__sd_Z_to_Z_25,j);
              mpz_t __sd_Z_sub_5;
              __gmpz_init(__sd_Z_sub_5);
              __gmpz_sub(__sd_Z_sub_5,__sd_Z_to_Z_24,__sd_Z_to_Z_25);
              __gmpz_clear(__sd_Z_to_Z_24);
              __gmpz_clear(__sd_Z_to_Z_25);
              int __sd_variant_pos_0;
              __sd_variant_pos_0 = __gmpz_cmp_ui(__sd_Z_sub_5,0);
              if(__sd_variant_pos_0 < 0) {
                pathcrawler_assert_exception("non positive",28);
              }
              if ((int)*(str + (i + j)) != (int)*(substr + j)) break;
              j ++;mpz_t __sd_Z_cst_13;
              __gmpz_init_set_str(__sd_Z_cst_13,"0",10);
              mpz_t __sd_Z_to_Z_19;
              __gmpz_init_set_si(__sd_Z_to_Z_19,j);
              int __sd_le_2;
              __sd_le_2 = __gmpz_cmp(__sd_Z_cst_13,__sd_Z_to_Z_19);
              __gmpz_clear(__sd_Z_cst_13);
              __gmpz_clear(__sd_Z_to_Z_19);
              int __sd_and_3;
              __sd_and_3 = __sd_le_2 <= 0;
              if(__sd_and_3) {
                __sd_and_3 = j <= sublen;
              }
              if(! __sd_and_3) {
                pathcrawler_assert_exception("not preserved",21);
              }
              int __sd_forall_4;
              __sd_forall_4 = 1;
              {
                mpz_t __q_k;
                mpz_t __sd_Z_cst_15;
                __gmpz_init_set_str(__sd_Z_cst_15,"0",10);
                mpz_t __sd_Z_to_Z_22;
                __gmpz_init_set_si(__sd_Z_to_Z_22,j);
                __gmpz_init_set(__q_k,__sd_Z_cst_15);
                int __sd_forall_cmp_4;
                __sd_forall_cmp_4 = __gmpz_cmp(__q_k,__sd_Z_to_Z_22);
                while(__sd_forall_cmp_4 < 0 && __sd_forall_4) {
                  mpz_t __sd_Z_to_Z_23;
                  __gmpz_init_set_si(__sd_Z_to_Z_23,i);
                  mpz_t __sd_Z_lval_10;
                  __gmpz_init_set(__sd_Z_lval_10,__q_k);
                  mpz_t __sd_Z_add_4;
                  __gmpz_init(__sd_Z_add_4);
                  __gmpz_add(__sd_Z_add_4,__sd_Z_to_Z_23,__sd_Z_lval_10);
                  __gmpz_clear(__sd_Z_to_Z_23);
                  __gmpz_clear(__sd_Z_lval_10);
                  int __sd_to_ctype_10;
                  __sd_to_ctype_10 = (int)__gmpz_get_si(__sd_Z_add_4);
                  __gmpz_clear(__sd_Z_add_4);
                  mpz_t __sd_Z_lval_11;
                  __gmpz_init_set(__sd_Z_lval_11,__q_k);
                  int __sd_to_ctype_11;
                  __sd_to_ctype_11 = (int)__gmpz_get_si(__sd_Z_lval_11);
                  __gmpz_clear(__sd_Z_lval_11);
                  __sd_forall_4 = (int)*(str + __sd_to_ctype_10) == (int)*(
                                  substr + __sd_to_ctype_11);
                  __gmpz_add_ui(__q_k,__q_k,1);
                  __sd_forall_cmp_4 = __gmpz_cmp(__q_k,__sd_Z_to_Z_22);
                }
                __gmpz_clear(__q_k);
                __gmpz_clear(__sd_Z_cst_15);
                __gmpz_clear(__sd_Z_to_Z_22);
              }
              if(! __sd_forall_4) {
                pathcrawler_assert_exception("not preserved",23);
              }
              mpz_t __sd_Z_to_Z_26;
              __gmpz_init_set_si(__sd_Z_to_Z_26,sublen);
              mpz_t __sd_Z_to_Z_27;
              __gmpz_init_set_si(__sd_Z_to_Z_27,j);
              mpz_t __sd_Z_sub_6;
              __gmpz_init(__sd_Z_sub_6);
              __gmpz_sub(__sd_Z_sub_6,__sd_Z_to_Z_26,__sd_Z_to_Z_27);
              __gmpz_clear(__sd_Z_to_Z_26);
              __gmpz_clear(__sd_Z_to_Z_27);
              int __sd_variant_decr_0;
              __sd_variant_decr_0 = __gmpz_cmp(__sd_Z_sub_6,__sd_Z_sub_5);
              if(__sd_variant_decr_0 >= 0) {
                pathcrawler_assert_exception("non decreasing",28);
              }
              __gmpz_clear(__sd_Z_sub_5);
              }
               
          }
          if (j == sublen) {
            __retres = i;
            goto return_label;
          }
        }
        i ++;mpz_t __sd_Z_cst_17;
        __gmpz_init_set_str(__sd_Z_cst_17,"0",10);
        mpz_t __sd_Z_to_Z_32;
        __gmpz_init_set_si(__sd_Z_to_Z_32,i);
        int __sd_le_5;
        __sd_le_5 = __gmpz_cmp(__sd_Z_cst_17,__sd_Z_to_Z_32);
        __gmpz_clear(__sd_Z_cst_17);
        __gmpz_clear(__sd_Z_to_Z_32);
        int __sd_and_5;
        __sd_and_5 = __sd_le_5 <= 0;
        if(__sd_and_5) {
          mpz_t __sd_Z_to_Z_33;
          __gmpz_init_set_si(__sd_Z_to_Z_33,i);
          mpz_t __sd_Z_to_Z_34;
          __gmpz_init_set_si(__sd_Z_to_Z_34,strlen);
          mpz_t __sd_Z_to_Z_35;
          __gmpz_init_set_si(__sd_Z_to_Z_35,sublen);
          mpz_t __sd_Z_sub_8;
          __gmpz_init(__sd_Z_sub_8);
          __gmpz_sub(__sd_Z_sub_8,__sd_Z_to_Z_34,__sd_Z_to_Z_35);
          __gmpz_clear(__sd_Z_to_Z_34);
          __gmpz_clear(__sd_Z_to_Z_35);
          int __sd_le_6;
          __sd_le_6 = __gmpz_cmp(__sd_Z_to_Z_33,__sd_Z_sub_8);
          __gmpz_clear(__sd_Z_to_Z_33);
          __gmpz_clear(__sd_Z_sub_8);
          __sd_and_5 = __sd_le_6 <= 0;
        }
        if(! __sd_and_5) {
          pathcrawler_assert_exception("not preserved",6);
        }
        int __sd_forall_6;
        __sd_forall_6 = 1;
        {
          mpz_t __q_k;
          mpz_t __sd_Z_cst_20;
          __gmpz_init_set_str(__sd_Z_cst_20,"0",10);
          mpz_t __sd_Z_to_Z_38;
          __gmpz_init_set_si(__sd_Z_to_Z_38,i);
          __gmpz_init_set(__q_k,__sd_Z_cst_20);
          int __sd_forall_cmp_6;
          __sd_forall_cmp_6 = __gmpz_cmp(__q_k,__sd_Z_to_Z_38);
          while(__sd_forall_cmp_6 < 0 && __sd_forall_6) {
            int __sd_exists_3;
            __sd_exists_3 = 0;
            {
              mpz_t __q_l;
              mpz_t __sd_Z_cst_21;
              __gmpz_init_set_str(__sd_Z_cst_21,"0",10);
              mpz_t __sd_Z_to_Z_39;
              __gmpz_init_set_si(__sd_Z_to_Z_39,sublen);
              __gmpz_init_set(__q_l,__sd_Z_cst_21);
              int __sd_exists_cmp_3;
              __sd_exists_cmp_3 = __gmpz_cmp(__q_l,__sd_Z_to_Z_39);
              while(__sd_exists_cmp_3 < 0 && ! __sd_exists_3) {
                mpz_t __sd_Z_lval_15;
                __gmpz_init_set(__sd_Z_lval_15,__q_k);
                mpz_t __sd_Z_lval_16;
                __gmpz_init_set(__sd_Z_lval_16,__q_l);
                mpz_t __sd_Z_add_6;
                __gmpz_init(__sd_Z_add_6);
                __gmpz_add(__sd_Z_add_6,__sd_Z_lval_15,__sd_Z_lval_16);
                __gmpz_clear(__sd_Z_lval_15);
                __gmpz_clear(__sd_Z_lval_16);
                int __sd_to_ctype_14;
                __sd_to_ctype_14 = (int)__gmpz_get_si(__sd_Z_add_6);
                __gmpz_clear(__sd_Z_add_6);
                mpz_t __sd_Z_lval_17;
                __gmpz_init_set(__sd_Z_lval_17,__q_l);
                int __sd_to_ctype_15;
                __sd_to_ctype_15 = (int)__gmpz_get_si(__sd_Z_lval_17);
                __gmpz_clear(__sd_Z_lval_17);
                __sd_exists_3 = (int)*(str + __sd_to_ctype_14) != (int)*(
                                substr + __sd_to_ctype_15);
                __gmpz_add_ui(__q_l,__q_l,1);
                __sd_exists_cmp_3 = __gmpz_cmp(__q_l,__sd_Z_to_Z_39);
              }
              __gmpz_clear(__q_l);
              __gmpz_clear(__sd_Z_cst_21);
              __gmpz_clear(__sd_Z_to_Z_39);
            }
            __sd_forall_6 = __sd_exists_3;
            __gmpz_add_ui(__q_k,__q_k,1);
            __sd_forall_cmp_6 = __gmpz_cmp(__q_k,__sd_Z_to_Z_38);
          }
          __gmpz_clear(__q_k);
          __gmpz_clear(__sd_Z_cst_20);
          __gmpz_clear(__sd_Z_to_Z_38);
        }
        if(! __sd_forall_6) {
          pathcrawler_assert_exception("not preserved",27);
        }
        mpz_t __sd_Z_to_Z_43;
        __gmpz_init_set_si(__sd_Z_to_Z_43,strlen);
        mpz_t __sd_Z_to_Z_44;
        __gmpz_init_set_si(__sd_Z_to_Z_44,sublen);
        mpz_t __sd_Z_sub_11;
        __gmpz_init(__sd_Z_sub_11);
        __gmpz_sub(__sd_Z_sub_11,__sd_Z_to_Z_43,__sd_Z_to_Z_44);
        __gmpz_clear(__sd_Z_to_Z_43);
        __gmpz_clear(__sd_Z_to_Z_44);
        mpz_t __sd_Z_to_Z_45;
        __gmpz_init_set_si(__sd_Z_to_Z_45,i);
        mpz_t __sd_Z_sub_12;
        __gmpz_init(__sd_Z_sub_12);
        __gmpz_sub(__sd_Z_sub_12,__sd_Z_sub_11,__sd_Z_to_Z_45);
        __gmpz_clear(__sd_Z_sub_11);
        __gmpz_clear(__sd_Z_to_Z_45);
        int __sd_variant_decr_1;
        __sd_variant_decr_1 = __gmpz_cmp(__sd_Z_sub_12,__sd_Z_sub_10);
        if(__sd_variant_decr_1 >= 0) {
          pathcrawler_assert_exception("non decreasing",0);
        }
        __gmpz_clear(__sd_Z_sub_10);
        }
         
    }
    __retres = -1;
    return_label:
      {
        int __sd_exists_0;
        __sd_exists_0 = 0;
        {
          mpz_t __q_i;
          mpz_t __sd_Z_cst_5;
          __gmpz_init_set_str(__sd_Z_cst_5,"0",10);
          mpz_t __sd_Z_to_Z_3;
          __gmpz_init_set_si(__sd_Z_to_Z_3,strlen);
          mpz_t __sd_Z_to_Z_4;
          __gmpz_init_set_si(__sd_Z_to_Z_4,sublen);
          mpz_t __sd_Z_sub_2;
          __gmpz_init(__sd_Z_sub_2);
          __gmpz_sub(__sd_Z_sub_2,__sd_Z_to_Z_3,__sd_Z_to_Z_4);
          __gmpz_clear(__sd_Z_to_Z_3);
          __gmpz_clear(__sd_Z_to_Z_4);
          __gmpz_init_set(__q_i,__sd_Z_cst_5);
          int __sd_exists_cmp_0;
          __sd_exists_cmp_0 = __gmpz_cmp(__q_i,__sd_Z_sub_2);
          while(__sd_exists_cmp_0 < 0 && ! __sd_exists_0) {
            int __sd_forall_0;
            __sd_forall_0 = 1;
            {
              mpz_t __q_j;
              mpz_t __sd_Z_cst_6;
              __gmpz_init_set_str(__sd_Z_cst_6,"0",10);
              mpz_t __sd_Z_to_Z_5;
              __gmpz_init_set_si(__sd_Z_to_Z_5,sublen);
              __gmpz_init_set(__q_j,__sd_Z_cst_6);
              int __sd_forall_cmp_0;
              __sd_forall_cmp_0 = __gmpz_cmp(__q_j,__sd_Z_to_Z_5);
              while(__sd_forall_cmp_0 < 0 && __sd_forall_0) {
                mpz_t __sd_Z_lval_0;
                __gmpz_init_set(__sd_Z_lval_0,__q_i);
                mpz_t __sd_Z_lval_1;
                __gmpz_init_set(__sd_Z_lval_1,__q_j);
                mpz_t __sd_Z_add_0;
                __gmpz_init(__sd_Z_add_0);
                __gmpz_add(__sd_Z_add_0,__sd_Z_lval_0,__sd_Z_lval_1);
                __gmpz_clear(__sd_Z_lval_0);
                __gmpz_clear(__sd_Z_lval_1);
                int __sd_to_ctype_0;
                __sd_to_ctype_0 = (int)__gmpz_get_si(__sd_Z_add_0);
                __gmpz_clear(__sd_Z_add_0);
                mpz_t __sd_Z_lval_2;
                __gmpz_init_set(__sd_Z_lval_2,__q_j);
                int __sd_to_ctype_1;
                __sd_to_ctype_1 = (int)__gmpz_get_si(__sd_Z_lval_2);
                __gmpz_clear(__sd_Z_lval_2);
                __sd_forall_0 = (int)*(str + __sd_to_ctype_0) == (int)*(
                                substr + __sd_to_ctype_1);
                __gmpz_add_ui(__q_j,__q_j,1);
                __sd_forall_cmp_0 = __gmpz_cmp(__q_j,__sd_Z_to_Z_5);
              }
              __gmpz_clear(__q_j);
              __gmpz_clear(__sd_Z_cst_6);
              __gmpz_clear(__sd_Z_to_Z_5);
            }
            __sd_exists_0 = __sd_forall_0;
            __gmpz_add_ui(__q_i,__q_i,1);
            __sd_exists_cmp_0 = __gmpz_cmp(__q_i,__sd_Z_sub_2);
          }
          __gmpz_clear(__q_i);
          __gmpz_clear(__sd_Z_cst_5);
          __gmpz_clear(__sd_Z_sub_2);
        }
        if(__sd_exists_0) {
          mpz_t __sd_Z_cst_7;
          __gmpz_init_set_str(__sd_Z_cst_7,"0",10);
          mpz_t __sd_Z_to_Z_6;
          __gmpz_init_set_si(__sd_Z_to_Z_6,__retres);
          int __sd_le_0;
          __sd_le_0 = __gmpz_cmp(__sd_Z_cst_7,__sd_Z_to_Z_6);
          __gmpz_clear(__sd_Z_cst_7);
          __gmpz_clear(__sd_Z_to_Z_6);
          int __sd_and_1;
          __sd_and_1 = __sd_le_0 <= 0;
          if(__sd_and_1) {
            mpz_t __sd_Z_to_Z_7;
            __gmpz_init_set_si(__sd_Z_to_Z_7,__retres);
            mpz_t __sd_Z_to_Z_8;
            __gmpz_init_set_si(__sd_Z_to_Z_8,old_strlen);
            mpz_t __sd_Z_to_Z_9;
            __gmpz_init_set_si(__sd_Z_to_Z_9,old_sublen);
            mpz_t __sd_Z_sub_3;
            __gmpz_init(__sd_Z_sub_3);
            __gmpz_sub(__sd_Z_sub_3,__sd_Z_to_Z_8,__sd_Z_to_Z_9);
            __gmpz_clear(__sd_Z_to_Z_8);
            __gmpz_clear(__sd_Z_to_Z_9);
            int __sd_lt_1;
            __sd_lt_1 = __gmpz_cmp(__sd_Z_to_Z_7,__sd_Z_sub_3);
            __gmpz_clear(__sd_Z_to_Z_7);
            __gmpz_clear(__sd_Z_sub_3);
            __sd_and_1 = __sd_lt_1 < 0;
          }
          if(! __sd_and_1) {
            pathcrawler_assert_exception("",7);
          }
          int __sd_forall_1;
          __sd_forall_1 = 1;
          {
            mpz_t __q_j;
            mpz_t __sd_Z_cst_8;
            __gmpz_init_set_str(__sd_Z_cst_8,"0",10);
            mpz_t __sd_Z_to_Z_10;
            __gmpz_init_set_si(__sd_Z_to_Z_10,old_sublen);
            __gmpz_init_set(__q_j,__sd_Z_cst_8);
            int __sd_forall_cmp_1;
            __sd_forall_cmp_1 = __gmpz_cmp(__q_j,__sd_Z_to_Z_10);
            while(__sd_forall_cmp_1 < 0 && __sd_forall_1) {
              mpz_t __sd_Z_to_Z_11;
              __gmpz_init_set_si(__sd_Z_to_Z_11,__retres);
              mpz_t __sd_Z_lval_3;
              __gmpz_init_set(__sd_Z_lval_3,__q_j);
              mpz_t __sd_Z_add_1;
              __gmpz_init(__sd_Z_add_1);
              __gmpz_add(__sd_Z_add_1,__sd_Z_to_Z_11,__sd_Z_lval_3);
              __gmpz_clear(__sd_Z_to_Z_11);
              __gmpz_clear(__sd_Z_lval_3);
              int __sd_to_ctype_2;
              __sd_to_ctype_2 = (int)__gmpz_get_si(__sd_Z_add_1);
              __gmpz_clear(__sd_Z_add_1);
              mpz_t __sd_Z_lval_4;
              __gmpz_init_set(__sd_Z_lval_4,__q_j);
              int __sd_to_ctype_3;
              __sd_to_ctype_3 = (int)__gmpz_get_si(__sd_Z_lval_4);
              __gmpz_clear(__sd_Z_lval_4);
              __sd_forall_1 = (int)*(old_str + __sd_to_ctype_2) == (int)*(
                              old_substr + __sd_to_ctype_3);
              __gmpz_add_ui(__q_j,__q_j,1);
              __sd_forall_cmp_1 = __gmpz_cmp(__q_j,__sd_Z_to_Z_10);
            }
            __gmpz_clear(__q_j);
            __gmpz_clear(__sd_Z_cst_8);
            __gmpz_clear(__sd_Z_to_Z_10);
          }
          if(! __sd_forall_1) {
            pathcrawler_assert_exception("",5);
          }
        }
        int __sd_forall_2;
        __sd_forall_2 = 1;
        {
          mpz_t __q_i;
          mpz_t __sd_Z_cst_9;
          __gmpz_init_set_str(__sd_Z_cst_9,"0",10);
          mpz_t __sd_Z_to_Z_12;
          __gmpz_init_set_si(__sd_Z_to_Z_12,strlen);
          mpz_t __sd_Z_to_Z_13;
          __gmpz_init_set_si(__sd_Z_to_Z_13,sublen);
          mpz_t __sd_Z_sub_4;
          __gmpz_init(__sd_Z_sub_4);
          __gmpz_sub(__sd_Z_sub_4,__sd_Z_to_Z_12,__sd_Z_to_Z_13);
          __gmpz_clear(__sd_Z_to_Z_12);
          __gmpz_clear(__sd_Z_to_Z_13);
          __gmpz_init_set(__q_i,__sd_Z_cst_9);
          int __sd_forall_cmp_2;
          __sd_forall_cmp_2 = __gmpz_cmp(__q_i,__sd_Z_sub_4);
          while(__sd_forall_cmp_2 < 0 && __sd_forall_2) {
            int __sd_exists_1;
            __sd_exists_1 = 0;
            {
              mpz_t __q_j;
              mpz_t __sd_Z_cst_10;
              __gmpz_init_set_str(__sd_Z_cst_10,"0",10);
              mpz_t __sd_Z_to_Z_14;
              __gmpz_init_set_si(__sd_Z_to_Z_14,sublen);
              __gmpz_init_set(__q_j,__sd_Z_cst_10);
              int __sd_exists_cmp_1;
              __sd_exists_cmp_1 = __gmpz_cmp(__q_j,__sd_Z_to_Z_14);
              while(__sd_exists_cmp_1 < 0 && ! __sd_exists_1) {
                mpz_t __sd_Z_lval_5;
                __gmpz_init_set(__sd_Z_lval_5,__q_i);
                mpz_t __sd_Z_lval_6;
                __gmpz_init_set(__sd_Z_lval_6,__q_j);
                mpz_t __sd_Z_add_2;
                __gmpz_init(__sd_Z_add_2);
                __gmpz_add(__sd_Z_add_2,__sd_Z_lval_5,__sd_Z_lval_6);
                __gmpz_clear(__sd_Z_lval_5);
                __gmpz_clear(__sd_Z_lval_6);
                int __sd_to_ctype_4;
                __sd_to_ctype_4 = (int)__gmpz_get_si(__sd_Z_add_2);
                __gmpz_clear(__sd_Z_add_2);
                mpz_t __sd_Z_lval_7;
                __gmpz_init_set(__sd_Z_lval_7,__q_j);
                int __sd_to_ctype_5;
                __sd_to_ctype_5 = (int)__gmpz_get_si(__sd_Z_lval_7);
                __gmpz_clear(__sd_Z_lval_7);
                __sd_exists_1 = (int)*(str + __sd_to_ctype_4) != (int)*(
                                substr + __sd_to_ctype_5);
                __gmpz_add_ui(__q_j,__q_j,1);
                __sd_exists_cmp_1 = __gmpz_cmp(__q_j,__sd_Z_to_Z_14);
              }
              __gmpz_clear(__q_j);
              __gmpz_clear(__sd_Z_cst_10);
              __gmpz_clear(__sd_Z_to_Z_14);
            }
            __sd_forall_2 = __sd_exists_1;
            __gmpz_add_ui(__q_i,__q_i,1);
            __sd_forall_cmp_2 = __gmpz_cmp(__q_i,__sd_Z_sub_4);
          }
          __gmpz_clear(__q_i);
          __gmpz_clear(__sd_Z_cst_9);
          __gmpz_clear(__sd_Z_sub_4);
        }
        if(__sd_forall_2) {
          mpz_t __sd_Z_to_Z_15;
          __gmpz_init_set_si(__sd_Z_to_Z_15,__retres);
          mpz_t __sd_Z_cst_11;
          __gmpz_init_set_str(__sd_Z_cst_11,"1",10);
          mpz_t __sd_Z_neg_0;
          __gmpz_init(__sd_Z_neg_0);
          __gmpz_ui_sub(__sd_Z_neg_0,0,__sd_Z_cst_11);
          __gmpz_clear(__sd_Z_cst_11);
          int __sd_eq_0;
          __sd_eq_0 = __gmpz_cmp(__sd_Z_to_Z_15,__sd_Z_neg_0);
          __gmpz_clear(__sd_Z_to_Z_15);
          __gmpz_clear(__sd_Z_neg_0);
          if(! (__sd_eq_0 == 0)) {
            pathcrawler_assert_exception("",3);
          }
        }
      }
      free(old_ptr_str);
      free(old_ptr_substr);
      return __retres;
  }
}

int delete_substr_precond(char *str, int strlen, char *substr, int sublen,
                          char *dest)
{
  return 1;
}

int delete_substr(char *str, int strlen, char *substr, int sublen, char *dest)
{
  char *old_str;
  char *old_ptr_str;
  old_str = str;
  mpz_t __sd_Z_to_Z_51;
  __gmpz_init_set_si(__sd_Z_to_Z_51,strlen);
  unsigned long __sd_to_ctype_20;
  __sd_to_ctype_20 = __gmpz_get_ui(__sd_Z_to_Z_51);
  __gmpz_clear(__sd_Z_to_Z_51);
  unsigned long __sd_iter_2;
  old_ptr_str = (char *)malloc(__sd_to_ctype_20 * (unsigned long)sizeof(char));
  __sd_iter_2 = 0;
  while(__sd_iter_2 < __sd_to_ctype_20) {
    *(old_ptr_str + __sd_iter_2) = *(str + __sd_iter_2);
    __sd_iter_2 ++;
  }
  int old_strlen;
  old_strlen = strlen;
  char *old_substr;
  char *old_ptr_substr;
  old_substr = substr;
  mpz_t __sd_Z_to_Z_52;
  __gmpz_init_set_si(__sd_Z_to_Z_52,sublen);
  unsigned long __sd_to_ctype_21;
  __sd_to_ctype_21 = __gmpz_get_ui(__sd_Z_to_Z_52);
  __gmpz_clear(__sd_Z_to_Z_52);
  unsigned long __sd_iter_3;
  old_ptr_substr = (char *)malloc(__sd_to_ctype_21 * (unsigned long)sizeof(char));
  __sd_iter_3 = 0;
  while(__sd_iter_3 < __sd_to_ctype_21) {
    *(old_ptr_substr + __sd_iter_3) = *(substr + __sd_iter_3);
    __sd_iter_3 ++;
  }
  int old_sublen;
  old_sublen = sublen;
  char *old_dest;
  char *old_ptr_dest;
  old_dest = dest;
  mpz_t __sd_Z_to_Z_53;
  __gmpz_init_set_si(__sd_Z_to_Z_53,strlen);
  unsigned long __sd_to_ctype_22;
  __sd_to_ctype_22 = __gmpz_get_ui(__sd_Z_to_Z_53);
  __gmpz_clear(__sd_Z_to_Z_53);
  unsigned long __sd_iter_4;
  old_ptr_dest = (char *)malloc(__sd_to_ctype_22 * (unsigned long)sizeof(char));
  __sd_iter_4 = 0;
  while(__sd_iter_4 < __sd_to_ctype_22) {
    *(old_ptr_dest + __sd_iter_4) = *(dest + __sd_iter_4);
    __sd_iter_4 ++;
  }
  {
    int __retres;
    int start;
    int j;
    int k;
    start = find_substr(str,strlen,substr,sublen);
    if (start == -1) {
      k = 0;
      while (1) {
        if (! (k < strlen)) break;*(dest + k) = *(str + k);
                                  k ++;}
         
      __retres = 0;
      goto return_label;
    }
    j = 0;
    while (1) {
      if (! (j < start)) break;*(dest + j) = *(str + j);
                               j ++;}
       
    j = start;
    while (1) {
      if (! (j < strlen - sublen)) break;*(dest + j) = *(str + (j + sublen));
                                         j ++;}
       
    __retres = 1;
    return_label:
      {
        int __sd_exists_4;
        __sd_exists_4 = 0;
        {
          mpz_t __q_i;
          mpz_t __sd_Z_cst_22;
          __gmpz_init_set_str(__sd_Z_cst_22,"0",10);
          mpz_t __sd_Z_to_Z_46;
          __gmpz_init_set_si(__sd_Z_to_Z_46,strlen);
          mpz_t __sd_Z_to_Z_47;
          __gmpz_init_set_si(__sd_Z_to_Z_47,sublen);
          mpz_t __sd_Z_sub_13;
          __gmpz_init(__sd_Z_sub_13);
          __gmpz_sub(__sd_Z_sub_13,__sd_Z_to_Z_46,__sd_Z_to_Z_47);
          __gmpz_clear(__sd_Z_to_Z_46);
          __gmpz_clear(__sd_Z_to_Z_47);
          __gmpz_init_set(__q_i,__sd_Z_cst_22);
          int __sd_exists_cmp_4;
          __sd_exists_cmp_4 = __gmpz_cmp(__q_i,__sd_Z_sub_13);
          while(__sd_exists_cmp_4 < 0 && ! __sd_exists_4) {
            int __sd_forall_7;
            __sd_forall_7 = 1;
            {
              mpz_t __q_j;
              mpz_t __sd_Z_cst_23;
              __gmpz_init_set_str(__sd_Z_cst_23,"0",10);
              mpz_t __sd_Z_to_Z_48;
              __gmpz_init_set_si(__sd_Z_to_Z_48,sublen);
              __gmpz_init_set(__q_j,__sd_Z_cst_23);
              int __sd_forall_cmp_7;
              __sd_forall_cmp_7 = __gmpz_cmp(__q_j,__sd_Z_to_Z_48);
              while(__sd_forall_cmp_7 < 0 && __sd_forall_7) {
                mpz_t __sd_Z_lval_18;
                __gmpz_init_set(__sd_Z_lval_18,__q_i);
                mpz_t __sd_Z_lval_19;
                __gmpz_init_set(__sd_Z_lval_19,__q_j);
                mpz_t __sd_Z_add_7;
                __gmpz_init(__sd_Z_add_7);
                __gmpz_add(__sd_Z_add_7,__sd_Z_lval_18,__sd_Z_lval_19);
                __gmpz_clear(__sd_Z_lval_18);
                __gmpz_clear(__sd_Z_lval_19);
                int __sd_to_ctype_16;
                __sd_to_ctype_16 = (int)__gmpz_get_si(__sd_Z_add_7);
                __gmpz_clear(__sd_Z_add_7);
                mpz_t __sd_Z_lval_20;
                __gmpz_init_set(__sd_Z_lval_20,__q_j);
                int __sd_to_ctype_17;
                __sd_to_ctype_17 = (int)__gmpz_get_si(__sd_Z_lval_20);
                __gmpz_clear(__sd_Z_lval_20);
                __sd_forall_7 = (int)*(str + __sd_to_ctype_16) != (int)*(
                                substr + __sd_to_ctype_17);
                __gmpz_add_ui(__q_j,__q_j,1);
                __sd_forall_cmp_7 = __gmpz_cmp(__q_j,__sd_Z_to_Z_48);
              }
              __gmpz_clear(__q_j);
              __gmpz_clear(__sd_Z_cst_23);
              __gmpz_clear(__sd_Z_to_Z_48);
            }
            __sd_exists_4 = __sd_forall_7;
            __gmpz_add_ui(__q_i,__q_i,1);
            __sd_exists_cmp_4 = __gmpz_cmp(__q_i,__sd_Z_sub_13);
          }
          __gmpz_clear(__q_i);
          __gmpz_clear(__sd_Z_cst_22);
          __gmpz_clear(__sd_Z_sub_13);
        }
        if(! __sd_exists_4) {
          int __sd_forall_8;
          __sd_forall_8 = 1;
          {
            mpz_t __q_k;
            mpz_t __sd_Z_cst_24;
            __gmpz_init_set_str(__sd_Z_cst_24,"0",10);
            mpz_t __sd_Z_to_Z_49;
            __gmpz_init_set_si(__sd_Z_to_Z_49,old_strlen);
            __gmpz_init_set(__q_k,__sd_Z_cst_24);
            int __sd_forall_cmp_8;
            __sd_forall_cmp_8 = __gmpz_cmp(__q_k,__sd_Z_to_Z_49);
            while(__sd_forall_cmp_8 < 0 && __sd_forall_8) {
              mpz_t __sd_Z_lval_21;
              __gmpz_init_set(__sd_Z_lval_21,__q_k);
              int __sd_to_ctype_18;
              __sd_to_ctype_18 = (int)__gmpz_get_si(__sd_Z_lval_21);
              __gmpz_clear(__sd_Z_lval_21);
              mpz_t __sd_Z_lval_22;
              __gmpz_init_set(__sd_Z_lval_22,__q_k);
              int __sd_to_ctype_19;
              __sd_to_ctype_19 = (int)__gmpz_get_si(__sd_Z_lval_22);
              __gmpz_clear(__sd_Z_lval_22);
              __sd_forall_8 = (int)*(old_ptr_str + __sd_to_ctype_18) == (int)*(
                              old_dest + __sd_to_ctype_19);
              __gmpz_add_ui(__q_k,__q_k,1);
              __sd_forall_cmp_8 = __gmpz_cmp(__q_k,__sd_Z_to_Z_49);
            }
            __gmpz_clear(__q_k);
            __gmpz_clear(__sd_Z_cst_24);
            __gmpz_clear(__sd_Z_to_Z_49);
          }
          if(! __sd_forall_8) {
            pathcrawler_assert_exception("",20);
          }
          mpz_t __sd_Z_to_Z_50;
          __gmpz_init_set_si(__sd_Z_to_Z_50,__retres);
          mpz_t __sd_Z_cst_25;
          __gmpz_init_set_str(__sd_Z_cst_25,"0",10);
          int __sd_eq_1;
          __sd_eq_1 = __gmpz_cmp(__sd_Z_to_Z_50,__sd_Z_cst_25);
          __gmpz_clear(__sd_Z_to_Z_50);
          __gmpz_clear(__sd_Z_cst_25);
          if(! (__sd_eq_1 == 0)) {
            pathcrawler_assert_exception("",9);
          }
        }
      }
      free(old_ptr_str);
      free(old_ptr_substr);
      free(old_ptr_dest);
      return __retres;
  }
}


[kernel] Parsing FRAMAC_SHARE/libc/__fc_builtin_for_normalization.i (no preprocessing)
[kernel] Parsing __sd_instru_deleteSubstr1a_delete_substr.c (with preprocessing)
[kernel] Parsing FRAMAC_SHARE/libc/__fc_builtin_for_normalization.i (no preprocessing)
[kernel] Parsing __sd_instru_deleteSubstr1a_delete_substr.c (with preprocessing)
[pc] analyzing...
[pc] Compiling pathcrawler___sd_instru_deleteSubstr1a_delete_substr/lanceur_delete_substr utilities ...
[pc] Compiling pathcrawler___sd_instru_deleteSubstr1a_delete_substr/lanceur_delete_substr ...
[pc] generating tests...
[pc] Starting lanceur_delete_substr (isc version)
[pc] Starting lanceur_pathcrawler__delete_substr_precond (isc version)
[pc] Starting lanceur_delete_substr (isc version)
[pc] Starting lanceur_delete_substr (isc version)
[pc] Starting lanceur_delete_substr (isc version)
[pc] generation finished
[stady] all-paths: true
[stady] 242 test cases
[stady] Non-Compliance of ensures \result ≡ 0 
        LOCATION: tests/deleteSubstr1a/deleteSubstr1a.c:59
        TEST DRIVER: testcases___sd_instru_deleteSubstr1a_delete_substr/delete_substr/testdrivers/TC_5.c
        dest[0] = 96 -- OUTPUT: 2 (dest[1])
        dest[1] = 2
        return value =  -- OUTPUT: 0 (0)
        str[0] = 2
        str[1] = 2
        strlen = 2
        sublen = 1
        substr[0] = 2
[stady] Non-Compliance of ensures
                          ∀ ℤ k;
                            0 ≤ k < \old(strlen) ⇒
                            \old(*(str+k)) ≡ *(\old(dest)+k) 
        LOCATION: tests/deleteSubstr1a/deleteSubstr1a.c:58
        TEST DRIVER: testcases___sd_instru_deleteSubstr1a_delete_substr/delete_substr/testdrivers/TC_4.c
        dest[0] = 23 -- OUTPUT: 79 (str[0])
        dest[1] = 21
        return value =  -- OUTPUT: 0 (0)
        str[0] = 79
        str[1] = 79
        strlen = 2
        sublen = 1
        substr[0] = 79
[report] Computing properties status...

--------------------------------------------------------------------------------
--- Properties of Function 'delete_substr'
--------------------------------------------------------------------------------

[   Bug   ] Post-condition for 'not_present' (file tests/deleteSubstr1a/deleteSubstr1a.c, line 58)
            by StaDy.
[   Bug   ] Post-condition for 'not_present' (file tests/deleteSubstr1a/deleteSubstr1a.c, line 59)
            by StaDy.
[  Dead   ] Behavior 'not_present'
            Locally invalid, but unreachable.
            By Frama-C kernel because:
             - Post-condition for 'not_present' (file tests/deleteSubstr1a/deleteSubstr1a.c, line 58)
             - Post-condition for 'not_present' (file tests/deleteSubstr1a/deleteSubstr1a.c, line 59)

--------------------------------------------------------------------------------
--- Status Report Summary
--------------------------------------------------------------------------------
     2 Bugs found
     1 Dead property
     3 Total
--------------------------------------------------------------------------------
