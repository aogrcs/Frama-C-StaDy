[kernel] Parsing FRAMAC_SHARE/libc/__fc_builtin_for_normalization.i (no preprocessing)
[kernel] Parsing tests/num_of/num_of.c (with preprocessing)
[stady:generated-pl] generated Prolog precondition:
:- module(test_parameters).
:- import create_input_val/3 from substitution.
:- export dom/4.
:- export create_input_vals/2.
:- export unquantif_preconds/2.
:- export quantif_preconds/2.
:- export strategy/2.
:- export precondition_of/2.

dom(0,0,0,0).
dom('num_of', dim('t'), [], int([1..4294967295])).
dom('num_of', cont('t',_), [], int([-2147483648..2147483647])).
dom('pathcrawler__num_of_precond',A,B,C) :-
  dom('num_of',A,B,C).
create_input_vals('num_of', Ins):-
  create_input_val(dim('t'), int([1..4294967295]),Ins),
  create_input_val('n', int([1..3]),Ins),
  true.
create_input_vals('pathcrawler__num_of_precond',Ins) :-
  create_input_vals('num_of',Ins).
quantif_preconds('num_of',
  [

  ]
).
quantif_preconds('pathcrawler__num_of_precond',A) :-
  quantif_preconds('num_of',A).
unquantif_preconds('num_of',
  [
    cond(egal,dim('t'),+(int(math), -(int(math), 'n', 1), 1),pre)
  ]
).
unquantif_preconds('pathcrawler__num_of_precond',A) :-
  unquantif_preconds('num_of',A).
strategy('num_of',[]).
strategy('pathcrawler__num_of_precond',A) :-
  strategy('num_of',A).
precondition_of('num_of','pathcrawler__num_of_precond').
[stady:generated-c] generated C file:
/* Generated by Frama-C */
struct __anonstruct___mpz_struct_1 {int _mp_alloc ;int _mp_size ;unsigned long *_mp_d ;};typedef struct __anonstruct___mpz_struct_1 __mpz_struct;typedef __mpz_struct mpz_t[1];
extern signed long int __gmpz_get_si(mpz_t);
extern int __gmpz_cmp_ui(mpz_t, unsigned long int);
extern int __gmpz_cmp(mpz_t, mpz_t);
extern void __gmpz_clear(mpz_t);
extern void __gmpz_init(mpz_t);
extern void __gmpz_init_set(mpz_t, mpz_t);
extern void __gmpz_init_set_si(mpz_t, signed long int);
extern void __gmpz_init_set_str(mpz_t, const char*, int);
extern void __gmpz_add_ui(mpz_t, const mpz_t, unsigned long int);
extern void __gmpz_sub(mpz_t, const mpz_t, const mpz_t);
extern int pathcrawler_assert_exception(char*,int);
extern void pathcrawler_to_framac(char*);
extern void* malloc(unsigned long);
extern void free(void*);
int num_of_precond(int n, int *t)
{
  return 1;
}

int num_of(int n, int *t)
{
  int old_n;
  old_n = n;
  int *old_t;
  int *old_ptr_t;
  old_t = t;
  mpz_t __stady_gmp_9;
  __gmpz_init_set_si(__stady_gmp_9, n);
  int __stady_term_5;
  unsigned long __stady_term_6;
  __stady_term_6 = __gmpz_get_si(__stady_gmp_9);
  old_ptr_t = malloc(__stady_term_6 * (unsigned long)sizeof(int));
  __stady_term_6 = __gmpz_get_si(__stady_gmp_9);
  for(__stady_term_5 = 0; (unsigned long)__stady_term_5 < __stady_term_6; __stady_term_5 = 
    __stady_term_5 + 1) {
    old_ptr_t[__stady_term_5] = t[__stady_term_5];
  }
  __gmpz_clear(__stady_gmp_9);
  {
    int num;
    int i;
    num = 0;
    i = 0;
    {
      mpz_t __stady_gmp_10;
      __gmpz_init_set_str(__stady_gmp_10, "0", 10);
      mpz_t __stady_gmp_11;
      __gmpz_init_set_si(__stady_gmp_11, num);
      int __stady_term_7;
      __stady_term_7 = __gmpz_cmp(__stady_gmp_10, __stady_gmp_11);
      __gmpz_clear(__stady_gmp_10);
      __gmpz_clear(__stady_gmp_11);
      int __stady_pred_1;
      __stady_pred_1 = __stady_term_7 <= 0;
      if(__stady_pred_1) {
        __stady_pred_1 = num <= i;
      }
      int __stady_pred_0;
      __stady_pred_0 = __stady_pred_1;
      if(__stady_pred_0) {
        __stady_pred_0 = i <= n;
      }
      if(! __stady_pred_0) {
        pathcrawler_assert_exception("Loop invariant not established!", 2);
      }
      mpz_t __stady_gmp_14;
      __gmpz_init_set_si(__stady_gmp_14, num);
      mpz_t __stady_gmp_15;
      __gmpz_init_set_si(__stady_gmp_15, 0);
      {
        mpz_t __stady_gmp_16;
        __gmpz_init_set_str(__stady_gmp_16, "0", 10);
        mpz_t __stady_gmp_17;
        __gmpz_init_set_si(__stady_gmp_17, i);
        mpz_t __stady_gmp_18;
        __gmpz_init_set_str(__stady_gmp_18, "1", 10);
        mpz_t __stady_gmp_19;
        __gmpz_init(__stady_gmp_19);
        __gmpz_sub(__stady_gmp_19, __stady_gmp_17, __stady_gmp_18);
        __gmpz_clear(__stady_gmp_17);
        __gmpz_clear(__stady_gmp_18);
        mpz_t k;
        __gmpz_init_set(k, __stady_gmp_16);
        int __stady_term_12;
        __stady_term_12 = __gmpz_cmp(k, __stady_gmp_19);
        for(; __stady_term_12 <= 0; ) {
          mpz_t __stady_gmp_20;
          __gmpz_init_set(__stady_gmp_20, k);
          int __stady_term_9;
          __stady_term_9 = __gmpz_get_si(__stady_gmp_20);
          __gmpz_clear(__stady_gmp_20);
          mpz_t __stady_gmp_21;
          __gmpz_init_set_si(__stady_gmp_21, *(t + __stady_term_9));
          mpz_t __stady_gmp_22;
          __gmpz_init_set_str(__stady_gmp_22, "0", 10);
          int __stady_term_10;
          int __stady_term_11;
          __stady_term_11 = __gmpz_cmp(__stady_gmp_21, __stady_gmp_22);
          __stady_term_10 = __stady_term_11 == 0;
          __gmpz_clear(__stady_gmp_21);
          __gmpz_clear(__stady_gmp_22);
          if(__stady_term_10 != 0) {
            __gmpz_add_ui(__stady_gmp_15, __stady_gmp_15, 1);
          }
          __gmpz_add_ui(k, k, 1);
          __stady_term_12 = __gmpz_cmp(k, __stady_gmp_19);
        }
        __gmpz_clear(k);
        __gmpz_clear(__stady_gmp_16);
        __gmpz_clear(__stady_gmp_19);
      }
      int __stady_term_13;
      __stady_term_13 = __gmpz_cmp(__stady_gmp_14, __stady_gmp_15);
      __gmpz_clear(__stady_gmp_14);
      __gmpz_clear(__stady_gmp_15);
      if(! (__stady_term_13 == 0)) {
        pathcrawler_assert_exception("Loop invariant not established!", 8);
      }
      mpz_t __stady_gmp_32;
      __gmpz_init_set_si(__stady_gmp_32, n);
      mpz_t __stady_gmp_33;
      __gmpz_init_set_si(__stady_gmp_33, i);
      mpz_t __stady_gmp_34;
      __gmpz_init(__stady_gmp_34);
      __gmpz_sub(__stady_gmp_34, __stady_gmp_32, __stady_gmp_33);
      __gmpz_clear(__stady_gmp_32);
      __gmpz_clear(__stady_gmp_33);
      int __stady_term_19;
      __stady_term_19 = __gmpz_cmp_ui(__stady_gmp_34, 0);
      if(__stady_term_19 < 0) {
        pathcrawler_assert_exception("Variant non positive", 0);
      }
      while (1) {
        mpz_t __stady_gmp_35;
        __gmpz_init_set_si(__stady_gmp_35, n);
        mpz_t __stady_gmp_36;
        __gmpz_init_set_si(__stady_gmp_36, i);
        mpz_t __stady_gmp_37;
        __gmpz_init(__stady_gmp_37);
        __gmpz_sub(__stady_gmp_37, __stady_gmp_35, __stady_gmp_36);
        __gmpz_clear(__stady_gmp_35);
        __gmpz_clear(__stady_gmp_36);
        mpz_t __stady_gmp_38;
        __gmpz_init_set(__stady_gmp_38, __stady_gmp_37);
        {
          if (! (i < n)) {
                           pathcrawler_to_framac("@FC:REACHABLE_STMT:6");
                           break;
                         }
          if (*(t + i) == 0) {
                               pathcrawler_to_framac("@FC:REACHABLE_STMT:9");
                               num ++;
                             }
          i ++;
        }mpz_t __stady_gmp_12;
        __gmpz_init_set_str(__stady_gmp_12, "0", 10);
        mpz_t __stady_gmp_13;
        __gmpz_init_set_si(__stady_gmp_13, num);
        int __stady_term_8;
        __stady_term_8 = __gmpz_cmp(__stady_gmp_12, __stady_gmp_13);
        __gmpz_clear(__stady_gmp_12);
        __gmpz_clear(__stady_gmp_13);
        int __stady_pred_3;
        __stady_pred_3 = __stady_term_8 <= 0;
        if(__stady_pred_3) {
          __stady_pred_3 = num <= i;
        }
        int __stady_pred_2;
        __stady_pred_2 = __stady_pred_3;
        if(__stady_pred_2) {
          __stady_pred_2 = i <= n;
        }
        if(! __stady_pred_2) {
          pathcrawler_assert_exception("Loop invariant not preserved!", 2);
        }
        mpz_t __stady_gmp_23;
        __gmpz_init_set_si(__stady_gmp_23, num);
        mpz_t __stady_gmp_24;
        __gmpz_init_set_si(__stady_gmp_24, 0);
        {
          mpz_t __stady_gmp_25;
          __gmpz_init_set_str(__stady_gmp_25, "0", 10);
          mpz_t __stady_gmp_26;
          __gmpz_init_set_si(__stady_gmp_26, i);
          mpz_t __stady_gmp_27;
          __gmpz_init_set_str(__stady_gmp_27, "1", 10);
          mpz_t __stady_gmp_28;
          __gmpz_init(__stady_gmp_28);
          __gmpz_sub(__stady_gmp_28, __stady_gmp_26, __stady_gmp_27);
          __gmpz_clear(__stady_gmp_26);
          __gmpz_clear(__stady_gmp_27);
          mpz_t k;
          __gmpz_init_set(k, __stady_gmp_25);
          int __stady_term_17;
          __stady_term_17 = __gmpz_cmp(k, __stady_gmp_28);
          for(; __stady_term_17 <= 0; ) {
            mpz_t __stady_gmp_29;
            __gmpz_init_set(__stady_gmp_29, k);
            int __stady_term_14;
            __stady_term_14 = __gmpz_get_si(__stady_gmp_29);
            __gmpz_clear(__stady_gmp_29);
            mpz_t __stady_gmp_30;
            __gmpz_init_set_si(__stady_gmp_30, *(t + __stady_term_14));
            mpz_t __stady_gmp_31;
            __gmpz_init_set_str(__stady_gmp_31, "0", 10);
            int __stady_term_15;
            int __stady_term_16;
            __stady_term_16 = __gmpz_cmp(__stady_gmp_30, __stady_gmp_31);
            __stady_term_15 = __stady_term_16 == 0;
            __gmpz_clear(__stady_gmp_30);
            __gmpz_clear(__stady_gmp_31);
            if(__stady_term_15 != 0) {
              __gmpz_add_ui(__stady_gmp_24, __stady_gmp_24, 1);
            }
            __gmpz_add_ui(k, k, 1);
            __stady_term_17 = __gmpz_cmp(k, __stady_gmp_28);
          }
          __gmpz_clear(k);
          __gmpz_clear(__stady_gmp_25);
          __gmpz_clear(__stady_gmp_28);
        }
        int __stady_term_18;
        __stady_term_18 = __gmpz_cmp(__stady_gmp_23, __stady_gmp_24);
        __gmpz_clear(__stady_gmp_23);
        __gmpz_clear(__stady_gmp_24);
        if(! (__stady_term_18 == 0)) {
          pathcrawler_assert_exception("Loop invariant not preserved!", 8);
        }
        mpz_t __stady_gmp_39;
        __gmpz_init_set_si(__stady_gmp_39, n);
        mpz_t __stady_gmp_40;
        __gmpz_init_set_si(__stady_gmp_40, i);
        mpz_t __stady_gmp_41;
        __gmpz_init(__stady_gmp_41);
        __gmpz_sub(__stady_gmp_41, __stady_gmp_39, __stady_gmp_40);
        __gmpz_clear(__stady_gmp_39);
        __gmpz_clear(__stady_gmp_40);
        __stady_term_19 = __gmpz_cmp_ui(__stady_gmp_38, 0);
        if(__stady_term_19 < 0) {
          pathcrawler_assert_exception("Variant non positive", 0);
        }
        __stady_term_19 = __gmpz_cmp(__stady_gmp_41, __stady_gmp_38);
        if(__stady_term_19 >= 0) {
          pathcrawler_assert_exception("Variant non decreasing", 0);
        }
        __gmpz_clear(__stady_gmp_38);
        }
         __gmpz_clear(__stady_gmp_34);
      
    }
    {
      mpz_t __stady_gmp_0;
      __gmpz_init_set_si(__stady_gmp_0, num);
      mpz_t __stady_gmp_1;
      __gmpz_init_set_si(__stady_gmp_1, 0);
      {
        mpz_t __stady_gmp_2;
        __gmpz_init_set_str(__stady_gmp_2, "0", 10);
        mpz_t __stady_gmp_3;
        __gmpz_init_set_si(__stady_gmp_3, old_n);
        mpz_t __stady_gmp_4;
        __gmpz_init_set_str(__stady_gmp_4, "1", 10);
        mpz_t __stady_gmp_5;
        __gmpz_init(__stady_gmp_5);
        __gmpz_sub(__stady_gmp_5, __stady_gmp_3, __stady_gmp_4);
        __gmpz_clear(__stady_gmp_3);
        __gmpz_clear(__stady_gmp_4);
        mpz_t k;
        __gmpz_init_set(k, __stady_gmp_2);
        int __stady_term_3;
        __stady_term_3 = __gmpz_cmp(k, __stady_gmp_5);
        for(; __stady_term_3 <= 0; ) {
          mpz_t __stady_gmp_6;
          __gmpz_init_set(__stady_gmp_6, k);
          int __stady_term_0;
          __stady_term_0 = __gmpz_get_si(__stady_gmp_6);
          __gmpz_clear(__stady_gmp_6);
          mpz_t __stady_gmp_7;
          __gmpz_init_set_si(__stady_gmp_7, *(old_t + __stady_term_0));
          mpz_t __stady_gmp_8;
          __gmpz_init_set_str(__stady_gmp_8, "0", 10);
          int __stady_term_1;
          int __stady_term_2;
          __stady_term_2 = __gmpz_cmp(__stady_gmp_7, __stady_gmp_8);
          __stady_term_1 = __stady_term_2 == 0;
          __gmpz_clear(__stady_gmp_7);
          __gmpz_clear(__stady_gmp_8);
          if(__stady_term_1 != 0) {
            __gmpz_add_ui(__stady_gmp_1, __stady_gmp_1, 1);
          }
          __gmpz_add_ui(k, k, 1);
          __stady_term_3 = __gmpz_cmp(k, __stady_gmp_5);
        }
        __gmpz_clear(k);
        __gmpz_clear(__stady_gmp_2);
        __gmpz_clear(__stady_gmp_5);
      }
      int __stady_term_4;
      __stady_term_4 = __gmpz_cmp(__stady_gmp_0, __stady_gmp_1);
      __gmpz_clear(__stady_gmp_0);
      __gmpz_clear(__stady_gmp_1);
      if(! (__stady_term_4 == 0)) {
        pathcrawler_assert_exception("Post-condition!", 6);
      }
    }
    free(old_ptr_t);
    return num;
  }
}


[kernel] Parsing FRAMAC_SHARE/libc/__fc_builtin_for_normalization.i (no preprocessing)
[kernel] Parsing __sd_instru_num_of_num_of.c (with preprocessing)
[kernel] Parsing FRAMAC_SHARE/libc/__fc_builtin_for_normalization.i (no preprocessing)
[kernel] Parsing __sd_instru_num_of_num_of.c (with preprocessing)
[pc] analyzing...
[pc] Compiling pathcrawler___sd_instru_num_of_num_of/lanceur_num_of utilities ...
[pc] Compiling pathcrawler___sd_instru_num_of_num_of/lanceur_num_of ...
[pc] generating tests...
[pc] Starting lanceur_num_of (isc version)
[pc] Starting lanceur_pathcrawler__num_of_precond (isc version)
[pc] generation finished
[stady] all-paths: true
[stady] 556 test cases
[report] Computing properties status...

--------------------------------------------------------------------------------
--- Properties of Function 'num_of'
--------------------------------------------------------------------------------

[ Partial ] Post-condition (file tests/num_of/num_of.c, line 10)
            By StaDy, with pending:
             - Pre-condition (file tests/num_of/num_of.c, line 8)
[ Partial ] Loop variant at loop (file tests/num_of/num_of.c, line 20)
            By StaDy, with pending:
             - Pre-condition (file tests/num_of/num_of.c, line 8)
[ Partial ] Invariant (file tests/num_of/num_of.c, line 15)
            By StaDy, with pending:
             - Pre-condition (file tests/num_of/num_of.c, line 8)
[ Partial ] Invariant (file tests/num_of/num_of.c, line 16)
            By StaDy, with pending:
             - Pre-condition (file tests/num_of/num_of.c, line 8)
[    -    ] Default behavior
            tried with Frama-C kernel.

--------------------------------------------------------------------------------
--- Status Report Summary
--------------------------------------------------------------------------------
     4 Locally validated
     1 To be validated
     5 Total
--------------------------------------------------------------------------------
