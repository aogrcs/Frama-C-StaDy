[kernel] preprocessing with "gcc -C -E -I.  tests/num_of/num_of.c"
[stady:generated-pl] :- module(test_parameters).
                     :- import create_input_val/3 from substitution.
                     :- export dom/4.
                     :- export create_input_vals/2.
                     :- export unquantif_preconds/2.
                     :- export quantif_preconds/2.
                     :- export strategy/2.
                     :- export precondition_of/2.
                     
                     dom(0,0,0,0).
[stady:generated-pl] dom('num_of', cont('t',_), [], int([-2147483648..2147483647])).
[stady:generated-pl] dom('pathcrawler__num_of_precond',A,B,C) :- dom('num_of',A,B,C).
[stady:generated-pl] create_input_vals('num_of', Ins):-
[stady:generated-pl] create_input_val('n', int([-2147483648..2147483647]),Ins),
[stady:generated-pl] create_input_val(dim('t'), int([0..4294967295]),Ins),
[stady:generated-pl] true.
[stady:generated-pl] create_input_vals('pathcrawler__num_of_precond',Ins) :- create_input_vals('num_of',Ins).
[stady:generated-pl] quantif_preconds('num_of',[]).
[stady:generated-pl] quantif_preconds('pathcrawler__num_of_precond',A) :- quantif_preconds('num_of',A).
[stady:generated-pl] unquantif_preconds('num_of',[cond(egal,dim('t'),+(int(math), -(int(math), 'n', 1), 1),pre), cond(sup,'n',0,pre), cond(infegal,'n',3,pre)]).
[stady:generated-pl] unquantif_preconds('pathcrawler__num_of_precond',A) :- unquantif_preconds('num_of',A).
[stady:generated-pl] strategy('num_of',[]).
[stady:generated-pl] strategy('pathcrawler__num_of_precond',A) :- strategy('num_of',A).
[stady:generated-pl] precondition_of('num_of','pathcrawler__num_of_precond').
[stady:generated-c] /* Generated by Frama-C */
                    int num_of_precond(int n, int *t)
                    {
                    if (!((n) > 0)) return 0;if (!((n-1) >= 0 && (pathcrawler_dimension((t)) > (n-1)))) return 0;return 1;
                    }
                    
                    int num_of(int n, int *t)
                    {
                      int old_n = n;
                      int *old_t = t;
                      int *old_ptr_t;
                      old_ptr_t = malloc(((n-1)+1)*sizeof(int));
                      int __stady_iter_0;
                      for (__stady_iter_0 = 0; __stady_iter_0 < (n-1)+1; __stady_iter_0++) {
                      old_ptr_t[__stady_iter_0] = t[__stady_iter_0];
                      }
                      {
                        int num;
                        int i;
                        num = 0;
                        i = 0;
                        {
                           if((n-i)<0)pathcrawler_assert_exception("Variant non positive",2);
                           int __stady_term_3 = 0;
                           {
                           int k;
                           for(k=0; k <= i-1; k++) {
                           if(*(t+k)==0) { __stady_term_3 ++; }
                           }
                           }
                           if(!((num) == __stady_term_3)) pathcrawler_assert_exception("Loop invariant not established!", 6);
                           if(!((0 <= (num)) && (((num) <= (i)) && ((i) <= (n))))) pathcrawler_assert_exception("Loop invariant not established!", 4);
                           while (1) {
                             int old_variant_2 = n-i;
                    {
                                                        if (! (i < n)) break;
                                                        if (*(t + i) == 0) num ++;
                                                        i ++;
                                                      }if(!((0 <= (num)) && (((num) <= (i)) && ((i) <= (n))))) pathcrawler_assert_exception("Loop invariant not preserved!", 4);
                             int __stady_term_4 = 0;
                             {
                             int k;
                             for(k=0; k <= i-1; k++) {
                             if(*(t+k)==0) { __stady_term_4 ++; }
                             }
                             }
                             if(!((num) == __stady_term_4)) pathcrawler_assert_exception("Loop invariant not preserved!", 6);
                             if((old_variant_2)<0)pathcrawler_assert_exception("Variant non positive",2);
                             if((n-i) >= old_variant_2) pathcrawler_assert_exception("Variant non decreasing",2);
                             }
                              
                        }
                        {
                          int __stady_term_5 = 0;
                          {
                          int k;
                          for(k=0; k <= old_n-1; k++) {
                          if(*(old_t+k)==0) { __stady_term_5 ++; }
                          }
                          }
                          if(!(num == __stady_term_5))pathcrawler_assert_exception("Post-condition!", 7);
                          }
                        free(old_ptr_t);
                        return num;
                      }
                    }
[kernel] preprocessing with "gcc -C -E -I.  stady_temp.c"
stady_temp.c:14:[kernel] warning: Calling undeclared function malloc. Old style K&R code?
stady_temp.c:65:[kernel] warning: Calling undeclared function free. Old style K&R code?
[kernel] preprocessing with "gcc -C -E -I. -include /usr/local/share/frama-c/pc/lib/lanceur_deb.h stady_temp.c"
stady_temp.c:14:[kernel] warning: Calling undeclared function malloc. Old style K&R code?
stady_temp.c:65:[kernel] warning: Calling undeclared function free. Old style K&R code?
[pc] analyzing...
[pc] Compiling pathcrawler_stady_temp/lanceur_num_of utilities ...
[pc] Compiling pathcrawler_stady_temp/lanceur_num_of ...
[pc] generating tests...
[pc] Starting lanceur_num_of (isc version)
[pc] Starting lanceur_pathcrawler__num_of_precond (isc version)
[pc] generation finished
[stady] all-paths: true
[stady] 401 test cases
[report] Computing properties status...

--------------------------------------------------------------------------------
--- Properties of Function 'num_of'
--------------------------------------------------------------------------------

[ Partial ] Post-condition (file tests/num_of/num_of.c, line 10)
            By StaDyPlus, with pending:
             - Pre-condition (file tests/num_of/num_of.c, line 8)
[    -    ] Pre-condition (file tests/num_of/num_of.c, line 8)
[    -    ] Assigns nothing
[ Partial ] Loop variant at loop (file tests/num_of/num_of.c, line 20)
            By StaDyPlus, with pending:
             - Pre-condition (file tests/num_of/num_of.c, line 8)
[ Partial ] Invariant (file tests/num_of/num_of.c, line 15)
            By StaDyPlus, with pending:
             - Pre-condition (file tests/num_of/num_of.c, line 8)
[ Partial ] Invariant (file tests/num_of/num_of.c, line 16)
            By StaDyPlus, with pending:
             - Pre-condition (file tests/num_of/num_of.c, line 8)
[    -    ] Default behavior
            tried with Frama-C kernel.

--------------------------------------------------------------------------------
--- Status Report Summary
--------------------------------------------------------------------------------
     4 Locally validated
     3 To be validated
     7 Total
--------------------------------------------------------------------------------
