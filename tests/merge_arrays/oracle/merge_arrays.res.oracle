[kernel] preprocessing with "gcc -C -E -I.  tests/merge_arrays/merge_arrays.c"
tests/merge_arrays/merge_arrays.c:17:[stady] warning: Native Precondition:
                 ∀ ℤ __q_i; 0 ≤ __q_i < l1-1 ⇒ *(t1+__q_i) ≤ *(t1+(__q_i+1)) unsupported
tests/merge_arrays/merge_arrays.c:17:[stady] warning: Native Precondition:
                 ∀ ℤ __q_i; 0 ≤ __q_i < l2-1 ⇒ *(t2+__q_i) ≤ *(t2+(__q_i+1)) unsupported
[stady:generated-pl] generated Prolog precondition:
:- module(test_parameters).
:- import create_input_val/3 from substitution.
:- export dom/4.
:- export create_input_vals/2.
:- export unquantif_preconds/2.
:- export quantif_preconds/2.
:- export strategy/2.
:- export precondition_of/2.

dom(0,0,0,0).
dom('merge_arrays', cont('t3',_), [], int([-2147483648..2147483647])).
dom('merge_arrays', cont('t2',_), [], int([-2147483648..2147483647])).
dom('merge_arrays', cont('t1',_), [], int([-2147483648..2147483647])).
dom('merge_arrays', dim('t3'), [], int([1..4294967295])).
dom('merge_arrays', dim('t2'), [], int([1..4294967295])).
dom('merge_arrays', dim('t1'), [], int([1..4294967295])).
dom('pathcrawler__merge_arrays_precond',A,B,C) :-
  dom('merge_arrays',A,B,C).
create_input_vals('merge_arrays', Ins):-
  create_input_val('l2', int([0..3]),Ins),
  create_input_val('l1', int([0..3]),Ins),
  create_input_val(dim('t3'), int([1..4294967295]),Ins),
  create_input_val(dim('t2'), int([1..4294967295]),Ins),
  create_input_val(dim('t1'), int([1..4294967295]),Ins),
  true.
create_input_vals('pathcrawler__merge_arrays_precond',Ins) :-
  create_input_vals('merge_arrays',Ins).
quantif_preconds('merge_arrays',
  [
  ]
).
quantif_preconds('pathcrawler__merge_arrays_precond',A) :-
  quantif_preconds('merge_arrays',A).
unquantif_preconds('merge_arrays',
  [
    cond(egal,dim('t3'),+(int(math), -(int(math), +(int(math), 'l1', 'l2'), 1), 1),pre),
    cond(egal,dim('t2'),+(int(math), -(int(math), 'l2', 1), 1),pre),
    cond(egal,dim('t1'),+(int(math), -(int(math), 'l1', 1), 1),pre)
  ]
).
unquantif_preconds('pathcrawler__merge_arrays_precond',A) :-
  unquantif_preconds('merge_arrays',A).
strategy('merge_arrays',[]).
strategy('pathcrawler__merge_arrays_precond',A) :-
  strategy('merge_arrays',A).
precondition_of('merge_arrays','pathcrawler__merge_arrays_precond').
[stady:generated-c] generated C file:
/* Generated by Frama-C */
struct __anonstruct___mpz_struct_1 {int _mp_alloc ;int _mp_size ;unsigned long *_mp_d ;};typedef struct __anonstruct___mpz_struct_1 __mpz_struct;typedef __mpz_struct mpz_t[1];
extern signed long int __gmpz_get_si(mpz_t);
extern int __gmpz_cmp_ui(mpz_t, unsigned long int);
extern int __gmpz_cmp(mpz_t, mpz_t);
extern void __gmpz_clear(mpz_t);
extern void __gmpz_init(mpz_t);
extern void __gmpz_init_set(mpz_t, mpz_t);
extern void __gmpz_init_set_si(mpz_t, signed long int);
extern void __gmpz_init_set_str(mpz_t, const char*, int);
extern void __gmpz_add(mpz_t, const mpz_t, const mpz_t);
extern void __gmpz_add_ui(mpz_t, const mpz_t, unsigned long int);
extern void __gmpz_sub(mpz_t, const mpz_t, const mpz_t);
extern int pathcrawler_assert_exception(char*,int);
extern void pathcrawler_to_framac(char*);
extern void* malloc(unsigned long);
extern void free(void*);
int merge_arrays_precond(int *t1, int *t2, int *t3, int l1, int l2)
{
  int __stady_pred_0;
  __stady_pred_0 = 1;
  {
    mpz_t __q_i;
    mpz_t __stady_gmp_0;
    __gmpz_init_set_str(__stady_gmp_0, "0", 10);
    mpz_t __stady_gmp_1;
    __gmpz_init_set_si(__stady_gmp_1, l1);
    mpz_t __stady_gmp_2;
    __gmpz_init_set_str(__stady_gmp_2, "1", 10);
    mpz_t __stady_gmp_3;
    __gmpz_init(__stady_gmp_3);
    __gmpz_sub(__stady_gmp_3, __stady_gmp_1, __stady_gmp_2);
    __gmpz_clear(__stady_gmp_1);
    __gmpz_clear(__stady_gmp_2);
    __gmpz_init_set(__q_i, __stady_gmp_0);
    int __stady_term_0;
    __stady_term_0 = __gmpz_cmp(__q_i, __stady_gmp_3);
    for(; __stady_term_0 < 0 && __stady_pred_0; ) {
      mpz_t __stady_gmp_4;
      __gmpz_init_set(__stady_gmp_4, __q_i);
      int __stady_term_1;
      __stady_term_1 = __gmpz_get_si(__stady_gmp_4);
      __gmpz_clear(__stady_gmp_4);
      mpz_t __stady_gmp_5;
      __gmpz_init_set(__stady_gmp_5, __q_i);
      mpz_t __stady_gmp_6;
      __gmpz_init_set_str(__stady_gmp_6, "1", 10);
      mpz_t __stady_gmp_7;
      __gmpz_init(__stady_gmp_7);
      __gmpz_add(__stady_gmp_7, __stady_gmp_5, __stady_gmp_6);
      __gmpz_clear(__stady_gmp_5);
      __gmpz_clear(__stady_gmp_6);
      int __stady_term_2;
      __stady_term_2 = __gmpz_get_si(__stady_gmp_7);
      __gmpz_clear(__stady_gmp_7);
      __stady_pred_0 = *(t1 + __stady_term_1) <= *(t1 + __stady_term_2);
      __gmpz_add_ui(__q_i, __q_i, 1);
      __stady_term_0 = __gmpz_cmp(__q_i, __stady_gmp_3);
    }
    __gmpz_clear(__q_i);
    __gmpz_clear(__stady_gmp_0);
    __gmpz_clear(__stady_gmp_3);
  }
  if(! __stady_pred_0) {
    return 0;
  }
  int __stady_pred_1;
  __stady_pred_1 = 1;
  {
    mpz_t __q_i;
    mpz_t __stady_gmp_8;
    __gmpz_init_set_str(__stady_gmp_8, "0", 10);
    mpz_t __stady_gmp_9;
    __gmpz_init_set_si(__stady_gmp_9, l2);
    mpz_t __stady_gmp_10;
    __gmpz_init_set_str(__stady_gmp_10, "1", 10);
    mpz_t __stady_gmp_11;
    __gmpz_init(__stady_gmp_11);
    __gmpz_sub(__stady_gmp_11, __stady_gmp_9, __stady_gmp_10);
    __gmpz_clear(__stady_gmp_9);
    __gmpz_clear(__stady_gmp_10);
    __gmpz_init_set(__q_i, __stady_gmp_8);
    int __stady_term_3;
    __stady_term_3 = __gmpz_cmp(__q_i, __stady_gmp_11);
    for(; __stady_term_3 < 0 && __stady_pred_1; ) {
      mpz_t __stady_gmp_12;
      __gmpz_init_set(__stady_gmp_12, __q_i);
      int __stady_term_4;
      __stady_term_4 = __gmpz_get_si(__stady_gmp_12);
      __gmpz_clear(__stady_gmp_12);
      mpz_t __stady_gmp_13;
      __gmpz_init_set(__stady_gmp_13, __q_i);
      mpz_t __stady_gmp_14;
      __gmpz_init_set_str(__stady_gmp_14, "1", 10);
      mpz_t __stady_gmp_15;
      __gmpz_init(__stady_gmp_15);
      __gmpz_add(__stady_gmp_15, __stady_gmp_13, __stady_gmp_14);
      __gmpz_clear(__stady_gmp_13);
      __gmpz_clear(__stady_gmp_14);
      int __stady_term_5;
      __stady_term_5 = __gmpz_get_si(__stady_gmp_15);
      __gmpz_clear(__stady_gmp_15);
      __stady_pred_1 = *(t2 + __stady_term_4) <= *(t2 + __stady_term_5);
      __gmpz_add_ui(__q_i, __q_i, 1);
      __stady_term_3 = __gmpz_cmp(__q_i, __stady_gmp_11);
    }
    __gmpz_clear(__q_i);
    __gmpz_clear(__stady_gmp_8);
    __gmpz_clear(__stady_gmp_11);
  }
  if(! __stady_pred_1) {
    return 0;
  }
  return 1;
}

void merge_arrays(int *t1, int *t2, int *t3, int l1, int l2)
{
  int *old_t1;
  int *old_ptr_t1;
  old_t1 = t1;
  mpz_t __stady_gmp_26;
  __gmpz_init_set_si(__stady_gmp_26, l1);
  int __stady_term_9;
  unsigned long __stady_term_10;
  __stady_term_10 = __gmpz_get_si(__stady_gmp_26);
  old_ptr_t1 = malloc(__stady_term_10 * (unsigned long)sizeof(int));
  __stady_term_10 = __gmpz_get_si(__stady_gmp_26);
  for(__stady_term_9 = 0; (unsigned long)__stady_term_9 < __stady_term_10; __stady_term_9 = 
    __stady_term_9 + 1) {
    old_ptr_t1[__stady_term_9] = t1[__stady_term_9];
  }
  __gmpz_clear(__stady_gmp_26);
  int *old_t2;
  int *old_ptr_t2;
  old_t2 = t2;
  mpz_t __stady_gmp_27;
  __gmpz_init_set_si(__stady_gmp_27, l2);
  int __stady_term_11;
  unsigned long __stady_term_12;
  __stady_term_12 = __gmpz_get_si(__stady_gmp_27);
  old_ptr_t2 = malloc(__stady_term_12 * (unsigned long)sizeof(int));
  __stady_term_12 = __gmpz_get_si(__stady_gmp_27);
  for(__stady_term_11 = 0; (unsigned long)__stady_term_11 < __stady_term_12; __stady_term_11 = 
    __stady_term_11 + 1) {
    old_ptr_t2[__stady_term_11] = t2[__stady_term_11];
  }
  __gmpz_clear(__stady_gmp_27);
  int *old_t3;
  int *old_ptr_t3;
  old_t3 = t3;
  mpz_t __stady_gmp_28;
  __gmpz_init_set_si(__stady_gmp_28, l1);
  mpz_t __stady_gmp_29;
  __gmpz_init_set_si(__stady_gmp_29, l2);
  mpz_t __stady_gmp_30;
  __gmpz_init(__stady_gmp_30);
  __gmpz_add(__stady_gmp_30, __stady_gmp_28, __stady_gmp_29);
  __gmpz_clear(__stady_gmp_28);
  __gmpz_clear(__stady_gmp_29);
  int __stady_term_13;
  unsigned long __stady_term_14;
  __stady_term_14 = __gmpz_get_si(__stady_gmp_30);
  old_ptr_t3 = malloc(__stady_term_14 * (unsigned long)sizeof(int));
  __stady_term_14 = __gmpz_get_si(__stady_gmp_30);
  for(__stady_term_13 = 0; (unsigned long)__stady_term_13 < __stady_term_14; __stady_term_13 = 
    __stady_term_13 + 1) {
    old_ptr_t3[__stady_term_13] = t3[__stady_term_13];
  }
  __gmpz_clear(__stady_gmp_30);
  int old_l1;
  old_l1 = l1;
  int old_l2;
  old_l2 = l2;
  {
    int i;
    int j;
    int k;
    i = 0;
    j = 0;
    k = 0;
    {
      mpz_t __stady_gmp_31;
      __gmpz_init_set_str(__stady_gmp_31, "0", 10);
      mpz_t __stady_gmp_32;
      __gmpz_init_set_si(__stady_gmp_32, i);
      int __stady_term_15;
      __stady_term_15 = __gmpz_cmp(__stady_gmp_31, __stady_gmp_32);
      __gmpz_clear(__stady_gmp_31);
      __gmpz_clear(__stady_gmp_32);
      int __stady_pred_3;
      __stady_pred_3 = __stady_term_15 <= 0;
      if(__stady_pred_3) {
        __stady_pred_3 = i <= l1;
      }
      if(! __stady_pred_3) {
        pathcrawler_assert_exception("Loop invariant not established!", 7);
      }
      mpz_t __stady_gmp_35;
      __gmpz_init_set_str(__stady_gmp_35, "0", 10);
      mpz_t __stady_gmp_36;
      __gmpz_init_set_si(__stady_gmp_36, j);
      int __stady_term_17;
      __stady_term_17 = __gmpz_cmp(__stady_gmp_35, __stady_gmp_36);
      __gmpz_clear(__stady_gmp_35);
      __gmpz_clear(__stady_gmp_36);
      int __stady_pred_5;
      __stady_pred_5 = __stady_term_17 <= 0;
      if(__stady_pred_5) {
        __stady_pred_5 = j <= l2;
      }
      if(! __stady_pred_5) {
        pathcrawler_assert_exception("Loop invariant not established!", 12);
      }
      mpz_t __stady_gmp_39;
      __gmpz_init_set_str(__stady_gmp_39, "0", 10);
      mpz_t __stady_gmp_40;
      __gmpz_init_set_si(__stady_gmp_40, k);
      int __stady_term_19;
      __stady_term_19 = __gmpz_cmp(__stady_gmp_39, __stady_gmp_40);
      __gmpz_clear(__stady_gmp_39);
      __gmpz_clear(__stady_gmp_40);
      int __stady_pred_7;
      __stady_pred_7 = __stady_term_19 <= 0;
      if(__stady_pred_7) {
        mpz_t __stady_gmp_41;
        __gmpz_init_set_si(__stady_gmp_41, k);
        mpz_t __stady_gmp_42;
        __gmpz_init_set_si(__stady_gmp_42, l1);
        mpz_t __stady_gmp_43;
        __gmpz_init_set_si(__stady_gmp_43, l2);
        mpz_t __stady_gmp_44;
        __gmpz_init(__stady_gmp_44);
        __gmpz_add(__stady_gmp_44, __stady_gmp_42, __stady_gmp_43);
        __gmpz_clear(__stady_gmp_42);
        __gmpz_clear(__stady_gmp_43);
        int __stady_term_20;
        __stady_term_20 = __gmpz_cmp(__stady_gmp_41, __stady_gmp_44);
        __gmpz_clear(__stady_gmp_41);
        __gmpz_clear(__stady_gmp_44);
        __stady_pred_7 = __stady_term_20 <= 0;
      }
      if(! __stady_pred_7) {
        pathcrawler_assert_exception("Loop invariant not established!", 19);
      }
      mpz_t __stady_gmp_51;
      __gmpz_init_set_si(__stady_gmp_51, k);
      mpz_t __stady_gmp_52;
      __gmpz_init_set_si(__stady_gmp_52, i);
      mpz_t __stady_gmp_53;
      __gmpz_init_set_si(__stady_gmp_53, j);
      mpz_t __stady_gmp_54;
      __gmpz_init(__stady_gmp_54);
      __gmpz_add(__stady_gmp_54, __stady_gmp_52, __stady_gmp_53);
      __gmpz_clear(__stady_gmp_52);
      __gmpz_clear(__stady_gmp_53);
      int __stady_term_23;
      __stady_term_23 = __gmpz_cmp(__stady_gmp_51, __stady_gmp_54);
      __gmpz_clear(__stady_gmp_51);
      __gmpz_clear(__stady_gmp_54);
      if(! (__stady_term_23 == 0)) {
        pathcrawler_assert_exception("Loop invariant not established!", 4);
      }
      mpz_t __stady_gmp_59;
      __gmpz_init_set_si(__stady_gmp_59, l1);
      mpz_t __stady_gmp_60;
      __gmpz_init_set_si(__stady_gmp_60, l2);
      mpz_t __stady_gmp_61;
      __gmpz_init(__stady_gmp_61);
      __gmpz_add(__stady_gmp_61, __stady_gmp_59, __stady_gmp_60);
      __gmpz_clear(__stady_gmp_59);
      __gmpz_clear(__stady_gmp_60);
      mpz_t __stady_gmp_62;
      __gmpz_init_set_si(__stady_gmp_62, k);
      mpz_t __stady_gmp_63;
      __gmpz_init(__stady_gmp_63);
      __gmpz_sub(__stady_gmp_63, __stady_gmp_61, __stady_gmp_62);
      __gmpz_clear(__stady_gmp_61);
      __gmpz_clear(__stady_gmp_62);
      int __stady_term_25;
      __stady_term_25 = __gmpz_cmp_ui(__stady_gmp_63, 0);
      if(__stady_term_25 < 0) {
        pathcrawler_assert_exception("Variant non positive", 9);
      }
      while (1) {
        mpz_t __stady_gmp_64;
        __gmpz_init_set_si(__stady_gmp_64, l1);
        mpz_t __stady_gmp_65;
        __gmpz_init_set_si(__stady_gmp_65, l2);
        mpz_t __stady_gmp_66;
        __gmpz_init(__stady_gmp_66);
        __gmpz_add(__stady_gmp_66, __stady_gmp_64, __stady_gmp_65);
        __gmpz_clear(__stady_gmp_64);
        __gmpz_clear(__stady_gmp_65);
        mpz_t __stady_gmp_67;
        __gmpz_init_set_si(__stady_gmp_67, k);
        mpz_t __stady_gmp_68;
        __gmpz_init(__stady_gmp_68);
        __gmpz_sub(__stady_gmp_68, __stady_gmp_66, __stady_gmp_67);
        __gmpz_clear(__stady_gmp_66);
        __gmpz_clear(__stady_gmp_67);
        mpz_t __stady_gmp_69;
        __gmpz_init_set(__stady_gmp_69, __stady_gmp_68);
        {
          if (i < l1) {
            {
              pathcrawler_to_framac("@FC:REACHABLE_STMT:8");
              if (! (j < l2)) {
                                pathcrawler_to_framac("@FC:REACHABLE_STMT:9");
                                break;
                              }
            }
          }
          else {
                 pathcrawler_to_framac("@FC:REACHABLE_STMT:10");
                 break;
               }
          if (*(t1 + i) < *(t2 + j)) {
            {
              pathcrawler_to_framac("@FC:REACHABLE_STMT:14");
              *(t3 + k) = *(t1 + i);
            }
            i ++;
          }
          else {
            {
              pathcrawler_to_framac("@FC:REACHABLE_STMT:16");
              *(t3 + k) = *(t2 + j);
            }
            j ++;
          }
          k ++;
        }mpz_t __stady_gmp_33;
        __gmpz_init_set_str(__stady_gmp_33, "0", 10);
        mpz_t __stady_gmp_34;
        __gmpz_init_set_si(__stady_gmp_34, i);
        int __stady_term_16;
        __stady_term_16 = __gmpz_cmp(__stady_gmp_33, __stady_gmp_34);
        __gmpz_clear(__stady_gmp_33);
        __gmpz_clear(__stady_gmp_34);
        int __stady_pred_4;
        __stady_pred_4 = __stady_term_16 <= 0;
        if(__stady_pred_4) {
          __stady_pred_4 = i <= l1;
        }
        if(! __stady_pred_4) {
          pathcrawler_assert_exception("Loop invariant not preserved!", 7);
        }
        mpz_t __stady_gmp_37;
        __gmpz_init_set_str(__stady_gmp_37, "0", 10);
        mpz_t __stady_gmp_38;
        __gmpz_init_set_si(__stady_gmp_38, j);
        int __stady_term_18;
        __stady_term_18 = __gmpz_cmp(__stady_gmp_37, __stady_gmp_38);
        __gmpz_clear(__stady_gmp_37);
        __gmpz_clear(__stady_gmp_38);
        int __stady_pred_6;
        __stady_pred_6 = __stady_term_18 <= 0;
        if(__stady_pred_6) {
          __stady_pred_6 = j <= l2;
        }
        if(! __stady_pred_6) {
          pathcrawler_assert_exception("Loop invariant not preserved!", 12);
        }
        mpz_t __stady_gmp_45;
        __gmpz_init_set_str(__stady_gmp_45, "0", 10);
        mpz_t __stady_gmp_46;
        __gmpz_init_set_si(__stady_gmp_46, k);
        int __stady_term_21;
        __stady_term_21 = __gmpz_cmp(__stady_gmp_45, __stady_gmp_46);
        __gmpz_clear(__stady_gmp_45);
        __gmpz_clear(__stady_gmp_46);
        int __stady_pred_8;
        __stady_pred_8 = __stady_term_21 <= 0;
        if(__stady_pred_8) {
          mpz_t __stady_gmp_47;
          __gmpz_init_set_si(__stady_gmp_47, k);
          mpz_t __stady_gmp_48;
          __gmpz_init_set_si(__stady_gmp_48, l1);
          mpz_t __stady_gmp_49;
          __gmpz_init_set_si(__stady_gmp_49, l2);
          mpz_t __stady_gmp_50;
          __gmpz_init(__stady_gmp_50);
          __gmpz_add(__stady_gmp_50, __stady_gmp_48, __stady_gmp_49);
          __gmpz_clear(__stady_gmp_48);
          __gmpz_clear(__stady_gmp_49);
          int __stady_term_22;
          __stady_term_22 = __gmpz_cmp(__stady_gmp_47, __stady_gmp_50);
          __gmpz_clear(__stady_gmp_47);
          __gmpz_clear(__stady_gmp_50);
          __stady_pred_8 = __stady_term_22 <= 0;
        }
        if(! __stady_pred_8) {
          pathcrawler_assert_exception("Loop invariant not preserved!", 19);
        }
        mpz_t __stady_gmp_55;
        __gmpz_init_set_si(__stady_gmp_55, k);
        mpz_t __stady_gmp_56;
        __gmpz_init_set_si(__stady_gmp_56, i);
        mpz_t __stady_gmp_57;
        __gmpz_init_set_si(__stady_gmp_57, j);
        mpz_t __stady_gmp_58;
        __gmpz_init(__stady_gmp_58);
        __gmpz_add(__stady_gmp_58, __stady_gmp_56, __stady_gmp_57);
        __gmpz_clear(__stady_gmp_56);
        __gmpz_clear(__stady_gmp_57);
        int __stady_term_24;
        __stady_term_24 = __gmpz_cmp(__stady_gmp_55, __stady_gmp_58);
        __gmpz_clear(__stady_gmp_55);
        __gmpz_clear(__stady_gmp_58);
        if(! (__stady_term_24 == 0)) {
          pathcrawler_assert_exception("Loop invariant not preserved!", 4);
        }
        mpz_t __stady_gmp_70;
        __gmpz_init_set_si(__stady_gmp_70, l1);
        mpz_t __stady_gmp_71;
        __gmpz_init_set_si(__stady_gmp_71, l2);
        mpz_t __stady_gmp_72;
        __gmpz_init(__stady_gmp_72);
        __gmpz_add(__stady_gmp_72, __stady_gmp_70, __stady_gmp_71);
        __gmpz_clear(__stady_gmp_70);
        __gmpz_clear(__stady_gmp_71);
        mpz_t __stady_gmp_73;
        __gmpz_init_set_si(__stady_gmp_73, k);
        mpz_t __stady_gmp_74;
        __gmpz_init(__stady_gmp_74);
        __gmpz_sub(__stady_gmp_74, __stady_gmp_72, __stady_gmp_73);
        __gmpz_clear(__stady_gmp_72);
        __gmpz_clear(__stady_gmp_73);
        __stady_term_25 = __gmpz_cmp_ui(__stady_gmp_69, 0);
        if(__stady_term_25 < 0) {
          pathcrawler_assert_exception("Variant non positive", 9);
        }
        __stady_term_25 = __gmpz_cmp(__stady_gmp_74, __stady_gmp_69);
        if(__stady_term_25 >= 0) {
          pathcrawler_assert_exception("Variant non decreasing", 9);
        }
        __gmpz_clear(__stady_gmp_69);
        }
         __gmpz_clear(__stady_gmp_63);
      
    }
    {
      mpz_t __stady_gmp_75;
      __gmpz_init_set_str(__stady_gmp_75, "0", 10);
      mpz_t __stady_gmp_76;
      __gmpz_init_set_si(__stady_gmp_76, i);
      int __stady_term_26;
      __stady_term_26 = __gmpz_cmp(__stady_gmp_75, __stady_gmp_76);
      __gmpz_clear(__stady_gmp_75);
      __gmpz_clear(__stady_gmp_76);
      int __stady_pred_9;
      __stady_pred_9 = __stady_term_26 <= 0;
      if(__stady_pred_9) {
        __stady_pred_9 = i <= l1;
      }
      if(! __stady_pred_9) {
        pathcrawler_assert_exception("Loop invariant not established!", 16);
      }
      mpz_t __stady_gmp_79;
      __gmpz_init_set_str(__stady_gmp_79, "0", 10);
      mpz_t __stady_gmp_80;
      __gmpz_init_set_si(__stady_gmp_80, k);
      int __stady_term_28;
      __stady_term_28 = __gmpz_cmp(__stady_gmp_79, __stady_gmp_80);
      __gmpz_clear(__stady_gmp_79);
      __gmpz_clear(__stady_gmp_80);
      int __stady_pred_11;
      __stady_pred_11 = __stady_term_28 <= 0;
      if(__stady_pred_11) {
        mpz_t __stady_gmp_81;
        __gmpz_init_set_si(__stady_gmp_81, k);
        mpz_t __stady_gmp_82;
        __gmpz_init_set_si(__stady_gmp_82, l1);
        mpz_t __stady_gmp_83;
        __gmpz_init_set_si(__stady_gmp_83, l2);
        mpz_t __stady_gmp_84;
        __gmpz_init(__stady_gmp_84);
        __gmpz_add(__stady_gmp_84, __stady_gmp_82, __stady_gmp_83);
        __gmpz_clear(__stady_gmp_82);
        __gmpz_clear(__stady_gmp_83);
        int __stady_term_29;
        __stady_term_29 = __gmpz_cmp(__stady_gmp_81, __stady_gmp_84);
        __gmpz_clear(__stady_gmp_81);
        __gmpz_clear(__stady_gmp_84);
        __stady_pred_11 = __stady_term_29 <= 0;
      }
      if(! __stady_pred_11) {
        pathcrawler_assert_exception("Loop invariant not established!", 0);
      }
      mpz_t __stady_gmp_91;
      __gmpz_init_set_si(__stady_gmp_91, k);
      mpz_t __stady_gmp_92;
      __gmpz_init_set_si(__stady_gmp_92, i);
      mpz_t __stady_gmp_93;
      __gmpz_init_set_si(__stady_gmp_93, j);
      mpz_t __stady_gmp_94;
      __gmpz_init(__stady_gmp_94);
      __gmpz_add(__stady_gmp_94, __stady_gmp_92, __stady_gmp_93);
      __gmpz_clear(__stady_gmp_92);
      __gmpz_clear(__stady_gmp_93);
      int __stady_term_32;
      __stady_term_32 = __gmpz_cmp(__stady_gmp_91, __stady_gmp_94);
      __gmpz_clear(__stady_gmp_91);
      __gmpz_clear(__stady_gmp_94);
      if(! (__stady_term_32 == 0)) {
        pathcrawler_assert_exception("Loop invariant not established!", 6);
      }
      mpz_t __stady_gmp_99;
      __gmpz_init_set_si(__stady_gmp_99, l1);
      mpz_t __stady_gmp_100;
      __gmpz_init_set_si(__stady_gmp_100, i);
      mpz_t __stady_gmp_101;
      __gmpz_init(__stady_gmp_101);
      __gmpz_sub(__stady_gmp_101, __stady_gmp_99, __stady_gmp_100);
      __gmpz_clear(__stady_gmp_99);
      __gmpz_clear(__stady_gmp_100);
      int __stady_term_34;
      __stady_term_34 = __gmpz_cmp_ui(__stady_gmp_101, 0);
      if(__stady_term_34 < 0) {
        pathcrawler_assert_exception("Variant non positive", 15);
      }
      while (1) {
        mpz_t __stady_gmp_102;
        __gmpz_init_set_si(__stady_gmp_102, l1);
        mpz_t __stady_gmp_103;
        __gmpz_init_set_si(__stady_gmp_103, i);
        mpz_t __stady_gmp_104;
        __gmpz_init(__stady_gmp_104);
        __gmpz_sub(__stady_gmp_104, __stady_gmp_102, __stady_gmp_103);
        __gmpz_clear(__stady_gmp_102);
        __gmpz_clear(__stady_gmp_103);
        mpz_t __stady_gmp_105;
        __gmpz_init_set(__stady_gmp_105, __stady_gmp_104);
        {
          if (! (i < l1)) {
                            pathcrawler_to_framac("@FC:REACHABLE_STMT:22");
                            break;
                          }
          *(t3 + k) = *(t1 + i);
          i ++;
          k ++;
        }mpz_t __stady_gmp_77;
        __gmpz_init_set_str(__stady_gmp_77, "0", 10);
        mpz_t __stady_gmp_78;
        __gmpz_init_set_si(__stady_gmp_78, i);
        int __stady_term_27;
        __stady_term_27 = __gmpz_cmp(__stady_gmp_77, __stady_gmp_78);
        __gmpz_clear(__stady_gmp_77);
        __gmpz_clear(__stady_gmp_78);
        int __stady_pred_10;
        __stady_pred_10 = __stady_term_27 <= 0;
        if(__stady_pred_10) {
          __stady_pred_10 = i <= l1;
        }
        if(! __stady_pred_10) {
          pathcrawler_assert_exception("Loop invariant not preserved!", 16);
        }
        mpz_t __stady_gmp_85;
        __gmpz_init_set_str(__stady_gmp_85, "0", 10);
        mpz_t __stady_gmp_86;
        __gmpz_init_set_si(__stady_gmp_86, k);
        int __stady_term_30;
        __stady_term_30 = __gmpz_cmp(__stady_gmp_85, __stady_gmp_86);
        __gmpz_clear(__stady_gmp_85);
        __gmpz_clear(__stady_gmp_86);
        int __stady_pred_12;
        __stady_pred_12 = __stady_term_30 <= 0;
        if(__stady_pred_12) {
          mpz_t __stady_gmp_87;
          __gmpz_init_set_si(__stady_gmp_87, k);
          mpz_t __stady_gmp_88;
          __gmpz_init_set_si(__stady_gmp_88, l1);
          mpz_t __stady_gmp_89;
          __gmpz_init_set_si(__stady_gmp_89, l2);
          mpz_t __stady_gmp_90;
          __gmpz_init(__stady_gmp_90);
          __gmpz_add(__stady_gmp_90, __stady_gmp_88, __stady_gmp_89);
          __gmpz_clear(__stady_gmp_88);
          __gmpz_clear(__stady_gmp_89);
          int __stady_term_31;
          __stady_term_31 = __gmpz_cmp(__stady_gmp_87, __stady_gmp_90);
          __gmpz_clear(__stady_gmp_87);
          __gmpz_clear(__stady_gmp_90);
          __stady_pred_12 = __stady_term_31 <= 0;
        }
        if(! __stady_pred_12) {
          pathcrawler_assert_exception("Loop invariant not preserved!", 0);
        }
        mpz_t __stady_gmp_95;
        __gmpz_init_set_si(__stady_gmp_95, k);
        mpz_t __stady_gmp_96;
        __gmpz_init_set_si(__stady_gmp_96, i);
        mpz_t __stady_gmp_97;
        __gmpz_init_set_si(__stady_gmp_97, j);
        mpz_t __stady_gmp_98;
        __gmpz_init(__stady_gmp_98);
        __gmpz_add(__stady_gmp_98, __stady_gmp_96, __stady_gmp_97);
        __gmpz_clear(__stady_gmp_96);
        __gmpz_clear(__stady_gmp_97);
        int __stady_term_33;
        __stady_term_33 = __gmpz_cmp(__stady_gmp_95, __stady_gmp_98);
        __gmpz_clear(__stady_gmp_95);
        __gmpz_clear(__stady_gmp_98);
        if(! (__stady_term_33 == 0)) {
          pathcrawler_assert_exception("Loop invariant not preserved!", 6);
        }
        mpz_t __stady_gmp_106;
        __gmpz_init_set_si(__stady_gmp_106, l1);
        mpz_t __stady_gmp_107;
        __gmpz_init_set_si(__stady_gmp_107, i);
        mpz_t __stady_gmp_108;
        __gmpz_init(__stady_gmp_108);
        __gmpz_sub(__stady_gmp_108, __stady_gmp_106, __stady_gmp_107);
        __gmpz_clear(__stady_gmp_106);
        __gmpz_clear(__stady_gmp_107);
        __stady_term_34 = __gmpz_cmp_ui(__stady_gmp_105, 0);
        if(__stady_term_34 < 0) {
          pathcrawler_assert_exception("Variant non positive", 15);
        }
        __stady_term_34 = __gmpz_cmp(__stady_gmp_108, __stady_gmp_105);
        if(__stady_term_34 >= 0) {
          pathcrawler_assert_exception("Variant non decreasing", 15);
        }
        __gmpz_clear(__stady_gmp_105);
        }
         __gmpz_clear(__stady_gmp_101);
      
    }
    {
      mpz_t __stady_gmp_109;
      __gmpz_init_set_str(__stady_gmp_109, "0", 10);
      mpz_t __stady_gmp_110;
      __gmpz_init_set_si(__stady_gmp_110, j);
      int __stady_term_35;
      __stady_term_35 = __gmpz_cmp(__stady_gmp_109, __stady_gmp_110);
      __gmpz_clear(__stady_gmp_109);
      __gmpz_clear(__stady_gmp_110);
      int __stady_pred_13;
      __stady_pred_13 = __stady_term_35 <= 0;
      if(__stady_pred_13) {
        __stady_pred_13 = j <= l2;
      }
      if(! __stady_pred_13) {
        pathcrawler_assert_exception("Loop invariant not established!", 18);
      }
      mpz_t __stady_gmp_113;
      __gmpz_init_set_str(__stady_gmp_113, "0", 10);
      mpz_t __stady_gmp_114;
      __gmpz_init_set_si(__stady_gmp_114, k);
      int __stady_term_37;
      __stady_term_37 = __gmpz_cmp(__stady_gmp_113, __stady_gmp_114);
      __gmpz_clear(__stady_gmp_113);
      __gmpz_clear(__stady_gmp_114);
      int __stady_pred_15;
      __stady_pred_15 = __stady_term_37 <= 0;
      if(__stady_pred_15) {
        mpz_t __stady_gmp_115;
        __gmpz_init_set_si(__stady_gmp_115, k);
        mpz_t __stady_gmp_116;
        __gmpz_init_set_si(__stady_gmp_116, l1);
        mpz_t __stady_gmp_117;
        __gmpz_init_set_si(__stady_gmp_117, l2);
        mpz_t __stady_gmp_118;
        __gmpz_init(__stady_gmp_118);
        __gmpz_add(__stady_gmp_118, __stady_gmp_116, __stady_gmp_117);
        __gmpz_clear(__stady_gmp_116);
        __gmpz_clear(__stady_gmp_117);
        int __stady_term_38;
        __stady_term_38 = __gmpz_cmp(__stady_gmp_115, __stady_gmp_118);
        __gmpz_clear(__stady_gmp_115);
        __gmpz_clear(__stady_gmp_118);
        __stady_pred_15 = __stady_term_38 <= 0;
      }
      if(! __stady_pred_15) {
        pathcrawler_assert_exception("Loop invariant not established!", 3);
      }
      mpz_t __stady_gmp_125;
      __gmpz_init_set_si(__stady_gmp_125, k);
      mpz_t __stady_gmp_126;
      __gmpz_init_set_si(__stady_gmp_126, i);
      mpz_t __stady_gmp_127;
      __gmpz_init_set_si(__stady_gmp_127, j);
      mpz_t __stady_gmp_128;
      __gmpz_init(__stady_gmp_128);
      __gmpz_add(__stady_gmp_128, __stady_gmp_126, __stady_gmp_127);
      __gmpz_clear(__stady_gmp_126);
      __gmpz_clear(__stady_gmp_127);
      int __stady_term_41;
      __stady_term_41 = __gmpz_cmp(__stady_gmp_125, __stady_gmp_128);
      __gmpz_clear(__stady_gmp_125);
      __gmpz_clear(__stady_gmp_128);
      if(! (__stady_term_41 == 0)) {
        pathcrawler_assert_exception("Loop invariant not established!", 10);
      }
      mpz_t __stady_gmp_133;
      __gmpz_init_set_si(__stady_gmp_133, l2);
      mpz_t __stady_gmp_134;
      __gmpz_init_set_si(__stady_gmp_134, j);
      mpz_t __stady_gmp_135;
      __gmpz_init(__stady_gmp_135);
      __gmpz_sub(__stady_gmp_135, __stady_gmp_133, __stady_gmp_134);
      __gmpz_clear(__stady_gmp_133);
      __gmpz_clear(__stady_gmp_134);
      int __stady_term_43;
      __stady_term_43 = __gmpz_cmp_ui(__stady_gmp_135, 0);
      if(__stady_term_43 < 0) {
        pathcrawler_assert_exception("Variant non positive", 20);
      }
      while (1) {
        mpz_t __stady_gmp_136;
        __gmpz_init_set_si(__stady_gmp_136, l2);
        mpz_t __stady_gmp_137;
        __gmpz_init_set_si(__stady_gmp_137, j);
        mpz_t __stady_gmp_138;
        __gmpz_init(__stady_gmp_138);
        __gmpz_sub(__stady_gmp_138, __stady_gmp_136, __stady_gmp_137);
        __gmpz_clear(__stady_gmp_136);
        __gmpz_clear(__stady_gmp_137);
        mpz_t __stady_gmp_139;
        __gmpz_init_set(__stady_gmp_139, __stady_gmp_138);
        {
          if (! (j < l2)) {
                            pathcrawler_to_framac("@FC:REACHABLE_STMT:30");
                            break;
                          }
          *(t3 + k) = *(t2 + j);
          j ++;
          k ++;
        }mpz_t __stady_gmp_111;
        __gmpz_init_set_str(__stady_gmp_111, "0", 10);
        mpz_t __stady_gmp_112;
        __gmpz_init_set_si(__stady_gmp_112, j);
        int __stady_term_36;
        __stady_term_36 = __gmpz_cmp(__stady_gmp_111, __stady_gmp_112);
        __gmpz_clear(__stady_gmp_111);
        __gmpz_clear(__stady_gmp_112);
        int __stady_pred_14;
        __stady_pred_14 = __stady_term_36 <= 0;
        if(__stady_pred_14) {
          __stady_pred_14 = j <= l2;
        }
        if(! __stady_pred_14) {
          pathcrawler_assert_exception("Loop invariant not preserved!", 18);
        }
        mpz_t __stady_gmp_119;
        __gmpz_init_set_str(__stady_gmp_119, "0", 10);
        mpz_t __stady_gmp_120;
        __gmpz_init_set_si(__stady_gmp_120, k);
        int __stady_term_39;
        __stady_term_39 = __gmpz_cmp(__stady_gmp_119, __stady_gmp_120);
        __gmpz_clear(__stady_gmp_119);
        __gmpz_clear(__stady_gmp_120);
        int __stady_pred_16;
        __stady_pred_16 = __stady_term_39 <= 0;
        if(__stady_pred_16) {
          mpz_t __stady_gmp_121;
          __gmpz_init_set_si(__stady_gmp_121, k);
          mpz_t __stady_gmp_122;
          __gmpz_init_set_si(__stady_gmp_122, l1);
          mpz_t __stady_gmp_123;
          __gmpz_init_set_si(__stady_gmp_123, l2);
          mpz_t __stady_gmp_124;
          __gmpz_init(__stady_gmp_124);
          __gmpz_add(__stady_gmp_124, __stady_gmp_122, __stady_gmp_123);
          __gmpz_clear(__stady_gmp_122);
          __gmpz_clear(__stady_gmp_123);
          int __stady_term_40;
          __stady_term_40 = __gmpz_cmp(__stady_gmp_121, __stady_gmp_124);
          __gmpz_clear(__stady_gmp_121);
          __gmpz_clear(__stady_gmp_124);
          __stady_pred_16 = __stady_term_40 <= 0;
        }
        if(! __stady_pred_16) {
          pathcrawler_assert_exception("Loop invariant not preserved!", 3);
        }
        mpz_t __stady_gmp_129;
        __gmpz_init_set_si(__stady_gmp_129, k);
        mpz_t __stady_gmp_130;
        __gmpz_init_set_si(__stady_gmp_130, i);
        mpz_t __stady_gmp_131;
        __gmpz_init_set_si(__stady_gmp_131, j);
        mpz_t __stady_gmp_132;
        __gmpz_init(__stady_gmp_132);
        __gmpz_add(__stady_gmp_132, __stady_gmp_130, __stady_gmp_131);
        __gmpz_clear(__stady_gmp_130);
        __gmpz_clear(__stady_gmp_131);
        int __stady_term_42;
        __stady_term_42 = __gmpz_cmp(__stady_gmp_129, __stady_gmp_132);
        __gmpz_clear(__stady_gmp_129);
        __gmpz_clear(__stady_gmp_132);
        if(! (__stady_term_42 == 0)) {
          pathcrawler_assert_exception("Loop invariant not preserved!", 10);
        }
        mpz_t __stady_gmp_140;
        __gmpz_init_set_si(__stady_gmp_140, l2);
        mpz_t __stady_gmp_141;
        __gmpz_init_set_si(__stady_gmp_141, j);
        mpz_t __stady_gmp_142;
        __gmpz_init(__stady_gmp_142);
        __gmpz_sub(__stady_gmp_142, __stady_gmp_140, __stady_gmp_141);
        __gmpz_clear(__stady_gmp_140);
        __gmpz_clear(__stady_gmp_141);
        __stady_term_43 = __gmpz_cmp_ui(__stady_gmp_139, 0);
        if(__stady_term_43 < 0) {
          pathcrawler_assert_exception("Variant non positive", 20);
        }
        __stady_term_43 = __gmpz_cmp(__stady_gmp_142, __stady_gmp_139);
        if(__stady_term_43 >= 0) {
          pathcrawler_assert_exception("Variant non decreasing", 20);
        }
        __gmpz_clear(__stady_gmp_139);
        }
         __gmpz_clear(__stady_gmp_135);
      
    }
    {
      int __stady_pred_2;
      __stady_pred_2 = 1;
      {
        mpz_t __q_i;
        mpz_t __stady_gmp_16;
        __gmpz_init_set_str(__stady_gmp_16, "0", 10);
        mpz_t __stady_gmp_17;
        __gmpz_init_set_si(__stady_gmp_17, old_l1);
        mpz_t __stady_gmp_18;
        __gmpz_init_set_si(__stady_gmp_18, old_l2);
        mpz_t __stady_gmp_19;
        __gmpz_init(__stady_gmp_19);
        __gmpz_add(__stady_gmp_19, __stady_gmp_17, __stady_gmp_18);
        __gmpz_clear(__stady_gmp_17);
        __gmpz_clear(__stady_gmp_18);
        mpz_t __stady_gmp_20;
        __gmpz_init_set_str(__stady_gmp_20, "1", 10);
        mpz_t __stady_gmp_21;
        __gmpz_init(__stady_gmp_21);
        __gmpz_sub(__stady_gmp_21, __stady_gmp_19, __stady_gmp_20);
        __gmpz_clear(__stady_gmp_19);
        __gmpz_clear(__stady_gmp_20);
        __gmpz_init_set(__q_i, __stady_gmp_16);
        int __stady_term_6;
        __stady_term_6 = __gmpz_cmp(__q_i, __stady_gmp_21);
        for(; __stady_term_6 < 0 && __stady_pred_2; ) {
          mpz_t __stady_gmp_22;
          __gmpz_init_set(__stady_gmp_22, __q_i);
          int __stady_term_7;
          __stady_term_7 = __gmpz_get_si(__stady_gmp_22);
          __gmpz_clear(__stady_gmp_22);
          mpz_t __stady_gmp_23;
          __gmpz_init_set(__stady_gmp_23, __q_i);
          mpz_t __stady_gmp_24;
          __gmpz_init_set_str(__stady_gmp_24, "1", 10);
          mpz_t __stady_gmp_25;
          __gmpz_init(__stady_gmp_25);
          __gmpz_add(__stady_gmp_25, __stady_gmp_23, __stady_gmp_24);
          __gmpz_clear(__stady_gmp_23);
          __gmpz_clear(__stady_gmp_24);
          int __stady_term_8;
          __stady_term_8 = __gmpz_get_si(__stady_gmp_25);
          __gmpz_clear(__stady_gmp_25);
          __stady_pred_2 = *(old_t3 + __stady_term_7) <= *(old_t3 + __stady_term_8);
          __gmpz_add_ui(__q_i, __q_i, 1);
          __stady_term_6 = __gmpz_cmp(__q_i, __stady_gmp_21);
        }
        __gmpz_clear(__q_i);
        __gmpz_clear(__stady_gmp_16);
        __gmpz_clear(__stady_gmp_21);
      }
      if(! __stady_pred_2) {
        pathcrawler_assert_exception("Post-condition!", 14);
      }
    }
    free(old_ptr_t1);
    free(old_ptr_t2);
    free(old_ptr_t3);
    return;
  }
}


[kernel] preprocessing with "gcc -C -E -I.  __sd_instru_merge_arrays_merge_arrays.c"
[kernel] preprocessing with "gcc -C -E -I. -include /usr/local/share/frama-c/pc/lib/lanceur_deb.h __sd_instru_merge_arrays_merge_arrays.c"
[pc] analyzing...
[pc] Compiling pathcrawler___sd_instru_merge_arrays_merge_arrays/lanceur_merge_arrays utilities ...
[pc] Compiling pathcrawler___sd_instru_merge_arrays_merge_arrays/lanceur_merge_arrays ...
[pc] generating tests...
[pc] Starting lanceur_merge_arrays (isc version)
[pc] Starting lanceur_pathcrawler__merge_arrays_precond (isc version)
[pc] generation finished
[stady] all-paths: true
[stady] 5330 test cases
[report] Computing properties status...

--------------------------------------------------------------------------------
--- Properties of Function 'merge_arrays'
--------------------------------------------------------------------------------

[ Partial ] Post-condition (file tests/merge_arrays/merge_arrays.c, line 15)
            By StaDy, with pending:
             - Pre-condition (file tests/merge_arrays/merge_arrays.c, line 13)
             - Pre-condition (file tests/merge_arrays/merge_arrays.c, line 14)
[ Partial ] Loop variant at loop (file tests/merge_arrays/merge_arrays.c, line 26)
            By StaDy, with pending:
             - Pre-condition (file tests/merge_arrays/merge_arrays.c, line 13)
             - Pre-condition (file tests/merge_arrays/merge_arrays.c, line 14)
[ Partial ] Loop variant at loop (file tests/merge_arrays/merge_arrays.c, line 42)
            By StaDy, with pending:
             - Pre-condition (file tests/merge_arrays/merge_arrays.c, line 13)
             - Pre-condition (file tests/merge_arrays/merge_arrays.c, line 14)
[ Partial ] Loop variant at loop (file tests/merge_arrays/merge_arrays.c, line 52)
            By StaDy, with pending:
             - Pre-condition (file tests/merge_arrays/merge_arrays.c, line 13)
             - Pre-condition (file tests/merge_arrays/merge_arrays.c, line 14)
[ Partial ] Invariant (file tests/merge_arrays/merge_arrays.c, line 20)
            By StaDy, with pending:
             - Pre-condition (file tests/merge_arrays/merge_arrays.c, line 13)
             - Pre-condition (file tests/merge_arrays/merge_arrays.c, line 14)
[ Partial ] Invariant (file tests/merge_arrays/merge_arrays.c, line 21)
            By StaDy, with pending:
             - Pre-condition (file tests/merge_arrays/merge_arrays.c, line 13)
             - Pre-condition (file tests/merge_arrays/merge_arrays.c, line 14)
[ Partial ] Invariant (file tests/merge_arrays/merge_arrays.c, line 22)
            By StaDy, with pending:
             - Pre-condition (file tests/merge_arrays/merge_arrays.c, line 13)
             - Pre-condition (file tests/merge_arrays/merge_arrays.c, line 14)
[ Partial ] Invariant (file tests/merge_arrays/merge_arrays.c, line 23)
            By StaDy, with pending:
             - Pre-condition (file tests/merge_arrays/merge_arrays.c, line 13)
             - Pre-condition (file tests/merge_arrays/merge_arrays.c, line 14)
[ Partial ] Invariant (file tests/merge_arrays/merge_arrays.c, line 37)
            By StaDy, with pending:
             - Pre-condition (file tests/merge_arrays/merge_arrays.c, line 13)
             - Pre-condition (file tests/merge_arrays/merge_arrays.c, line 14)
[ Partial ] Invariant (file tests/merge_arrays/merge_arrays.c, line 38)
            By StaDy, with pending:
             - Pre-condition (file tests/merge_arrays/merge_arrays.c, line 13)
             - Pre-condition (file tests/merge_arrays/merge_arrays.c, line 14)
[ Partial ] Invariant (file tests/merge_arrays/merge_arrays.c, line 39)
            By StaDy, with pending:
             - Pre-condition (file tests/merge_arrays/merge_arrays.c, line 13)
             - Pre-condition (file tests/merge_arrays/merge_arrays.c, line 14)
[ Partial ] Invariant (file tests/merge_arrays/merge_arrays.c, line 47)
            By StaDy, with pending:
             - Pre-condition (file tests/merge_arrays/merge_arrays.c, line 13)
             - Pre-condition (file tests/merge_arrays/merge_arrays.c, line 14)
[ Partial ] Invariant (file tests/merge_arrays/merge_arrays.c, line 48)
            By StaDy, with pending:
             - Pre-condition (file tests/merge_arrays/merge_arrays.c, line 13)
             - Pre-condition (file tests/merge_arrays/merge_arrays.c, line 14)
[ Partial ] Invariant (file tests/merge_arrays/merge_arrays.c, line 49)
            By StaDy, with pending:
             - Pre-condition (file tests/merge_arrays/merge_arrays.c, line 13)
             - Pre-condition (file tests/merge_arrays/merge_arrays.c, line 14)
[ Partial ] Default behavior
            By Frama-C kernel, with pending:
             - Pre-condition (file tests/merge_arrays/merge_arrays.c, line 13)
             - Pre-condition (file tests/merge_arrays/merge_arrays.c, line 14)

--------------------------------------------------------------------------------
--- Status Report Summary
--------------------------------------------------------------------------------
    15 Locally validated
    15 Total
--------------------------------------------------------------------------------
