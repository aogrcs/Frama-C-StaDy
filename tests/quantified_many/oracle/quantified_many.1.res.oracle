[kernel] preprocessing with "gcc -C -E -I.  tests/quantified_many/quantified_many.c"
[stady:generated-c] generated C file:
/* Generated by Frama-C */
struct __anonstruct___mpz_struct_1 {int _mp_alloc ;int _mp_size ;unsigned long *_mp_d ;};typedef struct __anonstruct___mpz_struct_1 __mpz_struct;typedef __mpz_struct mpz_t[1];
extern signed long int __gmpz_get_si(mpz_t);
extern int __gmpz_cmp(mpz_t, mpz_t);
extern void __gmpz_clear(mpz_t);
extern void __gmpz_init_set(mpz_t, mpz_t);
extern void __gmpz_init_set_str(mpz_t, const char*, int);
extern void __gmpz_add_ui(mpz_t, const mpz_t, unsigned long int);
extern int pathcrawler_assert_exception(char*,int);
extern void pathcrawler_to_framac(char*);
int f_precond(int default_value)
{
  return 1;
}

void f(int default_value)
{
  int old_default_value;
  old_default_value = default_value;
  {
    int t[5][5];
    int min;
    int i;
    int j;
    i = 0;
    while (1) {
      {
        if (! (i < 5)) {
                         pathcrawler_to_framac("@FC:REACHABLE_STMT:5");
                         break;
                       }
        j = 0;
        while (1) {
          {
            if (! (j < 5)) {
                             pathcrawler_to_framac("@FC:REACHABLE_STMT:10");
                             break;
                           }
            t[i][j] = i + j;
            j ++;
          }}
           
        i ++;
      }}
       
    min = t[0][0];
    i = 0;
    while (1) {
      {
        if (! (i < 5)) {
                         pathcrawler_to_framac("@FC:REACHABLE_STMT:19");
                         break;
                       }
        j = 0;
        while (1) {
          {
            if (! (j < 5)) {
                             pathcrawler_to_framac("@FC:REACHABLE_STMT:25");
                             break;
                           }
            if (t[i][j] < min) {
                                 pathcrawler_to_framac("@FC:REACHABLE_STMT:29");
                                 min = t[i][j];
                               }
            j ++;
          }}
           
        i ++;
      }}
       
    ;
    ;
    min = default_value;
    i = 0;
    while (1) {
      {
        if (! (i < 5)) {
                         pathcrawler_to_framac("@FC:REACHABLE_STMT:40");
                         break;
                       }
        j = 0;
        while (1) {
          {
            if (! (j < 5)) {
                             pathcrawler_to_framac("@FC:REACHABLE_STMT:46");
                             break;
                           }
            if (t[i][j] < min) {
                                 pathcrawler_to_framac("@FC:REACHABLE_STMT:50");
                                 min = t[i][j];
                               }
            j ++;
          }}
           
        i ++;
      }}
       
    {
      int __stady_pred_0;
      __stady_pred_0 = 1;
      {
        mpz_t __q_b;
        mpz_t __stady_gmp_0;
        __gmpz_init_set_str(__stady_gmp_0, "0", 10);
        mpz_t __stady_gmp_1;
        __gmpz_init_set_str(__stady_gmp_1, "5", 10);
        __gmpz_init_set(__q_b, __stady_gmp_0);
        int __stady_term_0;
        __stady_term_0 = __gmpz_cmp(__q_b, __stady_gmp_1);
        mpz_t __q_a;
        mpz_t __stady_gmp_2;
        __gmpz_init_set_str(__stady_gmp_2, "0", 10);
        mpz_t __stady_gmp_3;
        __gmpz_init_set_str(__stady_gmp_3, "5", 10);
        __gmpz_init_set(__q_a, __stady_gmp_2);
        int __stady_term_1;
        __stady_term_1 = __gmpz_cmp(__q_a, __stady_gmp_3);
        for(; __stady_term_1 < 0 && (__stady_term_0 < 0 && __stady_pred_0); ) {
          mpz_t __stady_gmp_4;
          __gmpz_init_set(__stady_gmp_4, __q_a);
          int __stady_term_2;
          __stady_term_2 = __gmpz_get_si(__stady_gmp_4);
          mpz_t __stady_gmp_5;
          __gmpz_init_set(__stady_gmp_5, __q_b);
          int __stady_term_3;
          __stady_term_3 = __gmpz_get_si(__stady_gmp_5);
          __stady_pred_0 = min <= t[__stady_term_2][__stady_term_3];
          __gmpz_add_ui(__q_b, __q_b, 1);
          __stady_term_0 = __gmpz_cmp(__q_b, __stady_gmp_1);
          __gmpz_add_ui(__q_a, __q_a, 1);
          __stady_term_1 = __gmpz_cmp(__q_a, __stady_gmp_3);
        }
        __gmpz_clear(__q_b);
        __gmpz_clear(__stady_gmp_0);
        __gmpz_clear(__stady_gmp_1);
        __gmpz_clear(__q_a);
        __gmpz_clear(__stady_gmp_2);
        __gmpz_clear(__stady_gmp_3);
      }
      if(! __stady_pred_0) {
        pathcrawler_assert_exception("Assert!", 3);
      }
      ;
    }
    {
      int __stady_pred_1;
      __stady_pred_1 = 0;
      {
        mpz_t __q_b;
        mpz_t __stady_gmp_6;
        __gmpz_init_set_str(__stady_gmp_6, "0", 10);
        mpz_t __stady_gmp_7;
        __gmpz_init_set_str(__stady_gmp_7, "5", 10);
        __gmpz_init_set(__q_b, __stady_gmp_6);
        int __stady_term_4;
        __stady_term_4 = __gmpz_cmp(__q_b, __stady_gmp_7);
        mpz_t __q_a;
        mpz_t __stady_gmp_8;
        __gmpz_init_set_str(__stady_gmp_8, "0", 10);
        mpz_t __stady_gmp_9;
        __gmpz_init_set_str(__stady_gmp_9, "5", 10);
        __gmpz_init_set(__q_a, __stady_gmp_8);
        int __stady_term_5;
        __stady_term_5 = __gmpz_cmp(__q_a, __stady_gmp_9);
        for(; __stady_term_5 < 0 && (__stady_term_4 < 0 && ! __stady_pred_1); ) {
          mpz_t __stady_gmp_10;
          __gmpz_init_set(__stady_gmp_10, __q_a);
          int __stady_term_6;
          __stady_term_6 = __gmpz_get_si(__stady_gmp_10);
          mpz_t __stady_gmp_11;
          __gmpz_init_set(__stady_gmp_11, __q_b);
          int __stady_term_7;
          __stady_term_7 = __gmpz_get_si(__stady_gmp_11);
          __stady_pred_1 = min == t[__stady_term_6][__stady_term_7];
          __gmpz_add_ui(__q_b, __q_b, 1);
          __stady_term_4 = __gmpz_cmp(__q_b, __stady_gmp_7);
          __gmpz_add_ui(__q_a, __q_a, 1);
          __stady_term_5 = __gmpz_cmp(__q_a, __stady_gmp_9);
        }
        __gmpz_clear(__q_b);
        __gmpz_clear(__stady_gmp_6);
        __gmpz_clear(__stady_gmp_7);
        __gmpz_clear(__q_a);
        __gmpz_clear(__stady_gmp_8);
        __gmpz_clear(__stady_gmp_9);
      }
      if(! __stady_pred_1) {
        pathcrawler_assert_exception("Assert!", 0);
      }
      ;
    }
    return;
  }
}


[kernel] preprocessing with "gcc -C -E -I.  __sd_instru_quantified_many_f.c"
[kernel] preprocessing with "gcc -C -E -I. -include /usr/local/share/frama-c/pc/lib/lanceur_deb.h __sd_instru_quantified_many_f.c"
[pc] analyzing...
[pc] Compiling pathcrawler___sd_instru_quantified_many_f/lanceur_f utilities ...
[pc] Compiling pathcrawler___sd_instru_quantified_many_f/lanceur_f ...
[pc] generating tests...
[pc] Starting lanceur_f (isc version)
[pc] Starting lanceur_pathcrawler__f_precond (isc version)
[pc] Starting lanceur_f (isc version)
[pc] generation finished
[stady] all-paths: false
[stady] 295 test cases
[report] Computing properties status...

--------------------------------------------------------------------------------
--- Properties of Function 'f'
--------------------------------------------------------------------------------

[   Bug   ] Assertion 'A4' (file tests/quantified_many/quantified_many.c, line 40)
            by StaDy.

--------------------------------------------------------------------------------
--- Status Report Summary
--------------------------------------------------------------------------------
     1 Bugs found
     1 Total
--------------------------------------------------------------------------------
