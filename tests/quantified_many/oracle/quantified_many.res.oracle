[kernel] Parsing FRAMAC_SHARE/libc/__fc_builtin_for_normalization.i (no preprocessing)
[kernel] Parsing tests/quantified_many/quantified_many.c (with preprocessing)
[stady:generated-c] generated C file:
/* Generated by Frama-C */
struct __anonstruct___mpz_struct_1 {int _mp_alloc ;int _mp_size ;unsigned long *_mp_d ;};typedef struct __anonstruct___mpz_struct_1 __mpz_struct;typedef __mpz_struct mpz_t[1];
extern signed long int __gmpz_get_si(mpz_t);
extern int __gmpz_cmp(mpz_t, mpz_t);
extern void __gmpz_clear(mpz_t);
extern void __gmpz_init_set(mpz_t, mpz_t);
extern void __gmpz_init_set_str(mpz_t, const char*, int);
extern void __gmpz_add_ui(mpz_t, const mpz_t, unsigned long int);
extern int pathcrawler_assert_exception(char*,int);
int f_precond(int default_value)
{
  return 1;
}

void f(int default_value)
{
  int old_default_value;
  old_default_value = default_value;
  {
    int t[5][5];
    int min;
    int i;
    int j;
    i = 0;
    while (1) {
      if (! (i < 5)) break;j = 0;
                           while (1) {
                             if (! (j < 5)) break;t[i][j] = i + j;
                                                  j ++;}
                              
                           i ++;}
       
    min = t[0][0];
    i = 0;
    while (1) {
      if (! (i < 5)) break;j = 0;
                           while (1) {
                             if (! (j < 5)) break;if (t[i][j] < min) 
                                                    min = t[i][j];
                                                  j ++;}
                              
                           i ++;}
       
    ;
    ;
    min = default_value;
    i = 0;
    while (1) {
      if (! (i < 5)) break;j = 0;
                           while (1) {
                             if (! (j < 5)) break;if (t[i][j] < min) 
                                                    min = t[i][j];
                                                  j ++;}
                              
                           i ++;}
       
    {
      int __sd_forall_0;
      __sd_forall_0 = 1;
      {
        mpz_t __q_b;
        mpz_t __sd_Z_cst_0;
        __gmpz_init_set_str(__sd_Z_cst_0,"0",10);
        mpz_t __sd_Z_cst_1;
        __gmpz_init_set_str(__sd_Z_cst_1,"5",10);
        __gmpz_init_set(__q_b,__sd_Z_cst_0);
        int __sd_forall_cmp_0;
        __sd_forall_cmp_0 = __gmpz_cmp(__q_b,__sd_Z_cst_1);
        mpz_t __q_a;
        mpz_t __sd_Z_cst_2;
        __gmpz_init_set_str(__sd_Z_cst_2,"0",10);
        mpz_t __sd_Z_cst_3;
        __gmpz_init_set_str(__sd_Z_cst_3,"5",10);
        __gmpz_init_set(__q_a,__sd_Z_cst_2);
        int __sd_forall_cmp_1;
        __sd_forall_cmp_1 = __gmpz_cmp(__q_a,__sd_Z_cst_3);
        while(__sd_forall_cmp_1 < 0 && (__sd_forall_cmp_0 < 0 && __sd_forall_0)) {
          mpz_t __sd_Z_lval_0;
          __gmpz_init_set(__sd_Z_lval_0,__q_a);
          int __sd_to_ctype_0;
          __sd_to_ctype_0 = (int)__gmpz_get_si(__sd_Z_lval_0);
          __gmpz_clear(__sd_Z_lval_0);
          mpz_t __sd_Z_lval_1;
          __gmpz_init_set(__sd_Z_lval_1,__q_b);
          int __sd_to_ctype_1;
          __sd_to_ctype_1 = (int)__gmpz_get_si(__sd_Z_lval_1);
          __gmpz_clear(__sd_Z_lval_1);
          __sd_forall_0 = min <= t[__sd_to_ctype_0][__sd_to_ctype_1];
          __gmpz_add_ui(__q_b,__q_b,1);
          __sd_forall_cmp_0 = __gmpz_cmp(__q_b,__sd_Z_cst_1);
          __gmpz_add_ui(__q_a,__q_a,1);
          __sd_forall_cmp_1 = __gmpz_cmp(__q_a,__sd_Z_cst_3);
        }
        __gmpz_clear(__q_b);
        __gmpz_clear(__sd_Z_cst_0);
        __gmpz_clear(__sd_Z_cst_1);
        __gmpz_clear(__q_a);
        __gmpz_clear(__sd_Z_cst_2);
        __gmpz_clear(__sd_Z_cst_3);
      }
      if(! __sd_forall_0) {
        pathcrawler_assert_exception("",0);
      }
      ;
    }
    {
      int __sd_exists_0;
      __sd_exists_0 = 0;
      {
        mpz_t __q_b;
        mpz_t __sd_Z_cst_4;
        __gmpz_init_set_str(__sd_Z_cst_4,"0",10);
        mpz_t __sd_Z_cst_5;
        __gmpz_init_set_str(__sd_Z_cst_5,"5",10);
        __gmpz_init_set(__q_b,__sd_Z_cst_4);
        int __sd_exists_cmp_0;
        __sd_exists_cmp_0 = __gmpz_cmp(__q_b,__sd_Z_cst_5);
        mpz_t __q_a;
        mpz_t __sd_Z_cst_6;
        __gmpz_init_set_str(__sd_Z_cst_6,"0",10);
        mpz_t __sd_Z_cst_7;
        __gmpz_init_set_str(__sd_Z_cst_7,"5",10);
        __gmpz_init_set(__q_a,__sd_Z_cst_6);
        int __sd_exists_cmp_1;
        __sd_exists_cmp_1 = __gmpz_cmp(__q_a,__sd_Z_cst_7);
        while(__sd_exists_cmp_1 < 0 && (__sd_exists_cmp_0 < 0 && ! __sd_exists_0)) {
          mpz_t __sd_Z_lval_2;
          __gmpz_init_set(__sd_Z_lval_2,__q_a);
          int __sd_to_ctype_2;
          __sd_to_ctype_2 = (int)__gmpz_get_si(__sd_Z_lval_2);
          __gmpz_clear(__sd_Z_lval_2);
          mpz_t __sd_Z_lval_3;
          __gmpz_init_set(__sd_Z_lval_3,__q_b);
          int __sd_to_ctype_3;
          __sd_to_ctype_3 = (int)__gmpz_get_si(__sd_Z_lval_3);
          __gmpz_clear(__sd_Z_lval_3);
          __sd_exists_0 = min == t[__sd_to_ctype_2][__sd_to_ctype_3];
          __gmpz_add_ui(__q_b,__q_b,1);
          __sd_exists_cmp_0 = __gmpz_cmp(__q_b,__sd_Z_cst_5);
          __gmpz_add_ui(__q_a,__q_a,1);
          __sd_exists_cmp_1 = __gmpz_cmp(__q_a,__sd_Z_cst_7);
        }
        __gmpz_clear(__q_b);
        __gmpz_clear(__sd_Z_cst_4);
        __gmpz_clear(__sd_Z_cst_5);
        __gmpz_clear(__q_a);
        __gmpz_clear(__sd_Z_cst_6);
        __gmpz_clear(__sd_Z_cst_7);
      }
      if(! __sd_exists_0) {
        pathcrawler_assert_exception("",2);
      }
      ;
    }
    return;
  }
}


[kernel] Parsing FRAMAC_SHARE/libc/__fc_builtin_for_normalization.i (no preprocessing)
[kernel] Parsing __sd_instru_quantified_many_f.c (with preprocessing)
[kernel] Parsing FRAMAC_SHARE/libc/__fc_builtin_for_normalization.i (no preprocessing)
[kernel] Parsing __sd_instru_quantified_many_f.c (with preprocessing)
[pc] analyzing...
[pc] Compiling pathcrawler___sd_instru_quantified_many_f/lanceur_f utilities ...
[pc] Compiling pathcrawler___sd_instru_quantified_many_f/lanceur_f ...
[pc] generating tests...
[pc] Starting lanceur_f (isc version)
[pc] Starting lanceur_pathcrawler__f_precond (isc version)
[pc] Starting lanceur_f (isc version)
[pc] generation finished
[stady] all-paths: true
[stady] 295 test cases
[stady] NC of assert
              A4: ∃ ℤ a, ℤ b; 0 ≤ a < 5 ∧ 0 ≤ b < 5 ∧ min ≡ t[a][b]; 
        LOCATION: tests/quantified_many/quantified_many.c:39
        TEST DRIVER: testcases___sd_instru_quantified_many_f/f/testdrivers/TC_1.c
        default_value = -214739
[report] Computing properties status...

--------------------------------------------------------------------------------
--- Properties of Function 'f'
--------------------------------------------------------------------------------

[   Bug   ] Assertion 'A4' (file tests/quantified_many/quantified_many.c, line 39)
            by StaDy.

--------------------------------------------------------------------------------
--- Status Report Summary
--------------------------------------------------------------------------------
     1 Bugs found
     1 Total
--------------------------------------------------------------------------------
