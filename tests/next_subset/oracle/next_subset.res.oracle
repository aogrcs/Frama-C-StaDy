[kernel] preprocessing with "gcc -C -E -I.  tests/next_subset/next_subset.c"
tests/next_subset/next_subset.c:22:[stady] warning: Native Precondition:
                 ∀ ℤ __q_i; 0 ≤ __q_i < n ⇒ *(s+__q_i) ≡ 0 ∨ *(s+__q_i) ≡ 1 unsupported
[stady:generated-pl] generated Prolog precondition:
:- module(test_parameters).
:- import create_input_val/3 from substitution.
:- export dom/4.
:- export create_input_vals/2.
:- export unquantif_preconds/2.
:- export quantif_preconds/2.
:- export strategy/2.
:- export precondition_of/2.

dom(0,0,0,0).
dom('nextSubset', dim('s'), [], int([1..4294967295])).
dom('nextSubset', cont('s',_), [], int([-2147483648..2147483647])).
dom('pathcrawler__nextSubset_precond',A,B,C) :-
  dom('nextSubset',A,B,C).
create_input_vals('nextSubset', Ins):-
  create_input_val(dim('s'), int([1..4294967295]),Ins),
  create_input_val('n', int([0..3]),Ins),
  true.
create_input_vals('pathcrawler__nextSubset_precond',Ins) :-
  create_input_vals('nextSubset',Ins).
quantif_preconds('nextSubset',
  [
  ]
).
quantif_preconds('pathcrawler__nextSubset_precond',A) :-
  quantif_preconds('nextSubset',A).
unquantif_preconds('nextSubset',
  [
    cond(egal,dim('s'),+(int(math), -(int(math), 'n', 1), 1),pre)
  ]
).
unquantif_preconds('pathcrawler__nextSubset_precond',A) :-
  unquantif_preconds('nextSubset',A).
strategy('nextSubset',[]).
strategy('pathcrawler__nextSubset_precond',A) :-
  strategy('nextSubset',A).
precondition_of('nextSubset','pathcrawler__nextSubset_precond').
[stady:generated-c] generated C file:
/* Generated by Frama-C */
struct __anonstruct___mpz_struct_1 {int _mp_alloc ;int _mp_size ;unsigned long *_mp_d ;};typedef struct __anonstruct___mpz_struct_1 __mpz_struct;typedef __mpz_struct mpz_t[1];
extern signed long int __gmpz_get_si(mpz_t);
extern int __gmpz_cmp_ui(mpz_t, unsigned long int);
extern int __gmpz_cmp(mpz_t, mpz_t);
extern void __gmpz_clear(mpz_t);
extern void __gmpz_init(mpz_t);
extern void __gmpz_init_set(mpz_t, mpz_t);
extern void __gmpz_init_set_si(mpz_t, signed long int);
extern void __gmpz_init_set_str(mpz_t, const char*, int);
extern void __gmpz_add(mpz_t, const mpz_t, const mpz_t);
extern void __gmpz_add_ui(mpz_t, const mpz_t, unsigned long int);
extern void __gmpz_sub(mpz_t, const mpz_t, const mpz_t);
extern void __gmpz_ui_sub(mpz_t, unsigned long int, const mpz_t);
extern int pathcrawler_assert_exception(char*,int);
extern void pathcrawler_to_framac(char*);
extern void* malloc(unsigned long);
extern void free(void*);
/*@
predicate is_dset{L}(int *a, integer n) =
  \forall integer i; 0 <= i < n ==> *(a+i) == 0 || *(a+i) == 1;
 */
/*@
predicate is_eq{L1, L2}(int *a, integer n) =
  \forall integer i; 0 <= i < n ==> \at(*(a+i),L1) == \at(*(a+i),L2);
 */
/*@
predicate lt{L1, L2}(int *a, integer i) = \at(*(a+i),L1) < \at(*(a+i),L2);
 */
int nextSubset_precond(int *s, int n)
{
  int __stady_pred_0;
  __stady_pred_0 = 1;
  {
    mpz_t __q_i;
    mpz_t __stady_gmp_0;
    __gmpz_init_set_str(__stady_gmp_0, "0", 10);
    mpz_t __stady_gmp_1;
    __gmpz_init_set_si(__stady_gmp_1, n);
    __gmpz_init_set(__q_i, __stady_gmp_0);
    int __stady_term_0;
    __stady_term_0 = __gmpz_cmp(__q_i, __stady_gmp_1);
    for(; __stady_term_0 < 0 && __stady_pred_0; ) {
      mpz_t __stady_gmp_2;
      __gmpz_init_set(__stady_gmp_2, __q_i);
      int __stady_term_1;
      __stady_term_1 = __gmpz_get_si(__stady_gmp_2);
      __gmpz_clear(__stady_gmp_2);
      mpz_t __stady_gmp_3;
      __gmpz_init_set_si(__stady_gmp_3, *(s + __stady_term_1));
      mpz_t __stady_gmp_4;
      __gmpz_init_set_str(__stady_gmp_4, "0", 10);
      int __stady_term_2;
      __stady_term_2 = __gmpz_cmp(__stady_gmp_3, __stady_gmp_4);
      __gmpz_clear(__stady_gmp_3);
      __gmpz_clear(__stady_gmp_4);
      int __stady_pred_1;
      __stady_pred_1 = __stady_term_2 == 0;
      if(__stady_pred_1) {
        
      }
      else {
        mpz_t __stady_gmp_5;
        __gmpz_init_set(__stady_gmp_5, __q_i);
        int __stady_term_3;
        __stady_term_3 = __gmpz_get_si(__stady_gmp_5);
        __gmpz_clear(__stady_gmp_5);
        mpz_t __stady_gmp_6;
        __gmpz_init_set_si(__stady_gmp_6, *(s + __stady_term_3));
        mpz_t __stady_gmp_7;
        __gmpz_init_set_str(__stady_gmp_7, "1", 10);
        int __stady_term_4;
        __stady_term_4 = __gmpz_cmp(__stady_gmp_6, __stady_gmp_7);
        __gmpz_clear(__stady_gmp_6);
        __gmpz_clear(__stady_gmp_7);
        __stady_pred_1 = __stady_term_4 == 0;
      }
      __stady_pred_0 = __stady_pred_1;
      __gmpz_add_ui(__q_i, __q_i, 1);
      __stady_term_0 = __gmpz_cmp(__q_i, __stady_gmp_1);
    }
    __gmpz_clear(__q_i);
    __gmpz_clear(__stady_gmp_0);
    __gmpz_clear(__stady_gmp_1);
  }
  if(! __stady_pred_0) {
    return 0;
  }
  return 1;
}

int nextSubset(int *s, int n)
{
  int *old_s;
  int *old_ptr_s;
  old_s = s;
  mpz_t __stady_gmp_38;
  __gmpz_init_set_si(__stady_gmp_38, n);
  int __stady_term_22;
  unsigned long __stady_term_23;
  __stady_term_23 = __gmpz_get_si(__stady_gmp_38);
  old_ptr_s = malloc(__stady_term_23 * (unsigned long)sizeof(int));
  __stady_term_23 = __gmpz_get_si(__stady_gmp_38);
  for(__stady_term_22 = 0; (unsigned long)__stady_term_22 < __stady_term_23; __stady_term_22 = 
    __stady_term_22 + 1) {
    old_ptr_s[__stady_term_22] = s[__stady_term_22];
  }
  __gmpz_clear(__stady_gmp_38);
  int old_n;
  old_n = n;
  {
    int __retres;
    int i;
    int k;
    k = n - 1;
    {
      mpz_t __stady_gmp_39;
      __gmpz_init_set_str(__stady_gmp_39, "1", 10);
      mpz_t __stady_gmp_40;
      __gmpz_init(__stady_gmp_40);
      __gmpz_ui_sub(__stady_gmp_40, 0, __stady_gmp_39);
      __gmpz_clear(__stady_gmp_39);
      mpz_t __stady_gmp_41;
      __gmpz_init_set_si(__stady_gmp_41, k);
      int __stady_term_24;
      __stady_term_24 = __gmpz_cmp(__stady_gmp_40, __stady_gmp_41);
      __gmpz_clear(__stady_gmp_40);
      __gmpz_clear(__stady_gmp_41);
      int __stady_pred_10;
      __stady_pred_10 = __stady_term_24 <= 0;
      if(__stady_pred_10) {
        mpz_t __stady_gmp_42;
        __gmpz_init_set_si(__stady_gmp_42, k);
        mpz_t __stady_gmp_43;
        __gmpz_init_set_si(__stady_gmp_43, n);
        mpz_t __stady_gmp_44;
        __gmpz_init_set_str(__stady_gmp_44, "1", 10);
        mpz_t __stady_gmp_45;
        __gmpz_init(__stady_gmp_45);
        __gmpz_sub(__stady_gmp_45, __stady_gmp_43, __stady_gmp_44);
        __gmpz_clear(__stady_gmp_43);
        __gmpz_clear(__stady_gmp_44);
        int __stady_term_25;
        __stady_term_25 = __gmpz_cmp(__stady_gmp_42, __stady_gmp_45);
        __gmpz_clear(__stady_gmp_42);
        __gmpz_clear(__stady_gmp_45);
        __stady_pred_10 = __stady_term_25 <= 0;
      }
      if(! __stady_pred_10) {
        pathcrawler_assert_exception("Loop invariant not established!", 6);
      }
      if(k < 0) {
        pathcrawler_assert_exception("Variant non positive", 2);
      }
      while (1) {
        int __stady_term_28;
        __stady_term_28 = k;
        {
          if (! (k >= 0)) {
                            pathcrawler_to_framac("@FC:REACHABLE_STMT:5");
                            break;
                          }
          if (*(s + k) == 0) {
                               pathcrawler_to_framac("@FC:REACHABLE_STMT:9");
                               break;
                             }
          k --;
        }mpz_t __stady_gmp_46;
        __gmpz_init_set_str(__stady_gmp_46, "1", 10);
        mpz_t __stady_gmp_47;
        __gmpz_init(__stady_gmp_47);
        __gmpz_ui_sub(__stady_gmp_47, 0, __stady_gmp_46);
        __gmpz_clear(__stady_gmp_46);
        mpz_t __stady_gmp_48;
        __gmpz_init_set_si(__stady_gmp_48, k);
        int __stady_term_26;
        __stady_term_26 = __gmpz_cmp(__stady_gmp_47, __stady_gmp_48);
        __gmpz_clear(__stady_gmp_47);
        __gmpz_clear(__stady_gmp_48);
        int __stady_pred_11;
        __stady_pred_11 = __stady_term_26 <= 0;
        if(__stady_pred_11) {
          mpz_t __stady_gmp_49;
          __gmpz_init_set_si(__stady_gmp_49, k);
          mpz_t __stady_gmp_50;
          __gmpz_init_set_si(__stady_gmp_50, n);
          mpz_t __stady_gmp_51;
          __gmpz_init_set_str(__stady_gmp_51, "1", 10);
          mpz_t __stady_gmp_52;
          __gmpz_init(__stady_gmp_52);
          __gmpz_sub(__stady_gmp_52, __stady_gmp_50, __stady_gmp_51);
          __gmpz_clear(__stady_gmp_50);
          __gmpz_clear(__stady_gmp_51);
          int __stady_term_27;
          __stady_term_27 = __gmpz_cmp(__stady_gmp_49, __stady_gmp_52);
          __gmpz_clear(__stady_gmp_49);
          __gmpz_clear(__stady_gmp_52);
          __stady_pred_11 = __stady_term_27 <= 0;
        }
        if(! __stady_pred_11) {
          pathcrawler_assert_exception("Loop invariant not preserved!", 6);
        }
        if(__stady_term_28 < 0) {
          pathcrawler_assert_exception("Variant non positive", 2);
        }
        if(k >= __stady_term_28) {
          pathcrawler_assert_exception("Variant non decreasing", 2);
        }
        }
         
    }
    if (k == -1) {
      {
        pathcrawler_to_framac("@FC:REACHABLE_STMT:14");
        __retres = -1;
      }
      goto return_label;
    }
    *(s + k) = 1;
    i = k + 1;
    {
      mpz_t __stady_gmp_53;
      __gmpz_init_set_si(__stady_gmp_53, k);
      mpz_t __stady_gmp_54;
      __gmpz_init_set_str(__stady_gmp_54, "1", 10);
      mpz_t __stady_gmp_55;
      __gmpz_init(__stady_gmp_55);
      __gmpz_add(__stady_gmp_55, __stady_gmp_53, __stady_gmp_54);
      __gmpz_clear(__stady_gmp_53);
      __gmpz_clear(__stady_gmp_54);
      mpz_t __stady_gmp_56;
      __gmpz_init_set_si(__stady_gmp_56, i);
      int __stady_term_29;
      __stady_term_29 = __gmpz_cmp(__stady_gmp_55, __stady_gmp_56);
      __gmpz_clear(__stady_gmp_55);
      __gmpz_clear(__stady_gmp_56);
      int __stady_pred_12;
      __stady_pred_12 = __stady_term_29 <= 0;
      if(__stady_pred_12) {
        __stady_pred_12 = i <= n;
      }
      if(! __stady_pred_12) {
        pathcrawler_assert_exception("Loop invariant not established!", 4);
      }
      int __stady_pred_14;
      __stady_pred_14 = 1;
      {
        mpz_t __q_i;
        mpz_t __stady_gmp_61;
        __gmpz_init_set_str(__stady_gmp_61, "0", 10);
        mpz_t __stady_gmp_62;
        __gmpz_init_set_si(__stady_gmp_62, i);
        __gmpz_init_set(__q_i, __stady_gmp_61);
        int __stady_term_31;
        __stady_term_31 = __gmpz_cmp(__q_i, __stady_gmp_62);
        for(; __stady_term_31 < 0 && __stady_pred_14; ) {
          mpz_t __stady_gmp_63;
          __gmpz_init_set(__stady_gmp_63, __q_i);
          int __stady_term_32;
          __stady_term_32 = __gmpz_get_si(__stady_gmp_63);
          __gmpz_clear(__stady_gmp_63);
          mpz_t __stady_gmp_64;
          __gmpz_init_set_si(__stady_gmp_64, *(s + __stady_term_32));
          mpz_t __stady_gmp_65;
          __gmpz_init_set_str(__stady_gmp_65, "0", 10);
          int __stady_term_33;
          __stady_term_33 = __gmpz_cmp(__stady_gmp_64, __stady_gmp_65);
          __gmpz_clear(__stady_gmp_64);
          __gmpz_clear(__stady_gmp_65);
          int __stady_pred_15;
          __stady_pred_15 = __stady_term_33 == 0;
          if(__stady_pred_15) {
            
          }
          else {
            mpz_t __stady_gmp_66;
            __gmpz_init_set(__stady_gmp_66, __q_i);
            int __stady_term_34;
            __stady_term_34 = __gmpz_get_si(__stady_gmp_66);
            __gmpz_clear(__stady_gmp_66);
            mpz_t __stady_gmp_67;
            __gmpz_init_set_si(__stady_gmp_67, *(s + __stady_term_34));
            mpz_t __stady_gmp_68;
            __gmpz_init_set_str(__stady_gmp_68, "1", 10);
            int __stady_term_35;
            __stady_term_35 = __gmpz_cmp(__stady_gmp_67, __stady_gmp_68);
            __gmpz_clear(__stady_gmp_67);
            __gmpz_clear(__stady_gmp_68);
            __stady_pred_15 = __stady_term_35 == 0;
          }
          __stady_pred_14 = __stady_pred_15;
          __gmpz_add_ui(__q_i, __q_i, 1);
          __stady_term_31 = __gmpz_cmp(__q_i, __stady_gmp_62);
        }
        __gmpz_clear(__q_i);
        __gmpz_clear(__stady_gmp_61);
        __gmpz_clear(__stady_gmp_62);
      }
      if(! __stady_pred_14) {
        pathcrawler_assert_exception("Loop invariant not established!", 8);
      }
      mpz_t __stady_gmp_77;
      __gmpz_init_set_si(__stady_gmp_77, n);
      mpz_t __stady_gmp_78;
      __gmpz_init_set_si(__stady_gmp_78, i);
      mpz_t __stady_gmp_79;
      __gmpz_init(__stady_gmp_79);
      __gmpz_sub(__stady_gmp_79, __stady_gmp_77, __stady_gmp_78);
      __gmpz_clear(__stady_gmp_77);
      __gmpz_clear(__stady_gmp_78);
      int __stady_term_41;
      __stady_term_41 = __gmpz_cmp_ui(__stady_gmp_79, 0);
      if(__stady_term_41 < 0) {
        pathcrawler_assert_exception("Variant non positive", 11);
      }
      while (1) {
        mpz_t __stady_gmp_80;
        __gmpz_init_set_si(__stady_gmp_80, n);
        mpz_t __stady_gmp_81;
        __gmpz_init_set_si(__stady_gmp_81, i);
        mpz_t __stady_gmp_82;
        __gmpz_init(__stady_gmp_82);
        __gmpz_sub(__stady_gmp_82, __stady_gmp_80, __stady_gmp_81);
        __gmpz_clear(__stady_gmp_80);
        __gmpz_clear(__stady_gmp_81);
        mpz_t __stady_gmp_83;
        __gmpz_init_set(__stady_gmp_83, __stady_gmp_82);
        {
          if (! (i < n)) {
                           pathcrawler_to_framac("@FC:REACHABLE_STMT:21");
                           break;
                         }
          *(s + i) = 0;
          i ++;
        }mpz_t __stady_gmp_57;
        __gmpz_init_set_si(__stady_gmp_57, k);
        mpz_t __stady_gmp_58;
        __gmpz_init_set_str(__stady_gmp_58, "1", 10);
        mpz_t __stady_gmp_59;
        __gmpz_init(__stady_gmp_59);
        __gmpz_add(__stady_gmp_59, __stady_gmp_57, __stady_gmp_58);
        __gmpz_clear(__stady_gmp_57);
        __gmpz_clear(__stady_gmp_58);
        mpz_t __stady_gmp_60;
        __gmpz_init_set_si(__stady_gmp_60, i);
        int __stady_term_30;
        __stady_term_30 = __gmpz_cmp(__stady_gmp_59, __stady_gmp_60);
        __gmpz_clear(__stady_gmp_59);
        __gmpz_clear(__stady_gmp_60);
        int __stady_pred_13;
        __stady_pred_13 = __stady_term_30 <= 0;
        if(__stady_pred_13) {
          __stady_pred_13 = i <= n;
        }
        if(! __stady_pred_13) {
          pathcrawler_assert_exception("Loop invariant not preserved!", 4);
        }
        int __stady_pred_16;
        __stady_pred_16 = 1;
        {
          mpz_t __q_i;
          mpz_t __stady_gmp_69;
          __gmpz_init_set_str(__stady_gmp_69, "0", 10);
          mpz_t __stady_gmp_70;
          __gmpz_init_set_si(__stady_gmp_70, i);
          __gmpz_init_set(__q_i, __stady_gmp_69);
          int __stady_term_36;
          __stady_term_36 = __gmpz_cmp(__q_i, __stady_gmp_70);
          for(; __stady_term_36 < 0 && __stady_pred_16; ) {
            mpz_t __stady_gmp_71;
            __gmpz_init_set(__stady_gmp_71, __q_i);
            int __stady_term_37;
            __stady_term_37 = __gmpz_get_si(__stady_gmp_71);
            __gmpz_clear(__stady_gmp_71);
            mpz_t __stady_gmp_72;
            __gmpz_init_set_si(__stady_gmp_72, *(s + __stady_term_37));
            mpz_t __stady_gmp_73;
            __gmpz_init_set_str(__stady_gmp_73, "0", 10);
            int __stady_term_38;
            __stady_term_38 = __gmpz_cmp(__stady_gmp_72, __stady_gmp_73);
            __gmpz_clear(__stady_gmp_72);
            __gmpz_clear(__stady_gmp_73);
            int __stady_pred_17;
            __stady_pred_17 = __stady_term_38 == 0;
            if(__stady_pred_17) {
              
            }
            else {
              mpz_t __stady_gmp_74;
              __gmpz_init_set(__stady_gmp_74, __q_i);
              int __stady_term_39;
              __stady_term_39 = __gmpz_get_si(__stady_gmp_74);
              __gmpz_clear(__stady_gmp_74);
              mpz_t __stady_gmp_75;
              __gmpz_init_set_si(__stady_gmp_75, *(s + __stady_term_39));
              mpz_t __stady_gmp_76;
              __gmpz_init_set_str(__stady_gmp_76, "1", 10);
              int __stady_term_40;
              __stady_term_40 = __gmpz_cmp(__stady_gmp_75, __stady_gmp_76);
              __gmpz_clear(__stady_gmp_75);
              __gmpz_clear(__stady_gmp_76);
              __stady_pred_17 = __stady_term_40 == 0;
            }
            __stady_pred_16 = __stady_pred_17;
            __gmpz_add_ui(__q_i, __q_i, 1);
            __stady_term_36 = __gmpz_cmp(__q_i, __stady_gmp_70);
          }
          __gmpz_clear(__q_i);
          __gmpz_clear(__stady_gmp_69);
          __gmpz_clear(__stady_gmp_70);
        }
        if(! __stady_pred_16) {
          pathcrawler_assert_exception("Loop invariant not preserved!", 8);
        }
        mpz_t __stady_gmp_84;
        __gmpz_init_set_si(__stady_gmp_84, n);
        mpz_t __stady_gmp_85;
        __gmpz_init_set_si(__stady_gmp_85, i);
        mpz_t __stady_gmp_86;
        __gmpz_init(__stady_gmp_86);
        __gmpz_sub(__stady_gmp_86, __stady_gmp_84, __stady_gmp_85);
        __gmpz_clear(__stady_gmp_84);
        __gmpz_clear(__stady_gmp_85);
        __stady_term_41 = __gmpz_cmp_ui(__stady_gmp_83, 0);
        if(__stady_term_41 < 0) {
          pathcrawler_assert_exception("Variant non positive", 11);
        }
        __stady_term_41 = __gmpz_cmp(__stady_gmp_86, __stady_gmp_83);
        if(__stady_term_41 >= 0) {
          pathcrawler_assert_exception("Variant non decreasing", 11);
        }
        __gmpz_clear(__stady_gmp_83);
        }
         __gmpz_clear(__stady_gmp_79);
      
    }
    __retres = k;
    return_label:
      {
        int __stady_pred_2;
        __stady_pred_2 = 1;
        {
          mpz_t __q_i;
          mpz_t __stady_gmp_8;
          __gmpz_init_set_str(__stady_gmp_8, "0", 10);
          mpz_t __stady_gmp_9;
          __gmpz_init_set_si(__stady_gmp_9, old_n);
          __gmpz_init_set(__q_i, __stady_gmp_8);
          int __stady_term_5;
          __stady_term_5 = __gmpz_cmp(__q_i, __stady_gmp_9);
          for(; __stady_term_5 < 0 && __stady_pred_2; ) {
            mpz_t __stady_gmp_10;
            __gmpz_init_set(__stady_gmp_10, __q_i);
            int __stady_term_6;
            __stady_term_6 = __gmpz_get_si(__stady_gmp_10);
            __gmpz_clear(__stady_gmp_10);
            mpz_t __stady_gmp_11;
            __gmpz_init_set_si(__stady_gmp_11, *(old_s + __stady_term_6));
            mpz_t __stady_gmp_12;
            __gmpz_init_set_str(__stady_gmp_12, "0", 10);
            int __stady_term_7;
            __stady_term_7 = __gmpz_cmp(__stady_gmp_11, __stady_gmp_12);
            __gmpz_clear(__stady_gmp_11);
            __gmpz_clear(__stady_gmp_12);
            int __stady_pred_3;
            __stady_pred_3 = __stady_term_7 == 0;
            if(__stady_pred_3) {
              
            }
            else {
              mpz_t __stady_gmp_13;
              __gmpz_init_set(__stady_gmp_13, __q_i);
              int __stady_term_8;
              __stady_term_8 = __gmpz_get_si(__stady_gmp_13);
              __gmpz_clear(__stady_gmp_13);
              mpz_t __stady_gmp_14;
              __gmpz_init_set_si(__stady_gmp_14, *(old_s + __stady_term_8));
              mpz_t __stady_gmp_15;
              __gmpz_init_set_str(__stady_gmp_15, "1", 10);
              int __stady_term_9;
              __stady_term_9 = __gmpz_cmp(__stady_gmp_14, __stady_gmp_15);
              __gmpz_clear(__stady_gmp_14);
              __gmpz_clear(__stady_gmp_15);
              __stady_pred_3 = __stady_term_9 == 0;
            }
            __stady_pred_2 = __stady_pred_3;
            __gmpz_add_ui(__q_i, __q_i, 1);
            __stady_term_5 = __gmpz_cmp(__q_i, __stady_gmp_9);
          }
          __gmpz_clear(__q_i);
          __gmpz_clear(__stady_gmp_8);
          __gmpz_clear(__stady_gmp_9);
        }
        if(! __stady_pred_2) {
          pathcrawler_assert_exception("Post-condition!", 13);
        }
        mpz_t __stady_gmp_16;
        __gmpz_init_set_str(__stady_gmp_16, "1", 10);
        mpz_t __stady_gmp_17;
        __gmpz_init(__stady_gmp_17);
        __gmpz_ui_sub(__stady_gmp_17, 0, __stady_gmp_16);
        __gmpz_clear(__stady_gmp_16);
        mpz_t __stady_gmp_18;
        __gmpz_init_set_si(__stady_gmp_18, __retres);
        int __stady_term_10;
        __stady_term_10 = __gmpz_cmp(__stady_gmp_17, __stady_gmp_18);
        __gmpz_clear(__stady_gmp_17);
        __gmpz_clear(__stady_gmp_18);
        int __stady_pred_4;
        __stady_pred_4 = __stady_term_10 <= 0;
        if(__stady_pred_4) {
          __stady_pred_4 = __retres < old_n;
        }
        if(! __stady_pred_4) {
          pathcrawler_assert_exception("Post-condition!", 15);
        }
        int __stady_pred_5;
        __stady_pred_5 = 1;
        mpz_t __stady_gmp_19;
        __gmpz_init_set_si(__stady_gmp_19, __retres);
        mpz_t __stady_gmp_20;
        __gmpz_init_set_str(__stady_gmp_20, "1", 10);
        mpz_t __stady_gmp_21;
        __gmpz_init(__stady_gmp_21);
        __gmpz_ui_sub(__stady_gmp_21, 0, __stady_gmp_20);
        __gmpz_clear(__stady_gmp_20);
        int __stady_term_11;
        __stady_term_11 = __gmpz_cmp(__stady_gmp_19, __stady_gmp_21);
        __gmpz_clear(__stady_gmp_19);
        __gmpz_clear(__stady_gmp_21);
        if(__stady_term_11 == 0) {
          int __stady_pred_6;
          __stady_pred_6 = 1;
          {
            mpz_t __q_i;
            mpz_t __stady_gmp_22;
            __gmpz_init_set_str(__stady_gmp_22, "0", 10);
            mpz_t __stady_gmp_23;
            __gmpz_init_set_si(__stady_gmp_23, old_n);
            __gmpz_init_set(__q_i, __stady_gmp_22);
            int __stady_term_12;
            __stady_term_12 = __gmpz_cmp(__q_i, __stady_gmp_23);
            for(; __stady_term_12 < 0 && __stady_pred_6; ) {
              mpz_t __stady_gmp_24;
              __gmpz_init_set(__stady_gmp_24, __q_i);
              int __stady_term_13;
              __stady_term_13 = __gmpz_get_si(__stady_gmp_24);
              __gmpz_clear(__stady_gmp_24);
              mpz_t __stady_gmp_25;
              __gmpz_init_set(__stady_gmp_25, __q_i);
              int __stady_term_14;
              __stady_term_14 = __gmpz_get_si(__stady_gmp_25);
              __gmpz_clear(__stady_gmp_25);
              __stady_pred_6 = *(old_ptr_s + __stady_term_13) == *(old_s + __stady_term_14);
              __gmpz_add_ui(__q_i, __q_i, 1);
              __stady_term_12 = __gmpz_cmp(__q_i, __stady_gmp_23);
            }
            __gmpz_clear(__q_i);
            __gmpz_clear(__stady_gmp_22);
            __gmpz_clear(__stady_gmp_23);
          }
          __stady_pred_5 = __stady_pred_6;
        }
        if(! __stady_pred_5) {
          pathcrawler_assert_exception("Post-condition!", 5);
        }
        int __stady_pred_7;
        __stady_pred_7 = 1;
        mpz_t __stady_gmp_26;
        __gmpz_init_set_si(__stady_gmp_26, __retres);
        mpz_t __stady_gmp_27;
        __gmpz_init_set_str(__stady_gmp_27, "1", 10);
        mpz_t __stady_gmp_28;
        __gmpz_init(__stady_gmp_28);
        __gmpz_ui_sub(__stady_gmp_28, 0, __stady_gmp_27);
        __gmpz_clear(__stady_gmp_27);
        int __stady_term_15;
        __stady_term_15 = __gmpz_cmp(__stady_gmp_26, __stady_gmp_28);
        __gmpz_clear(__stady_gmp_26);
        __gmpz_clear(__stady_gmp_28);
        if(__stady_term_15 != 0) {
          int __stady_pred_8;
          __stady_pred_8 = 1;
          {
            mpz_t __q_i;
            mpz_t __stady_gmp_29;
            __gmpz_init_set_str(__stady_gmp_29, "0", 10);
            mpz_t __stady_gmp_30;
            __gmpz_init_set_si(__stady_gmp_30, __retres);
            __gmpz_init_set(__q_i, __stady_gmp_29);
            int __stady_term_16;
            __stady_term_16 = __gmpz_cmp(__q_i, __stady_gmp_30);
            for(; __stady_term_16 < 0 && __stady_pred_8; ) {
              mpz_t __stady_gmp_31;
              __gmpz_init_set(__stady_gmp_31, __q_i);
              int __stady_term_17;
              __stady_term_17 = __gmpz_get_si(__stady_gmp_31);
              __gmpz_clear(__stady_gmp_31);
              mpz_t __stady_gmp_32;
              __gmpz_init_set(__stady_gmp_32, __q_i);
              int __stady_term_18;
              __stady_term_18 = __gmpz_get_si(__stady_gmp_32);
              __gmpz_clear(__stady_gmp_32);
              __stady_pred_8 = *(old_ptr_s + __stady_term_17) == *(old_s + __stady_term_18);
              __gmpz_add_ui(__q_i, __q_i, 1);
              __stady_term_16 = __gmpz_cmp(__q_i, __stady_gmp_30);
            }
            __gmpz_clear(__q_i);
            __gmpz_clear(__stady_gmp_29);
            __gmpz_clear(__stady_gmp_30);
          }
          __stady_pred_7 = __stady_pred_8;
        }
        if(! __stady_pred_7) {
          pathcrawler_assert_exception("Post-condition!", 10);
        }
        int __stady_pred_9;
        __stady_pred_9 = 1;
        mpz_t __stady_gmp_33;
        __gmpz_init_set_si(__stady_gmp_33, __retres);
        mpz_t __stady_gmp_34;
        __gmpz_init_set_str(__stady_gmp_34, "1", 10);
        mpz_t __stady_gmp_35;
        __gmpz_init(__stady_gmp_35);
        __gmpz_ui_sub(__stady_gmp_35, 0, __stady_gmp_34);
        __gmpz_clear(__stady_gmp_34);
        int __stady_term_19;
        __stady_term_19 = __gmpz_cmp(__stady_gmp_33, __stady_gmp_35);
        __gmpz_clear(__stady_gmp_33);
        __gmpz_clear(__stady_gmp_35);
        if(__stady_term_19 != 0) {
          mpz_t __stady_gmp_36;
          __gmpz_init_set_si(__stady_gmp_36, __retres);
          int __stady_term_20;
          __stady_term_20 = __gmpz_get_si(__stady_gmp_36);
          __gmpz_clear(__stady_gmp_36);
          mpz_t __stady_gmp_37;
          __gmpz_init_set_si(__stady_gmp_37, __retres);
          int __stady_term_21;
          __stady_term_21 = __gmpz_get_si(__stady_gmp_37);
          __gmpz_clear(__stady_gmp_37);
          __stady_pred_9 = *(old_ptr_s + __stady_term_20) < *(old_s + __stady_term_21);
        }
        if(! __stady_pred_9) {
          pathcrawler_assert_exception("Post-condition!", 14);
        }
      }
      free(old_ptr_s);
      return __retres;
  }
}


[kernel] preprocessing with "gcc -C -E -I.  __sd_instru_next_subset_nextSubset.c"
[kernel] preprocessing with "gcc -C -E -I. -include /usr/local/share/frama-c/pc/lib/lanceur_deb.h __sd_instru_next_subset_nextSubset.c"
[pc] analyzing...
[pc] Compiling pathcrawler___sd_instru_next_subset_nextSubset/lanceur_nextSubset utilities ...
[pc] Compiling pathcrawler___sd_instru_next_subset_nextSubset/lanceur_nextSubset ...
[pc] generating tests...
[pc] Starting lanceur_nextSubset (isc version)
[pc] Starting lanceur_pathcrawler__nextSubset_precond (isc version)
[pc] generation finished
[stady] all-paths: true
[stady] 742 test cases
[report] Computing properties status...

--------------------------------------------------------------------------------
--- Properties of Function 'nextSubset'
--------------------------------------------------------------------------------

[  Valid  ] Post-condition (file tests/next_subset/next_subset.c, line 16)
            by StaDy.
[  Valid  ] Post-condition (file tests/next_subset/next_subset.c, line 17)
            by StaDy.
[  Valid  ] Post-condition (file tests/next_subset/next_subset.c, line 18)
            by StaDy.
[  Valid  ] Post-condition (file tests/next_subset/next_subset.c, line 19)
            by StaDy.
[  Valid  ] Post-condition (file tests/next_subset/next_subset.c, line 20)
            by StaDy.
[  Valid  ] Loop variant at loop (file tests/next_subset/next_subset.c, line 27)
            by StaDy.
[  Valid  ] Loop variant at loop (file tests/next_subset/next_subset.c, line 34)
            by StaDy.
[  Valid  ] Invariant (file tests/next_subset/next_subset.c, line 24)
            by StaDy.
[  Valid  ] Invariant (file tests/next_subset/next_subset.c, line 30)
            by StaDy.
[  Valid  ] Invariant (file tests/next_subset/next_subset.c, line 31)
            by StaDy.
[    -    ] Default behavior
            tried with Frama-C kernel.

--------------------------------------------------------------------------------
--- Status Report Summary
--------------------------------------------------------------------------------
    10 Completely validated
     1 To be validated
    11 Total
--------------------------------------------------------------------------------
