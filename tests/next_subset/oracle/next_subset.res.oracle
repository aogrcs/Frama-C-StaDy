[kernel] preprocessing with "gcc -C -E -I.  tests/next_subset/next_subset.c"
[stady] warning: Native Precondition:
                 ∀ ℤ __q_i;
                   0 ≤ __q_i ∧ __q_i < n ⇒ *(s+__q_i) ≡ 0 ∨ *(s+__q_i) ≡ 1 unsupported
[stady:generated-pl] generated Prolog precondition:
:- module(test_parameters).
:- import create_input_val/3 from substitution.
:- export dom/4.
:- export create_input_vals/2.
:- export unquantif_preconds/2.
:- export quantif_preconds/2.
:- export strategy/2.
:- export precondition_of/2.

dom(0,0,0,0).
dom('nextSubset', dim('s'), [], int([1..4294967295])).
dom('nextSubset', cont('s',_), [], int([-2147483648..2147483647])).
dom('pathcrawler__nextSubset_precond',A,B,C) :-
  dom('nextSubset',A,B,C).
create_input_vals('nextSubset', Ins):-
  create_input_val(dim('s'), int([1..4294967295]),Ins),
  create_input_val('n', int([0..3]),Ins),
  true.
create_input_vals('pathcrawler__nextSubset_precond',Ins) :-
  create_input_vals('nextSubset',Ins).
quantif_preconds('nextSubset',
  [
  ]
).
quantif_preconds('pathcrawler__nextSubset_precond',A) :-
  quantif_preconds('nextSubset',A).
unquantif_preconds('nextSubset',
  [
    cond(egal,dim('s'),+(int(math), -(int(math), 'n', 1), 1),pre)
  ]
).
unquantif_preconds('pathcrawler__nextSubset_precond',A) :-
  unquantif_preconds('nextSubset',A).
strategy('nextSubset',[]).
strategy('pathcrawler__nextSubset_precond',A) :-
  strategy('nextSubset',A).
precondition_of('nextSubset','pathcrawler__nextSubset_precond').
[stady:generated-c] generated C file:
/* Generated by Frama-C */
#include <gmp.h>
extern int pathcrawler_assert_exception(char*,int);
extern int pathcrawler_dimension(void*);
extern void pathcrawler_to_framac(char*);
extern void* malloc(unsigned);
extern void free(void*);
/*@
predicate is_dset{L}(int *a, integer n) =
  \forall integer i; 0 <= i && i < n ==> *(a+i) == 0 || *(a+i) == 1;
 */
/*@
predicate is_eq{L1, L2}(int *a, integer n) =
  \forall integer i; 0 <= i && i < n ==> \at(*(a+i),L1) == \at(*(a+i),L2);
 */
/*@
predicate lt{L1, L2}(int *a, integer i) = \at(*(a+i),L1) < \at(*(a+i),L2);
 */
int nextSubset_precond(int *s, int n)
{
int __stady_pred_0 = 1;
{
mpz_t __q_i;
mpz_t __stady_gmp_0;
__gmpz_init_set_si(__stady_gmp_0, 0);
mpz_t __stady_gmp_1;
__gmpz_init_set_si(__stady_gmp_1, n);
__gmpz_init_set(__q_i, __stady_gmp_0);
for (; __gmpz_cmp(__q_i, __stady_gmp_1) < 0 &&  __stady_pred_0;) {
mpz_t __stady_gmp_2;
__gmpz_init_set(__stady_gmp_2, __q_i);
mpz_t __stady_gmp_3;
__gmpz_init_set_si(__stady_gmp_3, *(s + __gmpz_get_si(__stady_gmp_2)));
mpz_t __stady_gmp_4;
__gmpz_init_set_si(__stady_gmp_4, 0);
int __stady_pred_2 = __gmpz_cmp(__stady_gmp_3, __stady_gmp_4) == 0;
__gmpz_clear(__stady_gmp_3);
__gmpz_clear(__stady_gmp_4);
int __stady_pred_1 = __stady_pred_2;
if (!__stady_pred_1) {
mpz_t __stady_gmp_5;
__gmpz_init_set(__stady_gmp_5, __q_i);
mpz_t __stady_gmp_6;
__gmpz_init_set_si(__stady_gmp_6, *(s + __gmpz_get_si(__stady_gmp_5)));
mpz_t __stady_gmp_7;
__gmpz_init_set_si(__stady_gmp_7, 1);
int __stady_pred_3 = __gmpz_cmp(__stady_gmp_6, __stady_gmp_7) == 0;
__gmpz_clear(__stady_gmp_6);
__gmpz_clear(__stady_gmp_7);
__stady_pred_1 = __stady_pred_3;
}
__stady_pred_0 = __stady_pred_1;
__gmpz_add_ui(__q_i, __q_i, 1);
}
__gmpz_clear(__q_i);
__gmpz_clear(__stady_gmp_0);
__gmpz_clear(__stady_gmp_1);
}
if (!__stady_pred_0) return 0;
return 1;
}

int nextSubset(int *s, int n)
{
  int *old_s = s;
  int *old_ptr_s;
  mpz_t __stady_gmp_8;
  __gmpz_init_set_si(__stady_gmp_8, n);
  int __stady_iter_0;
  old_ptr_s = malloc(__gmpz_get_si(__stady_gmp_8)*sizeof(int));
  for (__stady_iter_0 = 0; __stady_iter_0 < __gmpz_get_si(__stady_gmp_8); __stady_iter_0++) {
  old_ptr_s[__stady_iter_0] = s[__stady_iter_0];
  }
  int old_n = n;
  {
    int __retres;
    int i;
    int k;
    k = n - 1;
    {
      if ((k) < 0)pathcrawler_assert_exception("Variant non positive",4);mpz_t __stady_gmp_9;
      __gmpz_init_set_si(__stady_gmp_9, 1);
      mpz_t __stady_gmp_10;
      __gmpz_init(__stady_gmp_10);
      __gmpz_ui_sub(__stady_gmp_10, 0, __stady_gmp_9);
      __gmpz_clear(__stady_gmp_9);
      mpz_t __stady_gmp_11;
      __gmpz_init_set_si(__stady_gmp_11, k);
      int __stady_pred_5 = __gmpz_cmp(__stady_gmp_10, __stady_gmp_11) <= 0;
      __gmpz_clear(__stady_gmp_10);
      __gmpz_clear(__stady_gmp_11);
      int __stady_pred_4 = __stady_pred_5;
      if (__stady_pred_4) {
      mpz_t __stady_gmp_12;
      __gmpz_init_set_si(__stady_gmp_12, k);
      mpz_t __stady_gmp_13;
      __gmpz_init_set_si(__stady_gmp_13, n);
      mpz_t __stady_gmp_14;
      __gmpz_init_set_si(__stady_gmp_14, 1);
      mpz_t __stady_gmp_15;
      __gmpz_init(__stady_gmp_15);
      __gmpz_sub(__stady_gmp_15, __stady_gmp_13, __stady_gmp_14);
      __gmpz_clear(__stady_gmp_13);
      __gmpz_clear(__stady_gmp_14);
      int __stady_pred_6 = __gmpz_cmp(__stady_gmp_12, __stady_gmp_15) <= 0;
      __gmpz_clear(__stady_gmp_12);
      __gmpz_clear(__stady_gmp_15);
      __stady_pred_4 = __stady_pred_6;
      }
      if(!__stady_pred_4)pathcrawler_assert_exception("Loop invariant not established!", 6);
      while (1) {
        int old_variant_4 = k;
        {
          if (! (k >= 0)) { pathcrawler_to_framac("@FC:REACHABLE_STMT:5");
                          break; }
                          
          if (*(s + k) == 0) { pathcrawler_to_framac("@FC:REACHABLE_STMT:9");
                             break; }
                             
          k --;
        }mpz_t __stady_gmp_16;
        __gmpz_init_set_si(__stady_gmp_16, 1);
        mpz_t __stady_gmp_17;
        __gmpz_init(__stady_gmp_17);
        __gmpz_ui_sub(__stady_gmp_17, 0, __stady_gmp_16);
        __gmpz_clear(__stady_gmp_16);
        mpz_t __stady_gmp_18;
        __gmpz_init_set_si(__stady_gmp_18, k);
        int __stady_pred_8 = __gmpz_cmp(__stady_gmp_17, __stady_gmp_18) <= 0;
        __gmpz_clear(__stady_gmp_17);
        __gmpz_clear(__stady_gmp_18);
        int __stady_pred_7 = __stady_pred_8;
        if (__stady_pred_7) {
        mpz_t __stady_gmp_19;
        __gmpz_init_set_si(__stady_gmp_19, k);
        mpz_t __stady_gmp_20;
        __gmpz_init_set_si(__stady_gmp_20, n);
        mpz_t __stady_gmp_21;
        __gmpz_init_set_si(__stady_gmp_21, 1);
        mpz_t __stady_gmp_22;
        __gmpz_init(__stady_gmp_22);
        __gmpz_sub(__stady_gmp_22, __stady_gmp_20, __stady_gmp_21);
        __gmpz_clear(__stady_gmp_20);
        __gmpz_clear(__stady_gmp_21);
        int __stady_pred_9 = __gmpz_cmp(__stady_gmp_19, __stady_gmp_22) <= 0;
        __gmpz_clear(__stady_gmp_19);
        __gmpz_clear(__stady_gmp_22);
        __stady_pred_7 = __stady_pred_9;
        }
        if(!__stady_pred_7)pathcrawler_assert_exception("Loop invariant not preserved!", 6);
        if ((old_variant_4) < 0)pathcrawler_assert_exception("Variant non positive",4);
        if ((k) >= old_variant_4)pathcrawler_assert_exception("Variant non decreasing",4);}
         }
       
    if (k == -1) {
      { pathcrawler_to_framac("@FC:REACHABLE_STMT:14");
      __retres = -1; }
      
      goto return_label;
    }
    *(s + k) = 1;
    i = k + 1;
    {
      mpz_t __stady_gmp_23;
      __gmpz_init_set_si(__stady_gmp_23, n);
      mpz_t __stady_gmp_24;
      __gmpz_init_set_si(__stady_gmp_24, i);
      mpz_t __stady_gmp_25;
      __gmpz_init(__stady_gmp_25);
      __gmpz_sub(__stady_gmp_25, __stady_gmp_23, __stady_gmp_24);
      __gmpz_clear(__stady_gmp_23);
      __gmpz_clear(__stady_gmp_24);
      if (__gmpz_cmp_ui(__stady_gmp_25, 0) < 0)pathcrawler_assert_exception("Variant non positive",12);int __stady_pred_10 = 1;
      {
      mpz_t __q_i;
      mpz_t __stady_gmp_26;
      __gmpz_init_set_si(__stady_gmp_26, 0);
      mpz_t __stady_gmp_27;
      __gmpz_init_set_si(__stady_gmp_27, i);
      __gmpz_init_set(__q_i, __stady_gmp_26);
      for (; __gmpz_cmp(__q_i, __stady_gmp_27) < 0 &&  __stady_pred_10;) {
      mpz_t __stady_gmp_28;
      __gmpz_init_set(__stady_gmp_28, __q_i);
      mpz_t __stady_gmp_29;
      __gmpz_init_set_si(__stady_gmp_29, *(s + __gmpz_get_si(__stady_gmp_28)));
      mpz_t __stady_gmp_30;
      __gmpz_init_set_si(__stady_gmp_30, 0);
      int __stady_pred_12 = __gmpz_cmp(__stady_gmp_29, __stady_gmp_30) == 0;
      __gmpz_clear(__stady_gmp_29);
      __gmpz_clear(__stady_gmp_30);
      int __stady_pred_11 = __stady_pred_12;
      if (!__stady_pred_11) {
      mpz_t __stady_gmp_31;
      __gmpz_init_set(__stady_gmp_31, __q_i);
      mpz_t __stady_gmp_32;
      __gmpz_init_set_si(__stady_gmp_32, *(s + __gmpz_get_si(__stady_gmp_31)));
      mpz_t __stady_gmp_33;
      __gmpz_init_set_si(__stady_gmp_33, 1);
      int __stady_pred_13 = __gmpz_cmp(__stady_gmp_32, __stady_gmp_33) == 0;
      __gmpz_clear(__stady_gmp_32);
      __gmpz_clear(__stady_gmp_33);
      __stady_pred_11 = __stady_pred_13;
      }
      __stady_pred_10 = __stady_pred_11;
      __gmpz_add_ui(__q_i, __q_i, 1);
      }
      __gmpz_clear(__q_i);
      __gmpz_clear(__stady_gmp_26);
      __gmpz_clear(__stady_gmp_27);
      }
      if(!__stady_pred_10)pathcrawler_assert_exception("Loop invariant not established!", 8);
      mpz_t __stady_gmp_34;
      __gmpz_init_set_si(__stady_gmp_34, k);
      mpz_t __stady_gmp_35;
      __gmpz_init_set_si(__stady_gmp_35, 1);
      mpz_t __stady_gmp_36;
      __gmpz_init(__stady_gmp_36);
      __gmpz_add(__stady_gmp_36, __stady_gmp_34, __stady_gmp_35);
      __gmpz_clear(__stady_gmp_34);
      __gmpz_clear(__stady_gmp_35);
      mpz_t __stady_gmp_37;
      __gmpz_init_set_si(__stady_gmp_37, i);
      int __stady_pred_15 = __gmpz_cmp(__stady_gmp_36, __stady_gmp_37) <= 0;
      __gmpz_clear(__stady_gmp_36);
      __gmpz_clear(__stady_gmp_37);
      int __stady_pred_14 = __stady_pred_15;
      if (__stady_pred_14) {
      __stady_pred_14 = (i <= n);
      }
      if(!__stady_pred_14)pathcrawler_assert_exception("Loop invariant not established!", 1);
      while (1) {
        mpz_t __stady_gmp_38;
        __gmpz_init_set_si(__stady_gmp_38, n);
        mpz_t __stady_gmp_39;
        __gmpz_init_set_si(__stady_gmp_39, i);
        mpz_t __stady_gmp_40;
        __gmpz_init(__stady_gmp_40);
        __gmpz_sub(__stady_gmp_40, __stady_gmp_38, __stady_gmp_39);
        __gmpz_clear(__stady_gmp_38);
        __gmpz_clear(__stady_gmp_39);
        mpz_t old_variant_12;
        __gmpz_init_set(old_variant_12, __stady_gmp_40);
        {
          if (! (i < n)) { pathcrawler_to_framac("@FC:REACHABLE_STMT:21");
                         break; }
                         
          *(s + i) = 0;
          i ++;
        }mpz_t __stady_gmp_41;
        __gmpz_init_set_si(__stady_gmp_41, k);
        mpz_t __stady_gmp_42;
        __gmpz_init_set_si(__stady_gmp_42, 1);
        mpz_t __stady_gmp_43;
        __gmpz_init(__stady_gmp_43);
        __gmpz_add(__stady_gmp_43, __stady_gmp_41, __stady_gmp_42);
        __gmpz_clear(__stady_gmp_41);
        __gmpz_clear(__stady_gmp_42);
        mpz_t __stady_gmp_44;
        __gmpz_init_set_si(__stady_gmp_44, i);
        int __stady_pred_17 = __gmpz_cmp(__stady_gmp_43, __stady_gmp_44) <= 0;
        __gmpz_clear(__stady_gmp_43);
        __gmpz_clear(__stady_gmp_44);
        int __stady_pred_16 = __stady_pred_17;
        if (__stady_pred_16) {
        __stady_pred_16 = (i <= n);
        }
        if(!__stady_pred_16)pathcrawler_assert_exception("Loop invariant not preserved!", 1);
        int __stady_pred_18 = 1;
        {
        mpz_t __q_i;
        mpz_t __stady_gmp_45;
        __gmpz_init_set_si(__stady_gmp_45, 0);
        mpz_t __stady_gmp_46;
        __gmpz_init_set_si(__stady_gmp_46, i);
        __gmpz_init_set(__q_i, __stady_gmp_45);
        for (; __gmpz_cmp(__q_i, __stady_gmp_46) < 0 &&  __stady_pred_18;) {
        mpz_t __stady_gmp_47;
        __gmpz_init_set(__stady_gmp_47, __q_i);
        mpz_t __stady_gmp_48;
        __gmpz_init_set_si(__stady_gmp_48, *(s + __gmpz_get_si(__stady_gmp_47)));
        mpz_t __stady_gmp_49;
        __gmpz_init_set_si(__stady_gmp_49, 0);
        int __stady_pred_20 = __gmpz_cmp(__stady_gmp_48, __stady_gmp_49) == 0;
        __gmpz_clear(__stady_gmp_48);
        __gmpz_clear(__stady_gmp_49);
        int __stady_pred_19 = __stady_pred_20;
        if (!__stady_pred_19) {
        mpz_t __stady_gmp_50;
        __gmpz_init_set(__stady_gmp_50, __q_i);
        mpz_t __stady_gmp_51;
        __gmpz_init_set_si(__stady_gmp_51, *(s + __gmpz_get_si(__stady_gmp_50)));
        mpz_t __stady_gmp_52;
        __gmpz_init_set_si(__stady_gmp_52, 1);
        int __stady_pred_21 = __gmpz_cmp(__stady_gmp_51, __stady_gmp_52) == 0;
        __gmpz_clear(__stady_gmp_51);
        __gmpz_clear(__stady_gmp_52);
        __stady_pred_19 = __stady_pred_21;
        }
        __stady_pred_18 = __stady_pred_19;
        __gmpz_add_ui(__q_i, __q_i, 1);
        }
        __gmpz_clear(__q_i);
        __gmpz_clear(__stady_gmp_45);
        __gmpz_clear(__stady_gmp_46);
        }
        if(!__stady_pred_18)pathcrawler_assert_exception("Loop invariant not preserved!", 8);
        mpz_t __stady_gmp_53;
        __gmpz_init_set_si(__stady_gmp_53, n);
        mpz_t __stady_gmp_54;
        __gmpz_init_set_si(__stady_gmp_54, i);
        mpz_t __stady_gmp_55;
        __gmpz_init(__stady_gmp_55);
        __gmpz_sub(__stady_gmp_55, __stady_gmp_53, __stady_gmp_54);
        __gmpz_clear(__stady_gmp_53);
        __gmpz_clear(__stady_gmp_54);
        if (__gmpz_cmp_ui(old_variant_12,0) < 0)pathcrawler_assert_exception("Variant non positive",12);
        if (__gmpz_cmp(__stady_gmp_55, old_variant_12) >= 0)pathcrawler_assert_exception("Variant non decreasing",12);__gmpz_clear(old_variant_12);
        }
         __gmpz_clear(__stady_gmp_25);
      }
       
    __retres = k;
    return_label:
      {
        int __stady_pred_22 = 1;
        {
        mpz_t __q_i;
        mpz_t __stady_gmp_56;
        __gmpz_init_set_si(__stady_gmp_56, 0);
        mpz_t __stady_gmp_57;
        __gmpz_init_set_si(__stady_gmp_57, old_n);
        __gmpz_init_set(__q_i, __stady_gmp_56);
        for (; __gmpz_cmp(__q_i, __stady_gmp_57) < 0 &&  __stady_pred_22;) {
        mpz_t __stady_gmp_58;
        __gmpz_init_set(__stady_gmp_58, __q_i);
        mpz_t __stady_gmp_59;
        __gmpz_init_set_si(__stady_gmp_59, *(old_s + __gmpz_get_si(__stady_gmp_58)));
        mpz_t __stady_gmp_60;
        __gmpz_init_set_si(__stady_gmp_60, 0);
        int __stady_pred_24 = __gmpz_cmp(__stady_gmp_59, __stady_gmp_60) == 0;
        __gmpz_clear(__stady_gmp_59);
        __gmpz_clear(__stady_gmp_60);
        int __stady_pred_23 = __stady_pred_24;
        if (!__stady_pred_23) {
        mpz_t __stady_gmp_61;
        __gmpz_init_set(__stady_gmp_61, __q_i);
        mpz_t __stady_gmp_62;
        __gmpz_init_set_si(__stady_gmp_62, *(old_s + __gmpz_get_si(__stady_gmp_61)));
        mpz_t __stady_gmp_63;
        __gmpz_init_set_si(__stady_gmp_63, 1);
        int __stady_pred_25 = __gmpz_cmp(__stady_gmp_62, __stady_gmp_63) == 0;
        __gmpz_clear(__stady_gmp_62);
        __gmpz_clear(__stady_gmp_63);
        __stady_pred_23 = __stady_pred_25;
        }
        __stady_pred_22 = __stady_pred_23;
        __gmpz_add_ui(__q_i, __q_i, 1);
        }
        __gmpz_clear(__q_i);
        __gmpz_clear(__stady_gmp_56);
        __gmpz_clear(__stady_gmp_57);
        }
        if(!__stady_pred_22)pathcrawler_assert_exception("Post-condition!", 11);
        mpz_t __stady_gmp_64;
        __gmpz_init_set_si(__stady_gmp_64, 1);
        mpz_t __stady_gmp_65;
        __gmpz_init(__stady_gmp_65);
        __gmpz_ui_sub(__stady_gmp_65, 0, __stady_gmp_64);
        __gmpz_clear(__stady_gmp_64);
        mpz_t __stady_gmp_66;
        __gmpz_init_set_si(__stady_gmp_66, __retres);
        int __stady_pred_27 = __gmpz_cmp(__stady_gmp_65, __stady_gmp_66) <= 0;
        __gmpz_clear(__stady_gmp_65);
        __gmpz_clear(__stady_gmp_66);
        int __stady_pred_26 = __stady_pred_27;
        if (__stady_pred_26) {
        __stady_pred_26 = (__retres < old_n);
        }
        if(!__stady_pred_26)pathcrawler_assert_exception("Post-condition!", 15);
        int __stady_pred_28 = 1;
        mpz_t __stady_gmp_67;
        __gmpz_init_set_si(__stady_gmp_67, __retres);
        mpz_t __stady_gmp_68;
        __gmpz_init_set_si(__stady_gmp_68, 1);
        mpz_t __stady_gmp_69;
        __gmpz_init(__stady_gmp_69);
        __gmpz_ui_sub(__stady_gmp_69, 0, __stady_gmp_68);
        __gmpz_clear(__stady_gmp_68);
        int __stady_pred_29 = __gmpz_cmp(__stady_gmp_67, __stady_gmp_69) == 0;
        __gmpz_clear(__stady_gmp_67);
        __gmpz_clear(__stady_gmp_69);
        if (__stady_pred_29) {
        int __stady_pred_30 = 1;
        {
        mpz_t __q_i;
        mpz_t __stady_gmp_70;
        __gmpz_init_set_si(__stady_gmp_70, 0);
        mpz_t __stady_gmp_71;
        __gmpz_init_set_si(__stady_gmp_71, old_n);
        __gmpz_init_set(__q_i, __stady_gmp_70);
        for (; __gmpz_cmp(__q_i, __stady_gmp_71) < 0 &&  __stady_pred_30;) {
        mpz_t __stady_gmp_72;
        __gmpz_init_set(__stady_gmp_72, __q_i);
        mpz_t __stady_gmp_73;
        __gmpz_init_set(__stady_gmp_73, __q_i);
        __stady_pred_30 = (*(old_ptr_s + __gmpz_get_si(__stady_gmp_72)) == *(old_s + __gmpz_get_si(__stady_gmp_73)));
        __gmpz_add_ui(__q_i, __q_i, 1);
        }
        __gmpz_clear(__q_i);
        __gmpz_clear(__stady_gmp_70);
        __gmpz_clear(__stady_gmp_71);
        }
        __stady_pred_28 = __stady_pred_30;
        }
        if(!__stady_pred_28)pathcrawler_assert_exception("Post-condition!", 3);
        int __stady_pred_31 = 1;
        mpz_t __stady_gmp_74;
        __gmpz_init_set_si(__stady_gmp_74, __retres);
        mpz_t __stady_gmp_75;
        __gmpz_init_set_si(__stady_gmp_75, 1);
        mpz_t __stady_gmp_76;
        __gmpz_init(__stady_gmp_76);
        __gmpz_ui_sub(__stady_gmp_76, 0, __stady_gmp_75);
        __gmpz_clear(__stady_gmp_75);
        int __stady_pred_32 = __gmpz_cmp(__stady_gmp_74, __stady_gmp_76) != 0;
        __gmpz_clear(__stady_gmp_74);
        __gmpz_clear(__stady_gmp_76);
        if (__stady_pred_32) {
        int __stady_pred_33 = 1;
        {
        mpz_t __q_i;
        mpz_t __stady_gmp_77;
        __gmpz_init_set_si(__stady_gmp_77, 0);
        mpz_t __stady_gmp_78;
        __gmpz_init_set_si(__stady_gmp_78, __retres);
        __gmpz_init_set(__q_i, __stady_gmp_77);
        for (; __gmpz_cmp(__q_i, __stady_gmp_78) < 0 &&  __stady_pred_33;) {
        mpz_t __stady_gmp_79;
        __gmpz_init_set(__stady_gmp_79, __q_i);
        mpz_t __stady_gmp_80;
        __gmpz_init_set(__stady_gmp_80, __q_i);
        __stady_pred_33 = (*(old_ptr_s + __gmpz_get_si(__stady_gmp_79)) == *(old_s + __gmpz_get_si(__stady_gmp_80)));
        __gmpz_add_ui(__q_i, __q_i, 1);
        }
        __gmpz_clear(__q_i);
        __gmpz_clear(__stady_gmp_77);
        __gmpz_clear(__stady_gmp_78);
        }
        __stady_pred_31 = __stady_pred_33;
        }
        if(!__stady_pred_31)pathcrawler_assert_exception("Post-condition!", 9);
        int __stady_pred_34 = 1;
        mpz_t __stady_gmp_81;
        __gmpz_init_set_si(__stady_gmp_81, __retres);
        mpz_t __stady_gmp_82;
        __gmpz_init_set_si(__stady_gmp_82, 1);
        mpz_t __stady_gmp_83;
        __gmpz_init(__stady_gmp_83);
        __gmpz_ui_sub(__stady_gmp_83, 0, __stady_gmp_82);
        __gmpz_clear(__stady_gmp_82);
        int __stady_pred_35 = __gmpz_cmp(__stady_gmp_81, __stady_gmp_83) != 0;
        __gmpz_clear(__stady_gmp_81);
        __gmpz_clear(__stady_gmp_83);
        if (__stady_pred_35) {
        mpz_t __stady_gmp_84;
        __gmpz_init_set_si(__stady_gmp_84, __retres);
        mpz_t __stady_gmp_85;
        __gmpz_init_set_si(__stady_gmp_85, __retres);
        __stady_pred_34 = (*(old_ptr_s + __gmpz_get_si(__stady_gmp_84)) < *(old_s + __gmpz_get_si(__stady_gmp_85)));
        }
        if(!__stady_pred_34)pathcrawler_assert_exception("Post-condition!", 13);
        
        }
      free(old_ptr_s);
      return __retres;
  }
}


[kernel] preprocessing with "gcc -C -E -I.  stady_temp.c"
[kernel] preprocessing with "gcc -C -E -I. -include /usr/local/share/frama-c/pc/lib/lanceur_deb.h stady_temp.c"
[pc] analyzing...
[pc] Compiling pathcrawler_stady_temp/lanceur_nextSubset utilities ...
[pc] Compiling pathcrawler_stady_temp/lanceur_nextSubset ...
[pc] generating tests...
[pc] Starting lanceur_nextSubset (isc version)
[pc] Starting lanceur_pathcrawler__nextSubset_precond (isc version)
[pc] generation finished
[stady] all-paths: true
[stady] 799 test cases
[report] Computing properties status...

--------------------------------------------------------------------------------
--- Properties of Function 'nextSubset'
--------------------------------------------------------------------------------

[  Valid  ] Post-condition (file tests/next_subset/next_subset.c, line 16)
            by StaDy.
[  Valid  ] Post-condition (file tests/next_subset/next_subset.c, line 17)
            by StaDy.
[  Valid  ] Post-condition (file tests/next_subset/next_subset.c, line 18)
            by StaDy.
[  Valid  ] Post-condition (file tests/next_subset/next_subset.c, line 19)
            by StaDy.
[  Valid  ] Post-condition (file tests/next_subset/next_subset.c, line 20)
            by StaDy.
[    -    ] Assigns (file tests/next_subset/next_subset.c, line 15)
[  Valid  ] Loop variant at loop (file tests/next_subset/next_subset.c, line 27)
            by StaDy.
[  Valid  ] Loop variant at loop (file tests/next_subset/next_subset.c, line 34)
            by StaDy.
[  Valid  ] Invariant (file tests/next_subset/next_subset.c, line 24)
            by StaDy.
[  Valid  ] Invariant (file tests/next_subset/next_subset.c, line 30)
            by StaDy.
[  Valid  ] Invariant (file tests/next_subset/next_subset.c, line 31)
            by StaDy.
[    -    ] Default behavior
            tried with Frama-C kernel.

--------------------------------------------------------------------------------
--- Status Report Summary
--------------------------------------------------------------------------------
    10 Completely validated
     2 To be validated
    12 Total
--------------------------------------------------------------------------------
