[kernel] Parsing FRAMAC_SHARE/libc/__fc_builtin_for_normalization.i (no preprocessing)
[kernel] Parsing tests/spec_insuf_ko/spec_insuf_ko.c (with preprocessing)
[stady:generated-pl] generated Prolog precondition:
:- module(test_parameters).
:- import create_input_val/3 from substitution.
:- export dom/4.
:- export create_input_vals/2.
:- export unquantif_preconds/2.
:- export quantif_preconds/2.
:- export strategy/2.
:- export precondition_of/2.

dom(0,0,0,0).
dom('f', cont('__stady_term_12',_), [], int([-2147483648..2147483647])).
dom('f', dim('__stady_term_12'), [], int([0..4294967295])).
dom('f', dim('t'), [], int([4..4])).
dom('f', cont('t',_), [], int([-2147483648..2147483647])).
dom('pathcrawler__f_precond',A,B,C) :-
  dom('f',A,B,C).
create_input_vals('f', Ins):-
  create_input_val(dim('__stady_term_12'), int([0..4294967295]),Ins),
  create_input_val(dim('t'), int([4..4]),Ins),
  create_input_val('k', int([4..4]),Ins),
  true.
create_input_vals('pathcrawler__f_precond',Ins) :-
  create_input_vals('f',Ins).
quantif_preconds('f',
  [

  ]
).
quantif_preconds('pathcrawler__f_precond',A) :-
  quantif_preconds('f',A).
unquantif_preconds('f',
  [

  ]
).
unquantif_preconds('pathcrawler__f_precond',A) :-
  unquantif_preconds('f',A).
strategy('f',[]).
strategy('pathcrawler__f_precond',A) :-
  strategy('f',A).
precondition_of('f','pathcrawler__f_precond').
[stady:generated-c] generated C file:
/* Generated by Frama-C */
struct __anonstruct___mpz_struct_1 {int _mp_alloc ;int _mp_size ;unsigned long *_mp_d ;};typedef struct __anonstruct___mpz_struct_1 __mpz_struct;typedef __mpz_struct mpz_t[1];
extern unsigned long int __gmpz_get_ui(mpz_t);
extern signed long int __gmpz_get_si(mpz_t);
extern int __gmpz_cmp_ui(mpz_t, unsigned long int);
extern int __gmpz_cmp(mpz_t, mpz_t);
extern void __gmpz_clear(mpz_t);
extern void __gmpz_init(mpz_t);
extern void __gmpz_init_set(mpz_t, mpz_t);
extern void __gmpz_init_set_si(mpz_t, signed long int);
extern void __gmpz_init_set_str(mpz_t, const char*, int);
extern void __gmpz_add_ui(mpz_t, const mpz_t, unsigned long int);
extern void __gmpz_sub(mpz_t, const mpz_t, const mpz_t);
extern int pathcrawler_assert_exception(char*,int);
extern int pathcrawler_dimension(void*);
extern void pathcrawler_to_framac(char*);
extern int pathcrawler_assume_exception(char*,int);
extern void* malloc(unsigned long);
extern void free(void*);
void __stady_fct_0(int *A, int n);
int *__stady_term_12;
void sort(int *A, int n)
{
  mpz_t __stady_gmp_0;
  __gmpz_init_set_si(__stady_gmp_0,n);
  mpz_t __stady_gmp_1;
  __gmpz_init_set_str(__stady_gmp_1,"4",10);
  int __stady_term_0;
  __stady_term_0 = __gmpz_cmp(__stady_gmp_0,__stady_gmp_1);
  __gmpz_clear(__stady_gmp_0);
  __gmpz_clear(__stady_gmp_1);
  if(! (__stady_term_0 == 0)) {
    pathcrawler_assert_exception("Pre-condition!",6);
  }
  mpz_t __stady_gmp_2;
  __gmpz_init_set_si(__stady_gmp_2,n);
  mpz_t __stady_gmp_3;
  __gmpz_init_set_str(__stady_gmp_3,"1",10);
  mpz_t __stady_gmp_4;
  __gmpz_init(__stady_gmp_4);
  __gmpz_sub(__stady_gmp_4,__stady_gmp_2,__stady_gmp_3);
  __gmpz_clear(__stady_gmp_2);
  __gmpz_clear(__stady_gmp_3);
  int __stady_pred_0;
  int __stady_pred_1;
  __stady_pred_1 = __gmpz_cmp_ui(__stady_gmp_4,0);
  if(__stady_pred_1 >= 0) {
    int __stady_term_1;
    __stady_term_1 = pathcrawler_dimension(A);
    int __stady_term_2;
    __stady_term_2 = __gmpz_cmp_ui(__stady_gmp_4,__stady_term_1);
    int __stady_term_3;
    __stady_term_3 = __gmpz_cmp_ui(__stady_gmp_4,0);
    __stady_pred_0 = __stady_term_3 >= 0 && __stady_term_2 < 0;
  }
  else {
    __stady_pred_0 = 1;
  }
  __gmpz_clear(__stady_gmp_4);
  if(! __stady_pred_0) {
    pathcrawler_assert_exception("Pre-condition!",8);
  }
  int *old_A;
  int *old_ptr_A;
  old_A = A;
  mpz_t __stady_gmp_5;
  __gmpz_init_set_si(__stady_gmp_5,n);
  unsigned long __stady_term_4;
  unsigned long __stady_term_5;
  __stady_term_5 = __gmpz_get_ui(__stady_gmp_5);
  old_ptr_A = (int *)malloc(__stady_term_5 * (unsigned long)sizeof(int));
  __stady_term_5 = __gmpz_get_ui(__stady_gmp_5);
  __stady_term_4 = 0;
  while(__stady_term_4 < __stady_term_5) {
    *(old_ptr_A + __stady_term_4) = *(A + __stady_term_4);
    __stady_term_4 ++;
  }
  __gmpz_clear(__stady_gmp_5);
  int old_n;
  old_n = n;
  {
    int c;
    int position;
    c = 0;
    while (1) {
      if (! (c < n - 1)) {
                           pathcrawler_to_framac("@FC:REACHABLE_STMT:5");
                           break;
                         }{
                            int d;
                            position = c;
                            d = c + 1;
                            while (1) {
                              if (! (d < n)) {
                                               pathcrawler_to_framac("@FC:REACHABLE_STMT:12");
                                               break;
                                             }if (*(A + position) > *(A + d)) 
                                                {
                                                  pathcrawler_to_framac
                                                  ("@FC:REACHABLE_STMT:16");
                                                  position = d;
                                                }
                                              d ++;}
                               
                            if (position != c) {
                              int swap;
                              {
                                pathcrawler_to_framac("@FC:REACHABLE_STMT:21");
                                swap = *(A + c);
                              }
                              *(A + c) = *(A + position);
                              *(A + position) = swap;
                            }
                          }
                          c ++;}
       
    free(old_ptr_A);
    return;
  }
}

int f_precond(int *t, int k)
{
  return 1;
}

void f(int *t, int k)
{
  int *old_t;
  int *old_ptr_t;
  old_t = t;
  mpz_t __stady_gmp_8;
  __gmpz_init_set_si(__stady_gmp_8,k);
  unsigned long __stady_term_8;
  unsigned long __stady_term_9;
  __stady_term_9 = __gmpz_get_ui(__stady_gmp_8);
  old_ptr_t = (int *)malloc(__stady_term_9 * (unsigned long)sizeof(int));
  __stady_term_9 = __gmpz_get_ui(__stady_gmp_8);
  __stady_term_8 = 0;
  while(__stady_term_8 < __stady_term_9) {
    *(old_ptr_t + __stady_term_8) = *(t + __stady_term_8);
    __stady_term_8 ++;
  }
  __gmpz_clear(__stady_gmp_8);
  int old_k;
  old_k = k;
  {
    {
      __stady_fct_0(t,k);
      
    }
    {
      mpz_t __stady_gmp_6;
      __gmpz_init_set_str(__stady_gmp_6,"0",10);
      int __stady_term_6;
      __stady_term_6 = (int)__gmpz_get_si(__stady_gmp_6);
      __gmpz_clear(__stady_gmp_6);
      mpz_t __stady_gmp_7;
      __gmpz_init_set_str(__stady_gmp_7,"1",10);
      int __stady_term_7;
      __stady_term_7 = (int)__gmpz_get_si(__stady_gmp_7);
      __gmpz_clear(__stady_gmp_7);
      if(! (*(old_t + __stady_term_6) <= *(old_t + __stady_term_7))) {
        pathcrawler_assert_exception("Post-condition!",3);
      }
    }
    free(old_ptr_t);
    return;
  }
}

void __stady_fct_0(int *A, int n) {
  if(1) {
    int old_n;
    int *old_A;
    int *old_ptr_A;
    old_n = n;
    old_A = A;
    mpz_t __stady_gmp_9;
    __gmpz_init_set_si(__stady_gmp_9,n);
    unsigned long __stady_term_10;
    unsigned long __stady_term_11;
    __stady_term_11 = __gmpz_get_ui(__stady_gmp_9);
    old_ptr_A = (int *)malloc(__stady_term_11 * (unsigned long)sizeof(int));
    __stady_term_11 = __gmpz_get_ui(__stady_gmp_9);
    __stady_term_10 = 0;
    while(__stady_term_10 < __stady_term_11) {
      *(old_ptr_A + __stady_term_10) = *(A + __stady_term_10);
      __stady_term_10 ++;
    }
    __gmpz_clear(__stady_gmp_9);
    mpz_t __stady_gmp_10;
    __gmpz_init_set_si(__stady_gmp_10,n);
    mpz_t __stady_gmp_11;
    __gmpz_init_set_str(__stady_gmp_11,"1",10);
    mpz_t __stady_gmp_12;
    __gmpz_init(__stady_gmp_12);
    __gmpz_sub(__stady_gmp_12,__stady_gmp_10,__stady_gmp_11);
    __gmpz_clear(__stady_gmp_10);
    __gmpz_clear(__stady_gmp_11);
    int __stady_pred_2;
    int __stady_pred_3;
    __stady_pred_3 = __gmpz_cmp_ui(__stady_gmp_12,0);
    if(__stady_pred_3 >= 0) {
      int __stady_term_13;
      __stady_term_13 = pathcrawler_dimension(__stady_term_12);
      int __stady_term_14;
      __stady_term_14 = __gmpz_cmp_ui(__stady_gmp_12,__stady_term_13);
      int __stady_term_15;
      __stady_term_15 = __gmpz_cmp_ui(__stady_gmp_12,0);
      __stady_pred_2 = __stady_term_15 >= 0 && __stady_term_14 < 0;
    }
    else {
      __stady_pred_2 = 1;
    }
    __gmpz_clear(__stady_gmp_12);
    if(! __stady_pred_2) {
      pathcrawler_assume_exception("",0);
    }
    mpz_t __stady_gmp_13;
    mpz_t __stady_gmp_14;
    __gmpz_init_set_str(__stady_gmp_14,"0",10);
    __gmpz_init_set(__stady_gmp_13,__stady_gmp_14);
    mpz_t __stady_gmp_15;
    __gmpz_init_set_si(__stady_gmp_15,n);
    mpz_t __stady_gmp_16;
    __gmpz_init_set_str(__stady_gmp_16,"1",10);
    mpz_t __stady_gmp_17;
    __gmpz_init(__stady_gmp_17);
    __gmpz_sub(__stady_gmp_17,__stady_gmp_15,__stady_gmp_16);
    __gmpz_clear(__stady_gmp_15);
    __gmpz_clear(__stady_gmp_16);
    int __stady_term_16;
    int __stady_term_17;
    __stady_term_17 = __gmpz_cmp(__stady_gmp_13,__stady_gmp_17);
    while(__stady_term_17 <= 0) {
      __stady_term_16 = (int)__gmpz_get_si(__stady_gmp_13);
      *(A + __stady_term_16) = *(__stady_term_12 + __stady_term_16);
      __gmpz_add_ui(__stady_gmp_13,__stady_gmp_13,1);
      __stady_term_17 = __gmpz_cmp(__stady_gmp_13,__stady_gmp_17);
    }
    __gmpz_clear(__stady_gmp_13);
    __gmpz_clear(__stady_gmp_14);
    __gmpz_clear(__stady_gmp_17);
    free(old_ptr_A);
  }
}

[kernel] Parsing FRAMAC_SHARE/libc/__fc_builtin_for_normalization.i (no preprocessing)
[kernel] Parsing __sd_instru_spec_insuf_ko_f.c (with preprocessing)
[kernel] Parsing FRAMAC_SHARE/libc/__fc_builtin_for_normalization.i (no preprocessing)
[kernel] Parsing __sd_instru_spec_insuf_ko_f.c (with preprocessing)
[pc] analyzing...
[pc] Compiling pathcrawler___sd_instru_spec_insuf_ko_f/lanceur_f utilities ...
[pc] Compiling pathcrawler___sd_instru_spec_insuf_ko_f/lanceur_f ...
[pc] generating tests...
[pc] Starting lanceur_f (isc version)
[pc] Starting lanceur_pathcrawler__f_precond (isc version)
[pc] Starting lanceur_f (isc version)
[pc] generation finished
[stady] all-paths: true
[stady] 22 test cases
[stady]  Counter-example for ensures *(\old(t)+0) ≤ *(\old(t)+1)
[stady]  testcases___sd_instru_spec_insuf_ko_f/f/testdrivers/TC_2.c
[stady]           variable|            input|  concrete output|  symbolic output
[stady]  __stady...m_12[0]|           200986|                 |
[stady]  __stady...m_12[1]|             6432|                 |
[stady]  __stady...m_12[2]|          -101831|                 |
[stady]  __stady...m_12[3]|          -176288|                 |
[stady]                  k|                4|                 |
[stady]               t[0]|          -133277|           200986|__stady...m_12[0]
[stady]               t[1]|           -43805|             6432|__stady...m_12[1]
[stady]               t[2]|           104588|          -101831|__stady...m_12[2]
[stady]               t[3]|            25937|          -176288|__stady...m_12[3]
[report] Computing properties status...

--------------------------------------------------------------------------------
--- Properties of Function 'f'
--------------------------------------------------------------------------------

[   Bug   ] Post-condition (file tests/spec_insuf_ko/spec_insuf_ko.c, line 34)
            by StaDy.
[  Dead   ] Default behavior
            Locally invalid, but unreachable.
            By Frama-C kernel because:
             - Post-condition (file tests/spec_insuf_ko/spec_insuf_ko.c, line 34)

--------------------------------------------------------------------------------
--- Status Report Summary
--------------------------------------------------------------------------------
     1 Bugs found
     1 Dead property
     2 Total
--------------------------------------------------------------------------------
