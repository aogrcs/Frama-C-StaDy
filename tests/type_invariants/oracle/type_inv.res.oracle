[kernel] preprocessing with "gcc -C -E -I.  tests/type_invariants/type_inv.c"
[stady:generated-pl] generated Prolog precondition:
:- module(test_parameters).
:- import create_input_val/3 from substitution.
:- export dom/4.
:- export create_input_vals/2.
:- export unquantif_preconds/2.
:- export quantif_preconds/2.
:- export strategy/2.
:- export precondition_of/2.

dom(0,0,0,0).
dom('pathcrawler__f_precond',A,B,C) :-
  dom('f',A,B,C).
create_input_vals('f', Ins):-
  create_input_val('x', int([101..2147483647]),Ins),
  create_input_val('y', int([-2147483648..2147483647]),Ins),
  true.
create_input_vals('pathcrawler__f_precond',Ins) :-
  create_input_vals('f',Ins).
quantif_preconds('f',
  [
  ]
).
quantif_preconds('pathcrawler__f_precond',A) :-
  quantif_preconds('f',A).
unquantif_preconds('f',
  [
    cond(egal,'x',*(int(math), 2, 'y'),pre)
  ]
).
unquantif_preconds('pathcrawler__f_precond',A) :-
  unquantif_preconds('f',A).
strategy('f',[]).
strategy('pathcrawler__f_precond',A) :-
  strategy('f',A).
precondition_of('f','pathcrawler__f_precond').
[stady:generated-c] generated C file:
/* Generated by Frama-C */
#include <gmp.h>
extern int pathcrawler_assert_exception(char*,int);
extern int pathcrawler_dimension(void*);
extern void pathcrawler_to_framac(char*);
extern void* malloc(unsigned);
extern void free(void*);
struct S {
   int s_i ;
};
/*@ type invariant inv_int(int x) = 0 <= x;
 */
/*@ type invariant inv_s(struct S x) = x.s_i%2 == 0;
 */
int f_precond(int x, int y)
{
  return 1;
}

void f(int x, int y)
{
  int old_x;
  old_x = x;
  int old_y;
  old_y = y;
  {
    struct S s;
    {
      s.s_i = x;mpz_t __stady_gmp_0;
      __gmpz_init_set_str(__stady_gmp_0, "0", 10);
      mpz_t __stady_gmp_1;
      __gmpz_init_set_si(__stady_gmp_1, s.s_i);
      int __stady_pred_0;
      __stady_pred_0 = __gmpz_cmp(__stady_gmp_0, __stady_gmp_1) <= 0;
      __gmpz_clear(__stady_gmp_0);
      __gmpz_clear(__stady_gmp_1);
      if(!(__stady_pred_0)) {
        pathcrawler_assert_exception("Type invariant inv_int",3);
      }
      mpz_t __stady_gmp_2;
      __gmpz_init_set_si(__stady_gmp_2, s.s_i);
      mpz_t __stady_gmp_3;
      __gmpz_init_set_str(__stady_gmp_3, "2", 10);
      mpz_t __stady_gmp_4;
      __gmpz_init(__stady_gmp_4);
      __gmpz_tdiv_r(__stady_gmp_4, __stady_gmp_2, __stady_gmp_3);
      __gmpz_clear(__stady_gmp_2);
      __gmpz_clear(__stady_gmp_3);
      mpz_t __stady_gmp_5;
      __gmpz_init_set_str(__stady_gmp_5, "0", 10);
      int __stady_pred_1;
      __stady_pred_1 = __gmpz_cmp(__stady_gmp_4, __stady_gmp_5) == 0;
      __gmpz_clear(__stady_gmp_4);
      __gmpz_clear(__stady_gmp_5);
      if(!(__stady_pred_1)) {
        pathcrawler_assert_exception("Type invariant inv_s",0);
      }
      
    }
    return;
  }
}


[kernel] preprocessing with "gcc -C -E -I.  __sd_instru_type_inv_f.c"
/usr/include/x86_64-linux-gnu/gmp.h:1721:[kernel] warning: Calling undeclared function __builtin_expect. Old style K&R code?
[kernel] preprocessing with "gcc -C -E -I. -include /usr/local/share/frama-c/pc/lib/lanceur_deb.h __sd_instru_type_inv_f.c"
/usr/include/x86_64-linux-gnu/gmp.h:1721:[kernel] warning: Calling undeclared function __builtin_expect. Old style K&R code?
[pc] analyzing...
[pc] Compiling pathcrawler___sd_instru_type_inv_f/lanceur_f utilities ...
[pc] Compiling pathcrawler___sd_instru_type_inv_f/lanceur_f ...
[pc] generating tests...
[pc] Starting lanceur_f (isc version)
[pc] Starting lanceur_pathcrawler__f_precond (isc version)
[pc] generation finished
[stady] all-paths: true
[stady] 5 test cases
[report] Computing properties status...
--------------------------------------------------------------------------------
--- Global Properties
--------------------------------------------------------------------------------

[  Valid  ] Type invariant 'inv_int'
            by StaDy.
[  Valid  ] Type invariant 'inv_s'
            by StaDy.

--------------------------------------------------------------------------------
--- Properties of Function 'f'
--------------------------------------------------------------------------------

[  Valid  ] Default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Status Report Summary
--------------------------------------------------------------------------------
     3 Completely validated
     3 Total
--------------------------------------------------------------------------------
