[kernel] preprocessing with "gcc -C -E -I.  tests/bubble_sort/bubble_sort.c"
[stady:generated-pl] generated Prolog precondition:
:- module(test_parameters).
:- import create_input_val/3 from substitution.
:- export dom/4.
:- export create_input_vals/2.
:- export unquantif_preconds/2.
:- export quantif_preconds/2.
:- export strategy/2.
:- export precondition_of/2.

dom(0,0,0,0).
dom('bubble_sort', cont('A',_), [], int([-2147483648..2147483647])).
dom('pathcrawler__bubble_sort_precond',A,B,C) :-
  dom('bubble_sort',A,B,C).
create_input_vals('bubble_sort', Ins):-
  create_input_val(dim('A'), int([1..4294967295]),Ins),
  create_input_val('n', int([-2147483648..2147483647]),Ins),
  true.
create_input_vals('pathcrawler__bubble_sort_precond',Ins) :-
  create_input_vals('bubble_sort',Ins).
quantif_preconds('bubble_sort',
  [
  ]
).
quantif_preconds('pathcrawler__bubble_sort_precond',A) :-
  quantif_preconds('bubble_sort',A).
unquantif_preconds('bubble_sort',
  [
    cond(egal,dim('A'),+(int(math), -(int(math), 'n', 1), 1),pre),
    cond(infegal,'n',3,pre),
    cond(inf,0,'n',pre)
  ]
).
unquantif_preconds('pathcrawler__bubble_sort_precond',A) :-
  unquantif_preconds('bubble_sort',A).
strategy('bubble_sort',[]).
strategy('pathcrawler__bubble_sort_precond',A) :-
  strategy('bubble_sort',A).
precondition_of('bubble_sort','pathcrawler__bubble_sort_precond').
[stady:generated-c] generated C file:
/* Generated by Frama-C */
extern int pathcrawler_assert_exception(char*,int);
extern int pathcrawler_dimension(void*);
extern void pathcrawler_to_framac(char*);
int bubble_sort_precond(int *A, int n)
{
return 1;
}

void bubble_sort(int *A, int n)
{
  int *old_A = A;
  int *old_ptr_A;
  old_ptr_A = malloc((((n - 1) + 1))*sizeof(int));
  int __stady_iter_0;
  for (__stady_iter_0 = 0; __stady_iter_0 < ((n - 1) + 1); __stady_iter_0++) {
  old_ptr_A[__stady_iter_0] = A[__stady_iter_0];
  }
  int old_n = n;
  {
    int j;
    int i;
    {
      /*sequence*/
      i = 0;
      j = i;
    }
    i = 0;
    {
      if (((n - i)) < 0)pathcrawler_assert_exception("Variant non positive",10);int __stady_pred_0 = (0 <= i);
      if (__stady_pred_0) {
      __stady_pred_0 = (i <= n);
      }
      if(!__stady_pred_0)pathcrawler_assert_exception("Loop invariant not established!", 3);
      while (1) {
        int old_variant_10 = (n - i);
        {
          if (! (i < n)) { pathcrawler_to_framac("@FC:REACHABLE_STMT:8");
                         break; }
                         
          j = 0;
          {
            if (((((n - i) - 1) - j)) < 0)pathcrawler_assert_exception("Variant non positive",7);int __stady_pred_1 = 1;
            {
            int __q_a;
            for (__q_a = 0; __q_a <= j &&  __stady_pred_1; __q_a++) {
            __stady_pred_1 = (*(A + __q_a) <= *(A + j));
            }
            }
            if(!__stady_pred_1)pathcrawler_assert_exception("Loop invariant not established!", 4);
            int __stady_pred_2 = (0 <= j);
            if (__stady_pred_2) {
            __stady_pred_2 = (j <= ((n - i) - 1));
            }
            if(!__stady_pred_2)pathcrawler_assert_exception("Loop invariant not established!", 0);
            while (1) {
              int old_variant_7 = (((n - i) - 1) - j);
              {
                if (! (j < (n - i) - 1)) { pathcrawler_to_framac("@FC:REACHABLE_STMT:14");
                                         break; }
                                         
                if (*(A + j) > *(A + (j + 1))) {
                  int x;
                  { pathcrawler_to_framac("@FC:REACHABLE_STMT:19");
                  x = *(A + j); }
                  
                  *(A + j) = *(A + (j + 1));
                  *(A + (j + 1)) = x;
                }
                j ++;
              }int __stady_pred_3 = (0 <= j);
              if (__stady_pred_3) {
              __stady_pred_3 = (j <= ((n - i) - 1));
              }
              if(!__stady_pred_3)pathcrawler_assert_exception("Loop invariant not preserved!", 0);
              int __stady_pred_4 = 1;
              {
              int __q_a;
              for (__q_a = 0; __q_a <= j &&  __stady_pred_4; __q_a++) {
              __stady_pred_4 = (*(A + __q_a) <= *(A + j));
              }
              }
              if(!__stady_pred_4)pathcrawler_assert_exception("Loop invariant not preserved!", 4);
              if ((old_variant_7) < 0)pathcrawler_assert_exception("Variant non positive",7);
              if (((((n - i) - 1) - j)) >= old_variant_7)pathcrawler_assert_exception("Variant non decreasing",7);}
               }
             
          i ++;
        }int __stady_pred_5 = (0 <= i);
        if (__stady_pred_5) {
        __stady_pred_5 = (i <= n);
        }
        if(!__stady_pred_5)pathcrawler_assert_exception("Loop invariant not preserved!", 3);
        if ((old_variant_10) < 0)pathcrawler_assert_exception("Variant non positive",10);
        if (((n - i)) >= old_variant_10)pathcrawler_assert_exception("Variant non decreasing",10);}
         }
       
    {
      int __stady_pred_6 = 1;
      {
      int __q_i;
      for (__q_i = 0; __q_i < (old_n - 1) &&  __stady_pred_6; __q_i++) {
      __stady_pred_6 = (*(old_A + __q_i) <= *(old_A + (__q_i + 1)));
      }
      }
      if(!__stady_pred_6)pathcrawler_assert_exception("Post-condition!", 9);
      
      }
    free(old_ptr_A);
    return;
  }
}


[kernel] preprocessing with "gcc -C -E -I.  stady_temp.c"
stady_temp.c:14:[kernel] warning: Calling undeclared function malloc. Old style K&R code?
stady_temp.c:109:[kernel] warning: Calling undeclared function free. Old style K&R code?
[kernel] preprocessing with "gcc -C -E -I. -include /usr/local/share/frama-c/pc/lib/lanceur_deb.h stady_temp.c"
stady_temp.c:14:[kernel] warning: Calling undeclared function malloc. Old style K&R code?
stady_temp.c:109:[kernel] warning: Calling undeclared function free. Old style K&R code?
[pc] analyzing...
[pc] Compiling pathcrawler_stady_temp/lanceur_bubble_sort utilities ...
[pc] Compiling pathcrawler_stady_temp/lanceur_bubble_sort ...
[pc] generating tests...
[pc] Starting lanceur_bubble_sort (isc version)
[pc] Starting lanceur_pathcrawler__bubble_sort_precond (isc version)
[pc] generation finished
[stady] all-paths: true
[stady] 625 test cases
[report] Computing properties status...

--------------------------------------------------------------------------------
--- Properties of Function 'bubble_sort'
--------------------------------------------------------------------------------

[  Valid  ] Post-condition (file tests/bubble_sort/bubble_sort.c, line 9)
            by StaDy.
[    -    ] Assigns (file tests/bubble_sort/bubble_sort.c, line 8)
[  Valid  ] Loop variant at loop (file tests/bubble_sort/bubble_sort.c, line 18)
            by StaDy.
[  Valid  ] Loop variant at loop (file tests/bubble_sort/bubble_sort.c, line 24)
            by StaDy.
[  Valid  ] Invariant (file tests/bubble_sort/bubble_sort.c, line 14)
            by StaDy.
[  Valid  ] Invariant (file tests/bubble_sort/bubble_sort.c, line 19)
            by StaDy.
[  Valid  ] Invariant (file tests/bubble_sort/bubble_sort.c, line 20)
            by StaDy.
[    -    ] Default behavior
            tried with Frama-C kernel.

--------------------------------------------------------------------------------
--- Status Report Summary
--------------------------------------------------------------------------------
     6 Completely validated
     2 To be validated
     8 Total
--------------------------------------------------------------------------------
