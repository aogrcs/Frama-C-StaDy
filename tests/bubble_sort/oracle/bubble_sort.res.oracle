[kernel] preprocessing with "gcc -C -E -I.  tests/bubble_sort/bubble_sort.c"
[stady:generated-pl] generated Prolog precondition:
:- module(test_parameters).
:- import create_input_val/3 from substitution.
:- export dom/4.
:- export create_input_vals/2.
:- export unquantif_preconds/2.
:- export quantif_preconds/2.
:- export strategy/2.
:- export precondition_of/2.

dom(0,0,0,0).
dom('bubble_sort', dim('A'), [], int([1..4294967295])).
dom('bubble_sort', cont('A',_), [], int([-2147483648..2147483647])).
dom('pathcrawler__bubble_sort_precond',A,B,C) :-
  dom('bubble_sort',A,B,C).
create_input_vals('bubble_sort', Ins):-
  create_input_val(dim('A'), int([1..4294967295]),Ins),
  create_input_val('n', int([1..3]),Ins),
  true.
create_input_vals('pathcrawler__bubble_sort_precond',Ins) :-
  create_input_vals('bubble_sort',Ins).
quantif_preconds('bubble_sort',
  [
  ]
).
quantif_preconds('pathcrawler__bubble_sort_precond',A) :-
  quantif_preconds('bubble_sort',A).
unquantif_preconds('bubble_sort',
  [
    cond(egal,dim('A'),+(int(math), -(int(math), 'n', 1), 1),pre)
  ]
).
unquantif_preconds('pathcrawler__bubble_sort_precond',A) :-
  unquantif_preconds('bubble_sort',A).
strategy('bubble_sort',[]).
strategy('pathcrawler__bubble_sort_precond',A) :-
  strategy('bubble_sort',A).
precondition_of('bubble_sort','pathcrawler__bubble_sort_precond').
[stady:generated-c] generated C file:
/* Generated by Frama-C */
#include <gmp.h>
extern int pathcrawler_assert_exception(char*,int);
extern int pathcrawler_dimension(void*);
extern void pathcrawler_to_framac(char*);
extern void* malloc(unsigned);
extern void free(void*);
int bubble_sort_precond(int *A, int n)
{
return 1;
}

void bubble_sort(int *A, int n)
{
  int *old_A = A;
  int *old_ptr_A;
  mpz_t __stady_gmp_0;
  __gmpz_init_set_si(__stady_gmp_0, n);
  int __stady_iter_0;
  old_ptr_A = malloc(__gmpz_get_si(__stady_gmp_0)*sizeof(int));
  for (__stady_iter_0 = 0; __stady_iter_0 < __gmpz_get_si(__stady_gmp_0); __stady_iter_0++) {
  old_ptr_A[__stady_iter_0] = A[__stady_iter_0];
  }
  int old_n = n;
  {
    int j;
    int i;
    {
      /*sequence*/
      i = 0;
      j = i;
    }
    i = 0;
    {
      mpz_t __stady_gmp_1;
      __gmpz_init_set_si(__stady_gmp_1, n);
      mpz_t __stady_gmp_2;
      __gmpz_init_set_si(__stady_gmp_2, i);
      mpz_t __stady_gmp_3;
      __gmpz_init(__stady_gmp_3);
      __gmpz_sub(__stady_gmp_3, __stady_gmp_1, __stady_gmp_2);
      __gmpz_clear(__stady_gmp_1);
      __gmpz_clear(__stady_gmp_2);
      if (__gmpz_cmp_ui(__stady_gmp_3, 0) < 0)pathcrawler_assert_exception("Variant non positive",10);mpz_t __stady_gmp_4;
      __gmpz_init_set_si(__stady_gmp_4, 0);
      mpz_t __stady_gmp_5;
      __gmpz_init_set_si(__stady_gmp_5, i);
      int __stady_pred_1 = __gmpz_cmp(__stady_gmp_4, __stady_gmp_5) <= 0;
      __gmpz_clear(__stady_gmp_4);
      __gmpz_clear(__stady_gmp_5);
      int __stady_pred_0 = __stady_pred_1;
      if (__stady_pred_0) {
      __stady_pred_0 = (i <= n);
      }
      if(!__stady_pred_0)pathcrawler_assert_exception("Loop invariant not established!", 3);
      while (1) {
        mpz_t __stady_gmp_6;
        __gmpz_init_set_si(__stady_gmp_6, n);
        mpz_t __stady_gmp_7;
        __gmpz_init_set_si(__stady_gmp_7, i);
        mpz_t __stady_gmp_8;
        __gmpz_init(__stady_gmp_8);
        __gmpz_sub(__stady_gmp_8, __stady_gmp_6, __stady_gmp_7);
        __gmpz_clear(__stady_gmp_6);
        __gmpz_clear(__stady_gmp_7);
        mpz_t old_variant_10;
        __gmpz_init_set(old_variant_10, __stady_gmp_8);
        {
          if (! (i < n)) { pathcrawler_to_framac("@FC:REACHABLE_STMT:8");
                         break; }
                         
          j = 0;
          {
            mpz_t __stady_gmp_9;
            __gmpz_init_set_si(__stady_gmp_9, n);
            mpz_t __stady_gmp_10;
            __gmpz_init_set_si(__stady_gmp_10, i);
            mpz_t __stady_gmp_11;
            __gmpz_init(__stady_gmp_11);
            __gmpz_sub(__stady_gmp_11, __stady_gmp_9, __stady_gmp_10);
            __gmpz_clear(__stady_gmp_9);
            __gmpz_clear(__stady_gmp_10);
            mpz_t __stady_gmp_12;
            __gmpz_init_set_si(__stady_gmp_12, 1);
            mpz_t __stady_gmp_13;
            __gmpz_init(__stady_gmp_13);
            __gmpz_sub(__stady_gmp_13, __stady_gmp_11, __stady_gmp_12);
            __gmpz_clear(__stady_gmp_11);
            __gmpz_clear(__stady_gmp_12);
            mpz_t __stady_gmp_14;
            __gmpz_init_set_si(__stady_gmp_14, j);
            mpz_t __stady_gmp_15;
            __gmpz_init(__stady_gmp_15);
            __gmpz_sub(__stady_gmp_15, __stady_gmp_13, __stady_gmp_14);
            __gmpz_clear(__stady_gmp_13);
            __gmpz_clear(__stady_gmp_14);
            if (__gmpz_cmp_ui(__stady_gmp_15, 0) < 0)pathcrawler_assert_exception("Variant non positive",7);int __stady_pred_2 = 1;
            {
            mpz_t __q_a;
            mpz_t __stady_gmp_16;
            __gmpz_init_set_si(__stady_gmp_16, 0);
            mpz_t __stady_gmp_17;
            __gmpz_init_set_si(__stady_gmp_17, j);
            __gmpz_init_set(__q_a, __stady_gmp_16);
            for (; __gmpz_cmp(__q_a, __stady_gmp_17) <= 0 &&  __stady_pred_2;) {
            mpz_t __stady_gmp_18;
            __gmpz_init_set(__stady_gmp_18, __q_a);
            int __stady_term_0 = __gmpz_get_si(__stady_gmp_18);
            __gmpz_clear(__stady_gmp_18);
            mpz_t __stady_gmp_19;
            __gmpz_init_set_si(__stady_gmp_19, j);
            int __stady_term_1 = __gmpz_get_si(__stady_gmp_19);
            __gmpz_clear(__stady_gmp_19);
            __stady_pred_2 = (*(A + __stady_term_0) <= *(A + __stady_term_1));
            __gmpz_add_ui(__q_a, __q_a, 1);
            }
            __gmpz_clear(__q_a);
            __gmpz_clear(__stady_gmp_16);
            __gmpz_clear(__stady_gmp_17);
            }
            if(!__stady_pred_2)pathcrawler_assert_exception("Loop invariant not established!", 4);
            mpz_t __stady_gmp_20;
            __gmpz_init_set_si(__stady_gmp_20, 0);
            mpz_t __stady_gmp_21;
            __gmpz_init_set_si(__stady_gmp_21, j);
            int __stady_pred_4 = __gmpz_cmp(__stady_gmp_20, __stady_gmp_21) <= 0;
            __gmpz_clear(__stady_gmp_20);
            __gmpz_clear(__stady_gmp_21);
            int __stady_pred_3 = __stady_pred_4;
            if (__stady_pred_3) {
            mpz_t __stady_gmp_22;
            __gmpz_init_set_si(__stady_gmp_22, j);
            mpz_t __stady_gmp_23;
            __gmpz_init_set_si(__stady_gmp_23, n);
            mpz_t __stady_gmp_24;
            __gmpz_init_set_si(__stady_gmp_24, i);
            mpz_t __stady_gmp_25;
            __gmpz_init(__stady_gmp_25);
            __gmpz_sub(__stady_gmp_25, __stady_gmp_23, __stady_gmp_24);
            __gmpz_clear(__stady_gmp_23);
            __gmpz_clear(__stady_gmp_24);
            mpz_t __stady_gmp_26;
            __gmpz_init_set_si(__stady_gmp_26, 1);
            mpz_t __stady_gmp_27;
            __gmpz_init(__stady_gmp_27);
            __gmpz_sub(__stady_gmp_27, __stady_gmp_25, __stady_gmp_26);
            __gmpz_clear(__stady_gmp_25);
            __gmpz_clear(__stady_gmp_26);
            int __stady_pred_5 = __gmpz_cmp(__stady_gmp_22, __stady_gmp_27) <= 0;
            __gmpz_clear(__stady_gmp_22);
            __gmpz_clear(__stady_gmp_27);
            __stady_pred_3 = __stady_pred_5;
            }
            if(!__stady_pred_3)pathcrawler_assert_exception("Loop invariant not established!", 0);
            while (1) {
              mpz_t __stady_gmp_28;
              __gmpz_init_set_si(__stady_gmp_28, n);
              mpz_t __stady_gmp_29;
              __gmpz_init_set_si(__stady_gmp_29, i);
              mpz_t __stady_gmp_30;
              __gmpz_init(__stady_gmp_30);
              __gmpz_sub(__stady_gmp_30, __stady_gmp_28, __stady_gmp_29);
              __gmpz_clear(__stady_gmp_28);
              __gmpz_clear(__stady_gmp_29);
              mpz_t __stady_gmp_31;
              __gmpz_init_set_si(__stady_gmp_31, 1);
              mpz_t __stady_gmp_32;
              __gmpz_init(__stady_gmp_32);
              __gmpz_sub(__stady_gmp_32, __stady_gmp_30, __stady_gmp_31);
              __gmpz_clear(__stady_gmp_30);
              __gmpz_clear(__stady_gmp_31);
              mpz_t __stady_gmp_33;
              __gmpz_init_set_si(__stady_gmp_33, j);
              mpz_t __stady_gmp_34;
              __gmpz_init(__stady_gmp_34);
              __gmpz_sub(__stady_gmp_34, __stady_gmp_32, __stady_gmp_33);
              __gmpz_clear(__stady_gmp_32);
              __gmpz_clear(__stady_gmp_33);
              mpz_t old_variant_7;
              __gmpz_init_set(old_variant_7, __stady_gmp_34);
              {
                if (! (j < (n - i) - 1)) { pathcrawler_to_framac("@FC:REACHABLE_STMT:14");
                                         break; }
                                         
                if (*(A + j) > *(A + (j + 1))) {
                  int x;
                  { pathcrawler_to_framac("@FC:REACHABLE_STMT:19");
                  x = *(A + j); }
                  
                  *(A + j) = *(A + (j + 1));
                  *(A + (j + 1)) = x;
                }
                j ++;
              }mpz_t __stady_gmp_35;
              __gmpz_init_set_si(__stady_gmp_35, 0);
              mpz_t __stady_gmp_36;
              __gmpz_init_set_si(__stady_gmp_36, j);
              int __stady_pred_7 = __gmpz_cmp(__stady_gmp_35, __stady_gmp_36) <= 0;
              __gmpz_clear(__stady_gmp_35);
              __gmpz_clear(__stady_gmp_36);
              int __stady_pred_6 = __stady_pred_7;
              if (__stady_pred_6) {
              mpz_t __stady_gmp_37;
              __gmpz_init_set_si(__stady_gmp_37, j);
              mpz_t __stady_gmp_38;
              __gmpz_init_set_si(__stady_gmp_38, n);
              mpz_t __stady_gmp_39;
              __gmpz_init_set_si(__stady_gmp_39, i);
              mpz_t __stady_gmp_40;
              __gmpz_init(__stady_gmp_40);
              __gmpz_sub(__stady_gmp_40, __stady_gmp_38, __stady_gmp_39);
              __gmpz_clear(__stady_gmp_38);
              __gmpz_clear(__stady_gmp_39);
              mpz_t __stady_gmp_41;
              __gmpz_init_set_si(__stady_gmp_41, 1);
              mpz_t __stady_gmp_42;
              __gmpz_init(__stady_gmp_42);
              __gmpz_sub(__stady_gmp_42, __stady_gmp_40, __stady_gmp_41);
              __gmpz_clear(__stady_gmp_40);
              __gmpz_clear(__stady_gmp_41);
              int __stady_pred_8 = __gmpz_cmp(__stady_gmp_37, __stady_gmp_42) <= 0;
              __gmpz_clear(__stady_gmp_37);
              __gmpz_clear(__stady_gmp_42);
              __stady_pred_6 = __stady_pred_8;
              }
              if(!__stady_pred_6)pathcrawler_assert_exception("Loop invariant not preserved!", 0);
              int __stady_pred_9 = 1;
              {
              mpz_t __q_a;
              mpz_t __stady_gmp_43;
              __gmpz_init_set_si(__stady_gmp_43, 0);
              mpz_t __stady_gmp_44;
              __gmpz_init_set_si(__stady_gmp_44, j);
              __gmpz_init_set(__q_a, __stady_gmp_43);
              for (; __gmpz_cmp(__q_a, __stady_gmp_44) <= 0 &&  __stady_pred_9;) {
              mpz_t __stady_gmp_45;
              __gmpz_init_set(__stady_gmp_45, __q_a);
              int __stady_term_2 = __gmpz_get_si(__stady_gmp_45);
              __gmpz_clear(__stady_gmp_45);
              mpz_t __stady_gmp_46;
              __gmpz_init_set_si(__stady_gmp_46, j);
              int __stady_term_3 = __gmpz_get_si(__stady_gmp_46);
              __gmpz_clear(__stady_gmp_46);
              __stady_pred_9 = (*(A + __stady_term_2) <= *(A + __stady_term_3));
              __gmpz_add_ui(__q_a, __q_a, 1);
              }
              __gmpz_clear(__q_a);
              __gmpz_clear(__stady_gmp_43);
              __gmpz_clear(__stady_gmp_44);
              }
              if(!__stady_pred_9)pathcrawler_assert_exception("Loop invariant not preserved!", 4);
              mpz_t __stady_gmp_47;
              __gmpz_init_set_si(__stady_gmp_47, n);
              mpz_t __stady_gmp_48;
              __gmpz_init_set_si(__stady_gmp_48, i);
              mpz_t __stady_gmp_49;
              __gmpz_init(__stady_gmp_49);
              __gmpz_sub(__stady_gmp_49, __stady_gmp_47, __stady_gmp_48);
              __gmpz_clear(__stady_gmp_47);
              __gmpz_clear(__stady_gmp_48);
              mpz_t __stady_gmp_50;
              __gmpz_init_set_si(__stady_gmp_50, 1);
              mpz_t __stady_gmp_51;
              __gmpz_init(__stady_gmp_51);
              __gmpz_sub(__stady_gmp_51, __stady_gmp_49, __stady_gmp_50);
              __gmpz_clear(__stady_gmp_49);
              __gmpz_clear(__stady_gmp_50);
              mpz_t __stady_gmp_52;
              __gmpz_init_set_si(__stady_gmp_52, j);
              mpz_t __stady_gmp_53;
              __gmpz_init(__stady_gmp_53);
              __gmpz_sub(__stady_gmp_53, __stady_gmp_51, __stady_gmp_52);
              __gmpz_clear(__stady_gmp_51);
              __gmpz_clear(__stady_gmp_52);
              if (__gmpz_cmp_ui(old_variant_7,0) < 0)pathcrawler_assert_exception("Variant non positive",7);
              if (__gmpz_cmp(__stady_gmp_53, old_variant_7) >= 0)pathcrawler_assert_exception("Variant non decreasing",7);__gmpz_clear(old_variant_7);
              }
               __gmpz_clear(__stady_gmp_15);
            }
             
          i ++;
        }mpz_t __stady_gmp_54;
        __gmpz_init_set_si(__stady_gmp_54, 0);
        mpz_t __stady_gmp_55;
        __gmpz_init_set_si(__stady_gmp_55, i);
        int __stady_pred_11 = __gmpz_cmp(__stady_gmp_54, __stady_gmp_55) <= 0;
        __gmpz_clear(__stady_gmp_54);
        __gmpz_clear(__stady_gmp_55);
        int __stady_pred_10 = __stady_pred_11;
        if (__stady_pred_10) {
        __stady_pred_10 = (i <= n);
        }
        if(!__stady_pred_10)pathcrawler_assert_exception("Loop invariant not preserved!", 3);
        mpz_t __stady_gmp_56;
        __gmpz_init_set_si(__stady_gmp_56, n);
        mpz_t __stady_gmp_57;
        __gmpz_init_set_si(__stady_gmp_57, i);
        mpz_t __stady_gmp_58;
        __gmpz_init(__stady_gmp_58);
        __gmpz_sub(__stady_gmp_58, __stady_gmp_56, __stady_gmp_57);
        __gmpz_clear(__stady_gmp_56);
        __gmpz_clear(__stady_gmp_57);
        if (__gmpz_cmp_ui(old_variant_10,0) < 0)pathcrawler_assert_exception("Variant non positive",10);
        if (__gmpz_cmp(__stady_gmp_58, old_variant_10) >= 0)pathcrawler_assert_exception("Variant non decreasing",10);__gmpz_clear(old_variant_10);
        }
         __gmpz_clear(__stady_gmp_3);
      }
       
    {
      int __stady_pred_12 = 1;
      {
      mpz_t __q_i;
      mpz_t __stady_gmp_59;
      __gmpz_init_set_si(__stady_gmp_59, 0);
      mpz_t __stady_gmp_60;
      __gmpz_init_set_si(__stady_gmp_60, old_n);
      mpz_t __stady_gmp_61;
      __gmpz_init_set_si(__stady_gmp_61, 1);
      mpz_t __stady_gmp_62;
      __gmpz_init(__stady_gmp_62);
      __gmpz_sub(__stady_gmp_62, __stady_gmp_60, __stady_gmp_61);
      __gmpz_clear(__stady_gmp_60);
      __gmpz_clear(__stady_gmp_61);
      __gmpz_init_set(__q_i, __stady_gmp_59);
      for (; __gmpz_cmp(__q_i, __stady_gmp_62) < 0 &&  __stady_pred_12;) {
      mpz_t __stady_gmp_63;
      __gmpz_init_set(__stady_gmp_63, __q_i);
      int __stady_term_4 = __gmpz_get_si(__stady_gmp_63);
      __gmpz_clear(__stady_gmp_63);
      mpz_t __stady_gmp_64;
      __gmpz_init_set(__stady_gmp_64, __q_i);
      mpz_t __stady_gmp_65;
      __gmpz_init_set_si(__stady_gmp_65, 1);
      mpz_t __stady_gmp_66;
      __gmpz_init(__stady_gmp_66);
      __gmpz_add(__stady_gmp_66, __stady_gmp_64, __stady_gmp_65);
      __gmpz_clear(__stady_gmp_64);
      __gmpz_clear(__stady_gmp_65);
      int __stady_term_5 = __gmpz_get_si(__stady_gmp_66);
      __gmpz_clear(__stady_gmp_66);
      __stady_pred_12 = (*(old_A + __stady_term_4) <= *(old_A + __stady_term_5));
      __gmpz_add_ui(__q_i, __q_i, 1);
      }
      __gmpz_clear(__q_i);
      __gmpz_clear(__stady_gmp_59);
      __gmpz_clear(__stady_gmp_62);
      }
      if(!__stady_pred_12)pathcrawler_assert_exception("Post-condition!", 9);
      
      }
    free(old_ptr_A);
    return;
  }
}


[kernel] preprocessing with "gcc -C -E -I.  stady_temp.c"
[kernel] preprocessing with "gcc -C -E -I. -include /usr/local/share/frama-c/pc/lib/lanceur_deb.h stady_temp.c"
[pc] analyzing...
[pc] Compiling pathcrawler_stady_temp/lanceur_bubble_sort utilities ...
[pc] Compiling pathcrawler_stady_temp/lanceur_bubble_sort ...
[pc] generating tests...
[pc] Starting lanceur_bubble_sort (isc version)
[pc] Starting lanceur_pathcrawler__bubble_sort_precond (isc version)
[pc] generation finished
[stady] all-paths: true
[stady] 625 test cases
[report] Computing properties status...

--------------------------------------------------------------------------------
--- Properties of Function 'bubble_sort'
--------------------------------------------------------------------------------

[  Valid  ] Post-condition (file tests/bubble_sort/bubble_sort.c, line 9)
            by StaDy.
[  Valid  ] Loop variant at loop (file tests/bubble_sort/bubble_sort.c, line 18)
            by StaDy.
[  Valid  ] Loop variant at loop (file tests/bubble_sort/bubble_sort.c, line 24)
            by StaDy.
[  Valid  ] Invariant (file tests/bubble_sort/bubble_sort.c, line 14)
            by StaDy.
[  Valid  ] Invariant (file tests/bubble_sort/bubble_sort.c, line 19)
            by StaDy.
[  Valid  ] Invariant (file tests/bubble_sort/bubble_sort.c, line 20)
            by StaDy.
[    -    ] Default behavior
            tried with Frama-C kernel.

--------------------------------------------------------------------------------
--- Status Report Summary
--------------------------------------------------------------------------------
     6 Completely validated
     1 To be validated
     7 Total
--------------------------------------------------------------------------------
