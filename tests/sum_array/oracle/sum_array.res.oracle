[kernel] Parsing FRAMAC_SHARE/libc/__fc_builtin_for_normalization.i (no preprocessing)
[kernel] Parsing tests/sum_array/sum_array.c (with preprocessing)
[rte] annotating function sum_array
[stady] warning: \valid_read(t+i) is interpreted as \valid(t+i)
[stady:generated-c] generated C file:
/* Generated by Frama-C */
struct __anonstruct___mpz_struct_1 {int _mp_alloc ;int _mp_size ;unsigned long *_mp_d ;};typedef struct __anonstruct___mpz_struct_1 __mpz_struct;typedef __mpz_struct mpz_t[1];
extern unsigned long int __gmpz_get_ui(mpz_t);
extern signed long int __gmpz_get_si(mpz_t);
extern int __gmpz_cmp_ui(mpz_t, unsigned long int);
extern int __gmpz_cmp(mpz_t, mpz_t);
extern void __gmpz_clear(mpz_t);
extern void __gmpz_init(mpz_t);
extern void __gmpz_init_set(mpz_t, mpz_t);
extern void __gmpz_init_set_si(mpz_t, signed long int);
extern void __gmpz_init_set_str(mpz_t, const char*, int);
extern void __gmpz_add(mpz_t, const mpz_t, const mpz_t);
extern void __gmpz_add_ui(mpz_t, const mpz_t, unsigned long int);
extern void __gmpz_sub(mpz_t, const mpz_t, const mpz_t);
extern int pathcrawler_assert_exception(char*,int);
extern int pathcrawler_dimension(void*);
extern void pathcrawler_to_framac(char*);
extern void* malloc(unsigned long);
extern void free(void*);
int sum_array_precond(int *t, int n)
{
  return 1;
}

int sum_array(int *t, int n)
{
  int *old_t;
  int *old_ptr_t;
  old_t = t;
  mpz_t __stady_gmp_8;
  __gmpz_init_set_si(__stady_gmp_8,n);
  unsigned long __stady_term_3;
  unsigned long __stady_term_4;
  __stady_term_4 = __gmpz_get_ui(__stady_gmp_8);
  old_ptr_t = (int *)malloc(__stady_term_4 * (unsigned long)sizeof(int));
  __stady_term_4 = __gmpz_get_ui(__stady_gmp_8);
  __stady_term_3 = 0;
  while(__stady_term_3 < __stady_term_4) {
    *(old_ptr_t + __stady_term_3) = *(t + __stady_term_3);
    __stady_term_3 ++;
  }
  __gmpz_clear(__stady_gmp_8);
  int old_n;
  old_n = n;
  {
    int i;
    int s;
    s = 0;
    i = 0;
    {
      mpz_t __stady_gmp_21;
      __gmpz_init_set_str(__stady_gmp_21,"0",10);
      mpz_t __stady_gmp_22;
      __gmpz_init_set_si(__stady_gmp_22,i);
      int __stady_term_9;
      __stady_term_9 = __gmpz_cmp(__stady_gmp_21,__stady_gmp_22);
      __gmpz_clear(__stady_gmp_21);
      __gmpz_clear(__stady_gmp_22);
      int __stady_pred_0;
      __stady_pred_0 = __stady_term_9 <= 0;
      if(__stady_pred_0) {
        __stady_pred_0 = i <= n;
      }
      if(! __stady_pred_0) {
        pathcrawler_assert_exception("Loop invariant not established!",2);
      }
      mpz_t __stady_gmp_25;
      __gmpz_init_set_si(__stady_gmp_25,s);
      mpz_t __stady_gmp_26;
      __gmpz_init_set_si(__stady_gmp_26,0);
      {
        mpz_t __stady_gmp_27;
        __gmpz_init_set_str(__stady_gmp_27,"0",10);
        mpz_t __stady_gmp_28;
        __gmpz_init_set_si(__stady_gmp_28,i);
        mpz_t __stady_gmp_29;
        __gmpz_init_set_str(__stady_gmp_29,"1",10);
        mpz_t __stady_gmp_30;
        __gmpz_init(__stady_gmp_30);
        __gmpz_sub(__stady_gmp_30,__stady_gmp_28,__stady_gmp_29);
        __gmpz_clear(__stady_gmp_28);
        __gmpz_clear(__stady_gmp_29);
        mpz_t k;
        __gmpz_init_set(k,__stady_gmp_27);
        int __stady_term_12;
        __stady_term_12 = __gmpz_cmp(k,__stady_gmp_30);
        while(__stady_term_12 <= 0) {
          mpz_t __stady_gmp_31;
          __gmpz_init_set(__stady_gmp_31,k);
          int __stady_term_11;
          __stady_term_11 = (int)__gmpz_get_si(__stady_gmp_31);
          __gmpz_clear(__stady_gmp_31);
          mpz_t __stady_gmp_32;
          __gmpz_init_set_si(__stady_gmp_32,*(t + __stady_term_11));
          __gmpz_add(__stady_gmp_26,__stady_gmp_26,__stady_gmp_32);
          __gmpz_add_ui(k,k,1);
          __stady_term_12 = __gmpz_cmp(k,__stady_gmp_30);
          __gmpz_clear(__stady_gmp_32);
        }
        __gmpz_clear(k);
        __gmpz_clear(__stady_gmp_27);
        __gmpz_clear(__stady_gmp_30);
      }
      int __stady_term_13;
      __stady_term_13 = __gmpz_cmp(__stady_gmp_25,__stady_gmp_26);
      __gmpz_clear(__stady_gmp_25);
      __gmpz_clear(__stady_gmp_26);
      if(! (__stady_term_13 == 0)) {
        pathcrawler_assert_exception("Loop invariant not established!",9);
      }
      mpz_t __stady_gmp_41;
      __gmpz_init_set_si(__stady_gmp_41,n);
      mpz_t __stady_gmp_42;
      __gmpz_init_set_si(__stady_gmp_42,i);
      mpz_t __stady_gmp_43;
      __gmpz_init(__stady_gmp_43);
      __gmpz_sub(__stady_gmp_43,__stady_gmp_41,__stady_gmp_42);
      __gmpz_clear(__stady_gmp_41);
      __gmpz_clear(__stady_gmp_42);
      int __stady_term_17;
      __stady_term_17 = __gmpz_cmp_ui(__stady_gmp_43,0);
      if(__stady_term_17 < 0) {
        pathcrawler_assert_exception("Variant non positive",0);
      }
      while (1) {
        mpz_t __stady_gmp_44;
        __gmpz_init_set_si(__stady_gmp_44,n);
        mpz_t __stady_gmp_45;
        __gmpz_init_set_si(__stady_gmp_45,i);
        mpz_t __stady_gmp_46;
        __gmpz_init(__stady_gmp_46);
        __gmpz_sub(__stady_gmp_46,__stady_gmp_44,__stady_gmp_45);
        __gmpz_clear(__stady_gmp_44);
        __gmpz_clear(__stady_gmp_45);
        mpz_t __stady_gmp_47;
        __gmpz_init_set(__stady_gmp_47,__stady_gmp_46);
        {
          if (! (i < n)) {
                           pathcrawler_to_framac("@FC:REACHABLE_STMT:6");
                           break;
                         }
          {
            mpz_t __stady_gmp_9;
            __gmpz_init_set_str(__stady_gmp_9,"-2147483648",10);
            mpz_t __stady_gmp_10;
            __gmpz_init(__stady_gmp_10);
            mpz_t __stady_gmp_11;
            mpz_t __stady_gmp_12;
            __gmpz_init_set_si(__stady_gmp_11,s);
            __gmpz_init_set_si(__stady_gmp_12,*(t + i));
            __gmpz_add(__stady_gmp_10,__stady_gmp_11,__stady_gmp_12);
            __gmpz_clear(__stady_gmp_11);
            __gmpz_clear(__stady_gmp_12);
            int __stady_term_5;
            __stady_term_5 = __gmpz_cmp(__stady_gmp_9,__stady_gmp_10);
            __gmpz_clear(__stady_gmp_9);
            __gmpz_clear(__stady_gmp_10);
            if(! (__stady_term_5 <= 0)) {
              pathcrawler_assert_exception("Assert!",4);
            }
            mpz_t __stady_gmp_13;
            __gmpz_init(__stady_gmp_13);
            mpz_t __stady_gmp_14;
            mpz_t __stady_gmp_15;
            __gmpz_init_set_si(__stady_gmp_14,s);
            __gmpz_init_set_si(__stady_gmp_15,*(t + i));
            __gmpz_add(__stady_gmp_13,__stady_gmp_14,__stady_gmp_15);
            __gmpz_clear(__stady_gmp_14);
            __gmpz_clear(__stady_gmp_15);
            mpz_t __stady_gmp_16;
            __gmpz_init_set_str(__stady_gmp_16,"2147483647",10);
            int __stady_term_6;
            __stady_term_6 = __gmpz_cmp(__stady_gmp_13,__stady_gmp_16);
            __gmpz_clear(__stady_gmp_13);
            __gmpz_clear(__stady_gmp_16);
            if(! (__stady_term_6 <= 0)) {
              pathcrawler_assert_exception("Assert!",5);
            }
            int __stady_term_7;
            __stady_term_7 = pathcrawler_dimension(t);
            if(! (i >= 0 && __stady_term_7 > i)) {
              pathcrawler_assert_exception("Assert!",6);
            }
            s += *(t + i);
          }
          {
            mpz_t __stady_gmp_17;
            __gmpz_init(__stady_gmp_17);
            mpz_t __stady_gmp_18;
            mpz_t __stady_gmp_19;
            __gmpz_init_set_si(__stady_gmp_18,i);
            __gmpz_init_set_si(__stady_gmp_19,1);
            __gmpz_add(__stady_gmp_17,__stady_gmp_18,__stady_gmp_19);
            __gmpz_clear(__stady_gmp_18);
            __gmpz_clear(__stady_gmp_19);
            mpz_t __stady_gmp_20;
            __gmpz_init_set_str(__stady_gmp_20,"2147483647",10);
            int __stady_term_8;
            __stady_term_8 = __gmpz_cmp(__stady_gmp_17,__stady_gmp_20);
            __gmpz_clear(__stady_gmp_17);
            __gmpz_clear(__stady_gmp_20);
            if(! (__stady_term_8 <= 0)) {
              pathcrawler_assert_exception("Assert!",3);
            }
            i ++;
          }
        }mpz_t __stady_gmp_23;
        __gmpz_init_set_str(__stady_gmp_23,"0",10);
        mpz_t __stady_gmp_24;
        __gmpz_init_set_si(__stady_gmp_24,i);
        int __stady_term_10;
        __stady_term_10 = __gmpz_cmp(__stady_gmp_23,__stady_gmp_24);
        __gmpz_clear(__stady_gmp_23);
        __gmpz_clear(__stady_gmp_24);
        int __stady_pred_1;
        __stady_pred_1 = __stady_term_10 <= 0;
        if(__stady_pred_1) {
          __stady_pred_1 = i <= n;
        }
        if(! __stady_pred_1) {
          pathcrawler_assert_exception("Loop invariant not preserved!",2);
        }
        mpz_t __stady_gmp_33;
        __gmpz_init_set_si(__stady_gmp_33,s);
        mpz_t __stady_gmp_34;
        __gmpz_init_set_si(__stady_gmp_34,0);
        {
          mpz_t __stady_gmp_35;
          __gmpz_init_set_str(__stady_gmp_35,"0",10);
          mpz_t __stady_gmp_36;
          __gmpz_init_set_si(__stady_gmp_36,i);
          mpz_t __stady_gmp_37;
          __gmpz_init_set_str(__stady_gmp_37,"1",10);
          mpz_t __stady_gmp_38;
          __gmpz_init(__stady_gmp_38);
          __gmpz_sub(__stady_gmp_38,__stady_gmp_36,__stady_gmp_37);
          __gmpz_clear(__stady_gmp_36);
          __gmpz_clear(__stady_gmp_37);
          mpz_t k;
          __gmpz_init_set(k,__stady_gmp_35);
          int __stady_term_15;
          __stady_term_15 = __gmpz_cmp(k,__stady_gmp_38);
          while(__stady_term_15 <= 0) {
            mpz_t __stady_gmp_39;
            __gmpz_init_set(__stady_gmp_39,k);
            int __stady_term_14;
            __stady_term_14 = (int)__gmpz_get_si(__stady_gmp_39);
            __gmpz_clear(__stady_gmp_39);
            mpz_t __stady_gmp_40;
            __gmpz_init_set_si(__stady_gmp_40,*(t + __stady_term_14));
            __gmpz_add(__stady_gmp_34,__stady_gmp_34,__stady_gmp_40);
            __gmpz_add_ui(k,k,1);
            __stady_term_15 = __gmpz_cmp(k,__stady_gmp_38);
            __gmpz_clear(__stady_gmp_40);
          }
          __gmpz_clear(k);
          __gmpz_clear(__stady_gmp_35);
          __gmpz_clear(__stady_gmp_38);
        }
        int __stady_term_16;
        __stady_term_16 = __gmpz_cmp(__stady_gmp_33,__stady_gmp_34);
        __gmpz_clear(__stady_gmp_33);
        __gmpz_clear(__stady_gmp_34);
        if(! (__stady_term_16 == 0)) {
          pathcrawler_assert_exception("Loop invariant not preserved!",9);
        }
        mpz_t __stady_gmp_48;
        __gmpz_init_set_si(__stady_gmp_48,n);
        mpz_t __stady_gmp_49;
        __gmpz_init_set_si(__stady_gmp_49,i);
        mpz_t __stady_gmp_50;
        __gmpz_init(__stady_gmp_50);
        __gmpz_sub(__stady_gmp_50,__stady_gmp_48,__stady_gmp_49);
        __gmpz_clear(__stady_gmp_48);
        __gmpz_clear(__stady_gmp_49);
        __stady_term_17 = __gmpz_cmp_ui(__stady_gmp_47,0);
        if(__stady_term_17 < 0) {
          pathcrawler_assert_exception("Variant non positive",0);
        }
        __stady_term_17 = __gmpz_cmp(__stady_gmp_50,__stady_gmp_47);
        if(__stady_term_17 >= 0) {
          pathcrawler_assert_exception("Variant non decreasing",0);
        }
        __gmpz_clear(__stady_gmp_47);
        }
         __gmpz_clear(__stady_gmp_43);
      
    }
    {
      mpz_t __stady_gmp_0;
      __gmpz_init_set_si(__stady_gmp_0,s);
      mpz_t __stady_gmp_1;
      __gmpz_init_set_si(__stady_gmp_1,0);
      {
        mpz_t __stady_gmp_2;
        __gmpz_init_set_str(__stady_gmp_2,"0",10);
        mpz_t __stady_gmp_3;
        __gmpz_init_set_si(__stady_gmp_3,old_n);
        mpz_t __stady_gmp_4;
        __gmpz_init_set_str(__stady_gmp_4,"1",10);
        mpz_t __stady_gmp_5;
        __gmpz_init(__stady_gmp_5);
        __gmpz_sub(__stady_gmp_5,__stady_gmp_3,__stady_gmp_4);
        __gmpz_clear(__stady_gmp_3);
        __gmpz_clear(__stady_gmp_4);
        mpz_t k;
        __gmpz_init_set(k,__stady_gmp_2);
        int __stady_term_1;
        __stady_term_1 = __gmpz_cmp(k,__stady_gmp_5);
        while(__stady_term_1 <= 0) {
          mpz_t __stady_gmp_6;
          __gmpz_init_set(__stady_gmp_6,k);
          int __stady_term_0;
          __stady_term_0 = (int)__gmpz_get_si(__stady_gmp_6);
          __gmpz_clear(__stady_gmp_6);
          mpz_t __stady_gmp_7;
          __gmpz_init_set_si(__stady_gmp_7,*(old_t + __stady_term_0));
          __gmpz_add(__stady_gmp_1,__stady_gmp_1,__stady_gmp_7);
          __gmpz_add_ui(k,k,1);
          __stady_term_1 = __gmpz_cmp(k,__stady_gmp_5);
          __gmpz_clear(__stady_gmp_7);
        }
        __gmpz_clear(k);
        __gmpz_clear(__stady_gmp_2);
        __gmpz_clear(__stady_gmp_5);
      }
      int __stady_term_2;
      __stady_term_2 = __gmpz_cmp(__stady_gmp_0,__stady_gmp_1);
      __gmpz_clear(__stady_gmp_0);
      __gmpz_clear(__stady_gmp_1);
      if(! (__stady_term_2 == 0)) {
        pathcrawler_assert_exception("Post-condition!",7);
      }
    }
    free(old_ptr_t);
    return s;
  }
}


[kernel] Parsing FRAMAC_SHARE/libc/__fc_builtin_for_normalization.i (no preprocessing)
[kernel] Parsing __sd_instru_sum_array_sum_array.c (with preprocessing)
[kernel] Parsing FRAMAC_SHARE/libc/__fc_builtin_for_normalization.i (no preprocessing)
[kernel] Parsing __sd_instru_sum_array_sum_array.c (with preprocessing)
[pc] analyzing...
[pc] Compiling pathcrawler___sd_instru_sum_array_sum_array/lanceur_sum_array utilities ...
[pc] Compiling pathcrawler___sd_instru_sum_array_sum_array/lanceur_sum_array ...
[pc] generating tests...
[pc] Starting lanceur_sum_array (isc version)
[pc] Starting lanceur_pathcrawler__sum_array_precond (isc version)
[pc] Starting lanceur_sum_array (isc version)
[pc] Starting lanceur_sum_array (isc version)
[pc] Starting lanceur_sum_array (isc version)
[pc] Starting lanceur_sum_array (isc version)
[pc] Starting lanceur_sum_array (isc version)
[pc] Starting lanceur_sum_array (isc version)
[pc] generation finished
[stady] all-paths: false
[stady] 135 test cases
[stady]  Counter-example for assert rte: signed_overflow: -2147483648 ≤ s+*(t+i);
[stady]  testcases___sd_instru_sum_array_sum_array/sum_array/testdrivers/TC_4.c
[stady]           variable|            input|  concrete output|  symbolic output
[stady]                  n|                2|                 |
[stady]               t[0]|      -1740127965|                 |
[stady]               t[1]|      -1251359816|                 |
[stady]  Counter-example for assert rte: signed_overflow: -2147483648 ≤ s+*(t+i);
[stady]  testcases___sd_instru_sum_array_sum_array/sum_array/testdrivers/TC_7.c
[stady]           variable|            input|  concrete output|  symbolic output
[stady]                  n|                3|                 |
[stady]               t[0]|                0|                 |
[stady]               t[1]|       -897154901|                 |
[stady]               t[2]|      -1421176958|                 |
[stady]  Counter-example for assert rte: signed_overflow: -2147483648 ≤ s+*(t+i);
[stady]  testcases___sd_instru_sum_array_sum_array/sum_array/testdrivers/TC_9.c
[stady]           variable|            input|  concrete output|  symbolic output
[stady]                  n|                3|                 |
[stady]               t[0]|        -10555854|                 |
[stady]               t[1]|      -2139817863|                 |
[stady]               t[2]|           200408|                 |
[stady]  Counter-example for assert rte: signed_overflow: s+*(t+i) ≤ 2147483647;
[stady]  testcases___sd_instru_sum_array_sum_array/sum_array/testdrivers/TC_3.c
[stady]           variable|            input|  concrete output|  symbolic output
[stady]                  n|                2|                 |
[stady]               t[0]|       1914720638|                 |
[stady]               t[1]|       2086127769|                 |
[stady]  Counter-example for assert rte: signed_overflow: s+*(t+i) ≤ 2147483647;
[stady]  testcases___sd_instru_sum_array_sum_array/sum_array/testdrivers/TC_6.c
[stady]           variable|            input|  concrete output|  symbolic output
[stady]                  n|                3|                 |
[stady]               t[0]|                0|                 |
[stady]               t[1]|        192302372|                 |
[stady]               t[2]|       2062945588|                 |
[stady]  Counter-example for assert rte: signed_overflow: s+*(t+i) ≤ 2147483647;
[stady]  testcases___sd_instru_sum_array_sum_array/sum_array/testdrivers/TC_8.c
[stady]           variable|            input|  concrete output|  symbolic output
[stady]                  n|                3|                 |
[stady]               t[0]|       1271135914|                 |
[stady]               t[1]|       1526803937|                 |
[stady]               t[2]|           161763|                 |
[report] Computing properties status...

--------------------------------------------------------------------------------
--- Properties of Function 'sum_array'
--------------------------------------------------------------------------------

[   Bug   ] Assertion 'rte,signed_overflow' (file tests/sum_array/sum_array.c, line 17)
            by StaDy.
[   Bug   ] Assertion 'rte,signed_overflow' (file tests/sum_array/sum_array.c, line 17)
            by StaDy.

--------------------------------------------------------------------------------
--- Status Report Summary
--------------------------------------------------------------------------------
     2 Bugs found
     2 Total
--------------------------------------------------------------------------------
