[kernel] preprocessing with "gcc -C -E -I.  tests/sum_array/sum_array.c"
[stady:generated-c] generated C file:
/* Generated by Frama-C */
extern int pathcrawler_assert_exception(char*,int);
extern int pathcrawler_dimension(void*);
extern void pathcrawler_to_framac(char*);
int sum_array_precond(double *t, int n)
{
return 1;
}

double sum_array(double *t, int n)
{
  double *old_t = t;
  double *old_ptr_t;
  old_ptr_t = malloc((((n - 1) + 1))*sizeof(double));
  int __stady_iter_0;
  for (__stady_iter_0 = 0; __stady_iter_0 < ((n - 1) + 1); __stady_iter_0++) {
  old_ptr_t[__stady_iter_0] = t[__stady_iter_0];
  }
  int old_n = n;
  {
    int i;
    double s;
    s = (double)0;
    i = 0;
    {
      if (((n - i)) < 0)pathcrawler_assert_exception("Variant non positive",2);double __stady_term_0 = 0;
      {
      int k;
      for(k=0; k <= (i - 1); k++) {
      __stady_term_0 += *(t + k);
      }
      }
      if(!(s == __stady_term_0))pathcrawler_assert_exception("Loop invariant not established!", 3);
      int __stady_pred_1 = (0 <= i);
      if (__stady_pred_1) {
      __stady_pred_1 = (i <= n);
      }
      if(!__stady_pred_1)pathcrawler_assert_exception("Loop invariant not established!", 1);
      while (1) {
        int old_variant_2 = (n - i);
        {
          if (! (i < n)) { pathcrawler_to_framac("@FC:REACHABLE_STMT:6");
                         break; }
                         
          s += *(t + i);
          i ++;
        }int __stady_pred_2 = (0 <= i);
        if (__stady_pred_2) {
        __stady_pred_2 = (i <= n);
        }
        if(!__stady_pred_2)pathcrawler_assert_exception("Loop invariant not preserved!", 1);
        double __stady_term_3 = 0;
        {
        int k;
        for(k=0; k <= (i - 1); k++) {
        __stady_term_3 += *(t + k);
        }
        }
        if(!(s == __stady_term_3))pathcrawler_assert_exception("Loop invariant not preserved!", 3);
        if ((old_variant_2) < 0)pathcrawler_assert_exception("Variant non positive",2);
        if (((n - i)) >= old_variant_2)pathcrawler_assert_exception("Variant non decreasing",2);}
         }
       
    {
      double __stady_term_4 = 0;
      {
      int k;
      for(k=0; k <= (old_n - 1); k++) {
      __stady_term_4 += *(old_t + k);
      }
      }
      if(!(s == __stady_term_4))pathcrawler_assert_exception("Post-condition!", 4);
      
      }
    free(old_ptr_t);
    return s;
  }
}


[kernel] preprocessing with "gcc -C -E -I.  stady_temp.c"
stady_temp.c:14:[kernel] warning: Calling undeclared function malloc. Old style K&R code?
stady_temp.c:75:[kernel] warning: Calling undeclared function free. Old style K&R code?
[kernel] preprocessing with "gcc -C -E -I. -include /usr/local/share/frama-c/pc/lib/lanceur_deb.h stady_temp.c"
stady_temp.c:14:[kernel] warning: Calling undeclared function malloc. Old style K&R code?
stady_temp.c:75:[kernel] warning: Calling undeclared function free. Old style K&R code?
[pc] analyzing...
[pc] Compiling pathcrawler_stady_temp/lanceur_sum_array utilities ...
[pc] Compiling pathcrawler_stady_temp/lanceur_sum_array ...
[pc] generating tests...
[pc] Starting lanceur_sum_array (isc version)
[pc] Starting lanceur_pathcrawler__sum_array_precond (isc version)
[pc] generation finished
[stady] all-paths: true
[stady] 105 test cases
[report] Computing properties status...

--------------------------------------------------------------------------------
--- Properties of Function 'sum_array'
--------------------------------------------------------------------------------

[ Partial ] Post-condition (file tests/sum_array/sum_array.c, line 8)
            By StaDy, with pending:
             - Pre-condition (file tests/sum_array/sum_array.c, line 7)
[    -    ] Pre-condition (file tests/sum_array/sum_array.c, line 7)
[ Partial ] Loop variant at loop (file tests/sum_array/sum_array.c, line 17)
            By StaDy, with pending:
             - Pre-condition (file tests/sum_array/sum_array.c, line 7)
[ Partial ] Invariant (file tests/sum_array/sum_array.c, line 13)
            By StaDy, with pending:
             - Pre-condition (file tests/sum_array/sum_array.c, line 7)
[ Partial ] Invariant (file tests/sum_array/sum_array.c, line 14)
            By StaDy, with pending:
             - Pre-condition (file tests/sum_array/sum_array.c, line 7)
[ Partial ] Default behavior
            By Frama-C kernel, with pending:
             - Pre-condition (file tests/sum_array/sum_array.c, line 7)

--------------------------------------------------------------------------------
--- Status Report Summary
--------------------------------------------------------------------------------
     5 Locally validated
     1 To be validated
     6 Total
--------------------------------------------------------------------------------
