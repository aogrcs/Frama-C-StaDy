[kernel] Parsing FRAMAC_SHARE/libc/__fc_builtin_for_normalization.i (no preprocessing)
[kernel] Parsing tests/sum_array/sum_array.c (with preprocessing)
[rte] annotating function sum_array
tests/sum_array/sum_array.c:17:[stady] warning: \valid_read(t+i) is interpreted as \valid(t+i)
[stady:generated-c] generated C file:
/* Generated by Frama-C */
#include "/usr/local/share/frama-c/stady/externals.h"
int sum_array_precond(int *t, int n)
{
  return 1;
}

/*@ requires n >= 0 && \valid(t+(0 .. n-1));
    ensures \result == \sum(0, \old(n)-1, \lambda integer k; *(\old(t)+k));
    typically n <= 3;
 */
int sum_array(int *t, int n)
{
  int *old_t;
  int *old_ptr_t;
  old_t = t;
  mpz_t __sd_Z_to_Z_3;
  __gmpz_init_set_si(__sd_Z_to_Z_3,n);
  unsigned long __sd_to_ctype_1;
  __sd_to_ctype_1 = __gmpz_get_ui(__sd_Z_to_Z_3);
  __gmpz_clear(__sd_Z_to_Z_3);
  unsigned long __sd_iter_0;
  old_ptr_t = (int *)malloc(__sd_to_ctype_1 * (unsigned long)sizeof(int));
  __sd_iter_0 = 0;
  while(__sd_iter_0 < __sd_to_ctype_1) {
    *(old_ptr_t + __sd_iter_0) = *(t + __sd_iter_0);
    __sd_iter_0 ++;
  }
  int old_n;
  old_n = n;
  {
    int i;
    int s;
    s = 0;
    i = 0;
    {
      mpz_t __sd_Z_cst_5;
      __gmpz_init_set_str(__sd_Z_cst_5,"0",10);
      mpz_t __sd_Z_to_Z_10;
      __gmpz_init_set_si(__sd_Z_to_Z_10,i);
      int __sd_le_3;
      __sd_le_3 = __gmpz_cmp(__sd_Z_cst_5,__sd_Z_to_Z_10);
      __gmpz_clear(__sd_Z_cst_5);
      __gmpz_clear(__sd_Z_to_Z_10);
      int __sd_and_0;
      __sd_and_0 = __sd_le_3 <= 0;
      if(__sd_and_0) {
        __sd_and_0 = i <= n;
      }
      if(! __sd_and_0) {
        pathcrawler_assert_exception("not established",2);
      }
      mpz_t __sd_Z_to_Z_12;
      __gmpz_init_set_si(__sd_Z_to_Z_12,s);
      mpz_t __sd_Z_sum_1;
      __gmpz_init_set_si(__sd_Z_sum_1,0);
      {
        mpz_t __sd_Z_cst_7;
        __gmpz_init_set_str(__sd_Z_cst_7,"0",10);
        mpz_t __sd_Z_to_Z_13;
        __gmpz_init_set_si(__sd_Z_to_Z_13,i);
        mpz_t __sd_Z_cst_8;
        __gmpz_init_set_str(__sd_Z_cst_8,"1",10);
        mpz_t __sd_Z_sub_1;
        __gmpz_init(__sd_Z_sub_1);
        __gmpz_sub(__sd_Z_sub_1,__sd_Z_to_Z_13,__sd_Z_cst_8);
        __gmpz_clear(__sd_Z_to_Z_13);
        __gmpz_clear(__sd_Z_cst_8);
        mpz_t k;
        __gmpz_init_set(k,__sd_Z_cst_7);
        int __sd_sum_cmp_1;
        __sd_sum_cmp_1 = __gmpz_cmp(k,__sd_Z_sub_1);
        while(__sd_sum_cmp_1 <= 0) {
          mpz_t __sd_Z_lval_1;
          __gmpz_init_set(__sd_Z_lval_1,k);
          int __sd_to_ctype_2;
          __sd_to_ctype_2 = (int)__gmpz_get_si(__sd_Z_lval_1);
          __gmpz_clear(__sd_Z_lval_1);
          mpz_t __sd_Z_to_Z_14;
          __gmpz_init_set_si(__sd_Z_to_Z_14,*(t + __sd_to_ctype_2));
          __gmpz_add(__sd_Z_sum_1,__sd_Z_sum_1,__sd_Z_to_Z_14);
          __gmpz_add_ui(k,k,1);
          __sd_sum_cmp_1 = __gmpz_cmp(k,__sd_Z_sub_1);
          __gmpz_clear(__sd_Z_to_Z_14);
        }
        __gmpz_clear(k);
        __gmpz_clear(__sd_Z_cst_7);
        __gmpz_clear(__sd_Z_sub_1);
      }
      int __sd_eq_1;
      __sd_eq_1 = __gmpz_cmp(__sd_Z_to_Z_12,__sd_Z_sum_1);
      __gmpz_clear(__sd_Z_to_Z_12);
      __gmpz_clear(__sd_Z_sum_1);
      if(! (__sd_eq_1 == 0)) {
        pathcrawler_assert_exception("not established",9);
      }
      while (1) {
        if (! (i < n)) break;mpz_t __sd_Z_to_Z_18;
        __gmpz_init_set_si(__sd_Z_to_Z_18,n);
        mpz_t __sd_Z_to_Z_19;
        __gmpz_init_set_si(__sd_Z_to_Z_19,i);
        mpz_t __sd_Z_sub_3;
        __gmpz_init(__sd_Z_sub_3);
        __gmpz_sub(__sd_Z_sub_3,__sd_Z_to_Z_18,__sd_Z_to_Z_19);
        __gmpz_clear(__sd_Z_to_Z_18);
        __gmpz_clear(__sd_Z_to_Z_19);
        int __sd_variant_pos_0;
        __sd_variant_pos_0 = __gmpz_cmp_ui(__sd_Z_sub_3,0);
        if(__sd_variant_pos_0 < 0) {
          pathcrawler_assert_exception("non positive",0);
        }
        mpz_t __sd_Z_variant_save_0;
        __gmpz_init_set(__sd_Z_variant_save_0,__sd_Z_sub_3);
        {
          mpz_t __sd_Z_cst_2;
          __gmpz_init_set_str(__sd_Z_cst_2,"-2147483648",10);
          mpz_t __sd_Z_to_Z_4;
          __gmpz_init_set_si(__sd_Z_to_Z_4,s);
          mpz_t __sd_Z_to_Z_5;
          __gmpz_init_set_si(__sd_Z_to_Z_5,*(t + i));
          mpz_t __sd_Z_add_0;
          __gmpz_init(__sd_Z_add_0);
          __gmpz_add(__sd_Z_add_0,__sd_Z_to_Z_4,__sd_Z_to_Z_5);
          __gmpz_clear(__sd_Z_to_Z_4);
          __gmpz_clear(__sd_Z_to_Z_5);
          int __sd_le_0;
          __sd_le_0 = __gmpz_cmp(__sd_Z_cst_2,__sd_Z_add_0);
          __gmpz_clear(__sd_Z_cst_2);
          __gmpz_clear(__sd_Z_add_0);
          if(! (__sd_le_0 <= 0)) {
            pathcrawler_assert_exception("",4);
          }
          mpz_t __sd_Z_to_Z_6;
          __gmpz_init_set_si(__sd_Z_to_Z_6,s);
          mpz_t __sd_Z_to_Z_7;
          __gmpz_init_set_si(__sd_Z_to_Z_7,*(t + i));
          mpz_t __sd_Z_add_1;
          __gmpz_init(__sd_Z_add_1);
          __gmpz_add(__sd_Z_add_1,__sd_Z_to_Z_6,__sd_Z_to_Z_7);
          __gmpz_clear(__sd_Z_to_Z_6);
          __gmpz_clear(__sd_Z_to_Z_7);
          mpz_t __sd_Z_cst_3;
          __gmpz_init_set_str(__sd_Z_cst_3,"2147483647",10);
          int __sd_le_1;
          __sd_le_1 = __gmpz_cmp(__sd_Z_add_1,__sd_Z_cst_3);
          __gmpz_clear(__sd_Z_add_1);
          __gmpz_clear(__sd_Z_cst_3);
          if(! (__sd_le_1 <= 0)) {
            pathcrawler_assert_exception("",5);
          }
          int __sd_valid_0;
          int __sd_valid_dim_0;
          __sd_valid_dim_0 = pathcrawler_dimension(t);
          __sd_valid_0 = i >= 0 && __sd_valid_dim_0 > i;
          if(! __sd_valid_0) {
            pathcrawler_assert_exception("",6);
          }
          s += *(t + i);
        }
        {
          mpz_t __sd_Z_to_Z_8;
          __gmpz_init_set_si(__sd_Z_to_Z_8,i);
          mpz_t __sd_Z_to_Z_9;
          __gmpz_init_set_si(__sd_Z_to_Z_9,1);
          mpz_t __sd_Z_add_2;
          __gmpz_init(__sd_Z_add_2);
          __gmpz_add(__sd_Z_add_2,__sd_Z_to_Z_8,__sd_Z_to_Z_9);
          __gmpz_clear(__sd_Z_to_Z_8);
          __gmpz_clear(__sd_Z_to_Z_9);
          mpz_t __sd_Z_cst_4;
          __gmpz_init_set_str(__sd_Z_cst_4,"2147483647",10);
          int __sd_le_2;
          __sd_le_2 = __gmpz_cmp(__sd_Z_add_2,__sd_Z_cst_4);
          __gmpz_clear(__sd_Z_add_2);
          __gmpz_clear(__sd_Z_cst_4);
          if(! (__sd_le_2 <= 0)) {
            pathcrawler_assert_exception("",3);
          }
          i ++;
        }mpz_t __sd_Z_cst_6;
        __gmpz_init_set_str(__sd_Z_cst_6,"0",10);
        mpz_t __sd_Z_to_Z_11;
        __gmpz_init_set_si(__sd_Z_to_Z_11,i);
        int __sd_le_4;
        __sd_le_4 = __gmpz_cmp(__sd_Z_cst_6,__sd_Z_to_Z_11);
        __gmpz_clear(__sd_Z_cst_6);
        __gmpz_clear(__sd_Z_to_Z_11);
        int __sd_and_1;
        __sd_and_1 = __sd_le_4 <= 0;
        if(__sd_and_1) {
          __sd_and_1 = i <= n;
        }
        if(! __sd_and_1) {
          pathcrawler_assert_exception("not preserved",2);
        }
        mpz_t __sd_Z_to_Z_15;
        __gmpz_init_set_si(__sd_Z_to_Z_15,s);
        mpz_t __sd_Z_sum_2;
        __gmpz_init_set_si(__sd_Z_sum_2,0);
        {
          mpz_t __sd_Z_cst_9;
          __gmpz_init_set_str(__sd_Z_cst_9,"0",10);
          mpz_t __sd_Z_to_Z_16;
          __gmpz_init_set_si(__sd_Z_to_Z_16,i);
          mpz_t __sd_Z_cst_10;
          __gmpz_init_set_str(__sd_Z_cst_10,"1",10);
          mpz_t __sd_Z_sub_2;
          __gmpz_init(__sd_Z_sub_2);
          __gmpz_sub(__sd_Z_sub_2,__sd_Z_to_Z_16,__sd_Z_cst_10);
          __gmpz_clear(__sd_Z_to_Z_16);
          __gmpz_clear(__sd_Z_cst_10);
          mpz_t k;
          __gmpz_init_set(k,__sd_Z_cst_9);
          int __sd_sum_cmp_2;
          __sd_sum_cmp_2 = __gmpz_cmp(k,__sd_Z_sub_2);
          while(__sd_sum_cmp_2 <= 0) {
            mpz_t __sd_Z_lval_2;
            __gmpz_init_set(__sd_Z_lval_2,k);
            int __sd_to_ctype_3;
            __sd_to_ctype_3 = (int)__gmpz_get_si(__sd_Z_lval_2);
            __gmpz_clear(__sd_Z_lval_2);
            mpz_t __sd_Z_to_Z_17;
            __gmpz_init_set_si(__sd_Z_to_Z_17,*(t + __sd_to_ctype_3));
            __gmpz_add(__sd_Z_sum_2,__sd_Z_sum_2,__sd_Z_to_Z_17);
            __gmpz_add_ui(k,k,1);
            __sd_sum_cmp_2 = __gmpz_cmp(k,__sd_Z_sub_2);
            __gmpz_clear(__sd_Z_to_Z_17);
          }
          __gmpz_clear(k);
          __gmpz_clear(__sd_Z_cst_9);
          __gmpz_clear(__sd_Z_sub_2);
        }
        int __sd_eq_2;
        __sd_eq_2 = __gmpz_cmp(__sd_Z_to_Z_15,__sd_Z_sum_2);
        __gmpz_clear(__sd_Z_to_Z_15);
        __gmpz_clear(__sd_Z_sum_2);
        if(! (__sd_eq_2 == 0)) {
          pathcrawler_assert_exception("not preserved",9);
        }
        mpz_t __sd_Z_to_Z_20;
        __gmpz_init_set_si(__sd_Z_to_Z_20,n);
        mpz_t __sd_Z_to_Z_21;
        __gmpz_init_set_si(__sd_Z_to_Z_21,i);
        mpz_t __sd_Z_sub_4;
        __gmpz_init(__sd_Z_sub_4);
        __gmpz_sub(__sd_Z_sub_4,__sd_Z_to_Z_20,__sd_Z_to_Z_21);
        __gmpz_clear(__sd_Z_to_Z_20);
        __gmpz_clear(__sd_Z_to_Z_21);
        int __sd_variant_decr_0;
        __sd_variant_decr_0 = __gmpz_cmp(__sd_Z_sub_4,__sd_Z_variant_save_0);
        if(__sd_variant_decr_0 >= 0) {
          pathcrawler_assert_exception("non decreasing",0);
        }
        __gmpz_clear(__sd_Z_variant_save_0);
        }
         
    }
    {
      mpz_t __sd_Z_to_Z_0;
      __gmpz_init_set_si(__sd_Z_to_Z_0,s);
      mpz_t __sd_Z_sum_0;
      __gmpz_init_set_si(__sd_Z_sum_0,0);
      {
        mpz_t __sd_Z_cst_0;
        __gmpz_init_set_str(__sd_Z_cst_0,"0",10);
        mpz_t __sd_Z_to_Z_1;
        __gmpz_init_set_si(__sd_Z_to_Z_1,old_n);
        mpz_t __sd_Z_cst_1;
        __gmpz_init_set_str(__sd_Z_cst_1,"1",10);
        mpz_t __sd_Z_sub_0;
        __gmpz_init(__sd_Z_sub_0);
        __gmpz_sub(__sd_Z_sub_0,__sd_Z_to_Z_1,__sd_Z_cst_1);
        __gmpz_clear(__sd_Z_to_Z_1);
        __gmpz_clear(__sd_Z_cst_1);
        mpz_t k;
        __gmpz_init_set(k,__sd_Z_cst_0);
        int __sd_sum_cmp_0;
        __sd_sum_cmp_0 = __gmpz_cmp(k,__sd_Z_sub_0);
        while(__sd_sum_cmp_0 <= 0) {
          mpz_t __sd_Z_lval_0;
          __gmpz_init_set(__sd_Z_lval_0,k);
          int __sd_to_ctype_0;
          __sd_to_ctype_0 = (int)__gmpz_get_si(__sd_Z_lval_0);
          __gmpz_clear(__sd_Z_lval_0);
          mpz_t __sd_Z_to_Z_2;
          __gmpz_init_set_si(__sd_Z_to_Z_2,*(old_t + __sd_to_ctype_0));
          __gmpz_add(__sd_Z_sum_0,__sd_Z_sum_0,__sd_Z_to_Z_2);
          __gmpz_add_ui(k,k,1);
          __sd_sum_cmp_0 = __gmpz_cmp(k,__sd_Z_sub_0);
          __gmpz_clear(__sd_Z_to_Z_2);
        }
        __gmpz_clear(k);
        __gmpz_clear(__sd_Z_cst_0);
        __gmpz_clear(__sd_Z_sub_0);
      }
      int __sd_eq_0;
      __sd_eq_0 = __gmpz_cmp(__sd_Z_to_Z_0,__sd_Z_sum_0);
      __gmpz_clear(__sd_Z_to_Z_0);
      __gmpz_clear(__sd_Z_sum_0);
      if(! (__sd_eq_0 == 0)) {
        pathcrawler_assert_exception("",7);
      }
    }
    free(old_ptr_t);
    return s;
  }
}


[kernel] Parsing FRAMAC_SHARE/libc/__fc_builtin_for_normalization.i (no preprocessing)
[kernel] Parsing __sd_instru_sum_array_sum_array.c (with preprocessing)
[kernel] Parsing FRAMAC_SHARE/libc/__fc_builtin_for_normalization.i (no preprocessing)
[kernel] Parsing __sd_instru_sum_array_sum_array.c (with preprocessing)
[pc] analyzing...
[pc] Compiling pathcrawler___sd_instru_sum_array_sum_array/lanceur_sum_array utilities ...
[pc] Compiling pathcrawler___sd_instru_sum_array_sum_array/lanceur_sum_array ...
[pc] generating tests...
[pc] Starting lanceur_sum_array (isc version)
[pc] Starting lanceur_pathcrawler__sum_array_precond (isc version)
[pc] Starting lanceur_sum_array (isc version)
[pc] Starting lanceur_sum_array (isc version)
[pc] Starting lanceur_sum_array (isc version)
[pc] Starting lanceur_sum_array (isc version)
[pc] Starting lanceur_sum_array (isc version)
[pc] Starting lanceur_sum_array (isc version)
[pc] generation finished
[stady] all-paths: true
[stady] 147 test cases
[stady] NC of assert rte: signed_overflow: -2147483648 ≤ s+*(t+i); 
        LOCATION: tests/sum_array/sum_array.c:17
        TEST DRIVER: testcases___sd_instru_sum_array_sum_array/sum_array/testdrivers/TC_10.c
        n = 3
        t[0] = -10555854
        t[1] = -2139817863
        t[2] = 200408
[stady] NC of assert rte: signed_overflow: s+*(t+i) ≤ 2147483647; 
        LOCATION: tests/sum_array/sum_array.c:17
        TEST DRIVER: testcases___sd_instru_sum_array_sum_array/sum_array/testdrivers/TC_7.c
        n = 3
        t[0] = 0
        t[1] = 192302372
        t[2] = 2062945588
[report] Computing properties status...

--------------------------------------------------------------------------------
--- Properties of Function 'sum_array'
--------------------------------------------------------------------------------

[   Bug   ] Assertion 'rte,signed_overflow' (file tests/sum_array/sum_array.c, line 17)
            by StaDy.
[   Bug   ] Assertion 'rte,signed_overflow' (file tests/sum_array/sum_array.c, line 17)
            by StaDy.

--------------------------------------------------------------------------------
--- Status Report Summary
--------------------------------------------------------------------------------
     2 Bugs found
     2 Total
--------------------------------------------------------------------------------
