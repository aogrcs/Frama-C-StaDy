[kernel] preprocessing with "gcc -C -E -I.  tests/quantified/quantified.c"
[stady] warning: Native Precondition:
                 ∀ ℤ __q_i; 0 ≤ __q_i ∧ __q_i < n ⇒ \valid(*(t+__q_i)+(0 .. n-1)) unsupported
[stady] warning: Native Precondition:
                 ∀ ℤ __q_i;
                   0 ≤ __q_i ∧ __q_i < n ⇒
                   (∃ ℤ j;
                      (0 ≤ __q_j ∧ __q_j < n) ∧
                      (*(*(t+__q_i)+__q_j) ≡ 1 ∧
                       (∀ ℤ __q_k;
                          0 ≤ __q_k ∧ __q_k < n ⇒
                          (__q_k ≢ __q_j ⇒ *(*(t+__q_i)+__q_k) ≡ 0)))) unsupported
[stady:generated-pl] generated Prolog precondition:
:- module(test_parameters).
:- import create_input_val/3 from substitution.
:- export dom/4.
:- export create_input_vals/2.
:- export unquantif_preconds/2.
:- export quantif_preconds/2.
:- export strategy/2.
:- export precondition_of/2.

dom(0,0,0,0).
dom('f', dim(cont('t',_)), [], int([0..4294967295])).
dom('f', cont(cont('t',_),_), [], int([-2147483648..2147483647])).
dom('pathcrawler__f_precond',A,B,C) :-
  dom('f',A,B,C).
create_input_vals('f', Ins):-
  create_input_val(dim('t'), int([1..4294967295]),Ins),
  create_input_val('n', int([-2147483648..2147483647]),Ins),
  true.
create_input_vals('pathcrawler__f_precond',Ins) :-
  create_input_vals('f',Ins).
quantif_preconds('f',
  [
  ]
).
quantif_preconds('pathcrawler__f_precond',A) :-
  quantif_preconds('f',A).
unquantif_preconds('f',
  [
    cond(egal,dim('t'),+(int(math), -(int(math), 'n', 1), 1),pre),
    cond(infegal,'n',3,pre),
    cond(infegal,0,'n',pre)
  ]
).
unquantif_preconds('pathcrawler__f_precond',A) :-
  unquantif_preconds('f',A).
strategy('f',[]).
strategy('pathcrawler__f_precond',A) :-
  strategy('f',A).
precondition_of('f','pathcrawler__f_precond').
[stady:generated-c] generated C file:
/* Generated by Frama-C */
extern int pathcrawler_assert_exception(char*,int);
extern int pathcrawler_dimension(void*);
extern void pathcrawler_to_framac(char*);
int f_precond(int **t, int n)
{
int __stady_pred_0 = 1;
{
int __q_i;
for (__q_i = 0; __q_i < n &&  __stady_pred_0; __q_i++) {
__stady_pred_0 = ((n - 1) >= 0 && pathcrawler_dimension(*(t + __q_i)) > (n - 1));
}
}
if (!__stady_pred_0) return 0;
int __stady_pred_1 = 1;
{
int __q_i;
for (__q_i = 0; __q_i < n &&  __stady_pred_1; __q_i++) {
int __stady_pred_2 = 0;
{
int __q_j;
for (__q_j = 0; __q_j < n && ! __stady_pred_2; __q_j++) {
int __stady_pred_3 = 1;
{
int __q_k;
for (__q_k = 0; __q_k < n &&  __stady_pred_3; __q_k++) {
int __stady_pred_4 = 1;
if ((__q_k != __q_j)) {
__stady_pred_4 = (*(*(t + __q_i) + __q_k) == 0);
}
__stady_pred_3 = __stady_pred_4;
}
}
__stady_pred_2 = ((*(*(t + __q_i) + __q_j) == 1) && __stady_pred_3);
}
}
__stady_pred_1 = __stady_pred_2;
}
}
if (!__stady_pred_1) return 0;
return 1;
}

void f(int **t, int n)
{
  int **old_t = t;
  int **old_ptr_t;
  old_ptr_t = malloc((((n - 1) + 1))*sizeof(int *));
  int __stady_iter_0;
  for (__stady_iter_0 = 0; __stady_iter_0 < ((n - 1) + 1); __stady_iter_0++) {
  old_ptr_t[__stady_iter_0] = malloc((((n - 1) + 1))*sizeof(int));
  int __stady_iter_1;
  for (__stady_iter_1 = 0; __stady_iter_1 < ((n - 1) + 1); __stady_iter_1++) {
  old_ptr_t[__stady_iter_0][__stady_iter_1] = t[__stady_iter_0][__stady_iter_1];
  }
  }
  int old_n = n;
  {
    int __stady_iter_0;
    for (__stady_iter_0 = 0; __stady_iter_0 < ((n - 1) + 1); __stady_iter_0++) {
    free(old_ptr_t[__stady_iter_0]);
    }
    free(old_ptr_t);
    return;
  }
}


[kernel] preprocessing with "gcc -C -E -I.  stady_temp.c"
stady_temp.c:48:[kernel] warning: Calling undeclared function malloc. Old style K&R code?
stady_temp.c:61:[kernel] warning: Calling undeclared function free. Old style K&R code?
[kernel] preprocessing with "gcc -C -E -I. -include /usr/local/share/frama-c/pc/lib/lanceur_deb.h stady_temp.c"
stady_temp.c:48:[kernel] warning: Calling undeclared function malloc. Old style K&R code?
stady_temp.c:61:[kernel] warning: Calling undeclared function free. Old style K&R code?
[pc] analyzing...
[pc] Compiling pathcrawler_stady_temp/lanceur_f utilities ...
[pc] Compiling pathcrawler_stady_temp/lanceur_f ...
[pc] generating tests...
[pc] Starting lanceur_f (isc version)
[pc] Starting lanceur_pathcrawler__f_precond (isc version)
[pc] generation finished
[stady] all-paths: true
[stady] 32 test cases
[report] Computing properties status...

--------------------------------------------------------------------------------
--- Properties of Function 'f'
--------------------------------------------------------------------------------

[  Valid  ] Default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Status Report Summary
--------------------------------------------------------------------------------
     1 Completely validated
     1 Total
--------------------------------------------------------------------------------
