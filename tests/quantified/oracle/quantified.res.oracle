[kernel] preprocessing with "gcc -C -E -I.  tests/quantified/quantified.c"
[stady:generated-c] /* Generated by Frama-C */
                    int f_precond(int **t, int n)
                    {
                    if (!((0 <= n) && (n <= 3))) return 0;if (!((n-1) >= 0 && (pathcrawler_dimension(t) > (n-1)))) return 0;int __stady_pred_5 = 1;
                    {
                    int __q_i;
                    for (__q_i = 0; __q_i < n &&  __stady_pred_5; __q_i++) {
                    if(!(((n-1) >= 0 && (pathcrawler_dimension(*(t+__q_i)) > (n-1))))) __stady_pred_5 = 0;
                    }
                    }
                    if (!__stady_pred_5) return 0;int __stady_pred_6 = 1;
                    {
                    int __q_i;
                    for (__q_i = 0; __q_i < n &&  __stady_pred_6; __q_i++) {
                    int __stady_pred_7 = 0;
                    {
                    int __q_j;
                    for (__q_j = 0; __q_j < n && ! __stady_pred_7; __q_j++) {
                    int __stady_pred_8 = 1;
                    {
                    int __q_k;
                    for (__q_k = 0; __q_k < n &&  __stady_pred_8; __q_k++) {
                    int __stady_pred_9 = 1;
                    if ((__q_k != __q_j)) {
                    __stady_pred_9 = (*(*(t+__q_i)+__q_k) == 0);
                    }
                    if(!(__stady_pred_9)) __stady_pred_8 = 0;
                    }
                    }
                    if((((*(*(t+__q_i)+__q_j) == 1) && __stady_pred_8))) __stady_pred_7 = 1;
                    }
                    }
                    if(!(__stady_pred_7)) __stady_pred_6 = 0;
                    }
                    }
                    if (!__stady_pred_6) return 0;return 1;
                    }
                    
                    void f(int **t, int n)
                    {
                      int **old_t = t;
                      int **old_ptr_t;
                      old_ptr_t = malloc(((n-1)+1)*sizeof(int*));
                      int __stady_iter_0;
                      for (__stady_iter_0 = 0; __stady_iter_0 < (n-1)+1; __stady_iter_0++) {
                      old_ptr_t[__stady_iter_0] = malloc(((n-1)+1)*sizeof(int));
                      int __stady_iter_1;
                      for (__stady_iter_1 = 0; __stady_iter_1 < (n-1)+1; __stady_iter_1++) {
                      old_ptr_t[__stady_iter_0][__stady_iter_1] = t[__stady_iter_0][__stady_iter_1];
                      }
                      }
                      int old_n = n;
                      {
                        int __stady_iter_0;
                        for (__stady_iter_0 = 0; __stady_iter_0 < (n-1)+1; __stady_iter_0++) {
                        free(old_ptr_t[__stady_iter_0]);
                        }
                        free(old_ptr_t);
                        return;
                      }
                    }
[kernel] preprocessing with "gcc -C -E -I.  stady_temp.c"
stady_temp.c:45:[kernel] warning: Calling undeclared function malloc. Old style K&R code?
stady_temp.c:58:[kernel] warning: Calling undeclared function free. Old style K&R code?
[kernel] preprocessing with "gcc -C -E -I. -include /usr/local/share/frama-c/pc/lib/lanceur_deb.h stady_temp.c"
stady_temp.c:45:[kernel] warning: Calling undeclared function malloc. Old style K&R code?
stady_temp.c:58:[kernel] warning: Calling undeclared function free. Old style K&R code?
[pc] analyzing...
[pc] Compiling pathcrawler_stady_temp/lanceur_f utilities ...
[pc] Compiling pathcrawler_stady_temp/lanceur_f ...
[pc] generating tests...
[pc] Starting lanceur_f (isc version)
[pc] Starting lanceur_pathcrawler__f_precond (isc version)
[pc] generation finished
[stady] all-paths: true
[stady] 32 test cases
[report] Computing properties status...

--------------------------------------------------------------------------------
--- Properties of Function 'f'
--------------------------------------------------------------------------------

[  Valid  ] Default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Status Report Summary
--------------------------------------------------------------------------------
     1 Completely validated
     1 Total
--------------------------------------------------------------------------------
