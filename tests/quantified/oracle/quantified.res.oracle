[kernel] preprocessing with "gcc -C -E -I.  tests/quantified/quantified.c"
[stady:generated-pl] :- module(test_parameters).
                     :- import create_input_val/3 from substitution.
                     :- export dom/4.
                     :- export create_input_vals/2.
                     :- export unquantif_preconds/2.
                     :- export quantif_preconds/2.
                     :- export strategy/2.
                     :- export precondition_of/2.
                     
                     dom(0,0,0,0).
[stady:generated-pl] dom('f', dim(cont('t',_)), [], int([0..4294967295])).
[stady:generated-pl] dom('f', cont(cont('t',_),_), [], int([-2147483648..2147483647])).
[stady:generated-pl] dom('pathcrawler__f_precond',A,B,C) :- dom('f',A,B,C).
[stady:generated-pl] create_input_vals('f', Ins):-
[stady:generated-pl] create_input_val(dim('t'), int([1..4294967295]),Ins),
[stady:generated-pl] create_input_val('n', int([-2147483648..2147483647]),Ins),
[stady:generated-pl] true.
[stady:generated-pl] create_input_vals('pathcrawler__f_precond',Ins) :- create_input_vals('f',Ins).
[stady:generated-pl] quantif_preconds('f',[]).
[stady:generated-pl] quantif_preconds('pathcrawler__f_precond',A) :- quantif_preconds('f',A).
[stady:generated-pl] unquantif_preconds('f',[cond(egal,dim('t'),+(int(math), -(int(math), 'n', 1), 1),pre), cond(infegal,'n',3,pre), cond(infegal,0,'n',pre)]).
[stady:generated-pl] unquantif_preconds('pathcrawler__f_precond',A) :- unquantif_preconds('f',A).
[stady:generated-pl] strategy('f',[]).
[stady:generated-pl] strategy('pathcrawler__f_precond',A) :- strategy('f',A).
[stady:generated-pl] precondition_of('f','pathcrawler__f_precond').
[stady:generated-c] /* Generated by Frama-C */
                    int f_precond(int **t, int n)
                    {
                    if (!((0 <= (n)) && ((n) <= 3))) return 0;if (!((n-1) >= 0 && (pathcrawler_dimension((t)) > (n-1)))) return 0;int __stady_pred_5 = 1;
                    {
                    int __q_i;
                    for (__q_i = 0; __q_i < (n) &&  __stady_pred_5; __q_i++) {
                    __stady_pred_5 = ((n-1) >= 0 && (pathcrawler_dimension((*(t+__q_i))) > (n-1)));
                    }
                    }
                    if (!__stady_pred_5) return 0;int __stady_pred_6 = 1;
                    {
                    int __q_i;
                    for (__q_i = 0; __q_i < (n) &&  __stady_pred_6; __q_i++) {
                    int __stady_pred_7 = 0;
                    {
                    int __q_j;
                    for (__q_j = 0; __q_j < (n) && ! __stady_pred_7; __q_j++) {
                    int __stady_pred_8 = 1;
                    {
                    int __q_k;
                    for (__q_k = 0; __q_k < (n) &&  __stady_pred_8; __q_k++) {
                    int __stady_pred_9 = 1;
                    if (((__q_k) != (__q_j))) {
                    __stady_pred_9 = ((*(*(t+__q_i)+__q_k)) == 0);
                    }
                    __stady_pred_8 = __stady_pred_9;
                    }
                    }
                    __stady_pred_7 = (((*(*(t+__q_i)+__q_j)) == 1) && __stady_pred_8);
                    }
                    }
                    __stady_pred_6 = __stady_pred_7;
                    }
                    }
                    if (!__stady_pred_6) return 0;return 1;
                    }
                    
                    void f(int **t, int n)
                    {
                      int **old_t = t;
                      int **old_ptr_t;
                      old_ptr_t = malloc(((n-1)+1)*sizeof(int*));
                      int __stady_iter_0;
                      for (__stady_iter_0 = 0; __stady_iter_0 < (n-1)+1; __stady_iter_0++) {
                      old_ptr_t[__stady_iter_0] = malloc(((n-1)+1)*sizeof(int));
                      int __stady_iter_1;
                      for (__stady_iter_1 = 0; __stady_iter_1 < (n-1)+1; __stady_iter_1++) {
                      old_ptr_t[__stady_iter_0][__stady_iter_1] = t[__stady_iter_0][__stady_iter_1];
                      }
                      }
                      int old_n = n;
                      {
                        int __stady_iter_0;
                        for (__stady_iter_0 = 0; __stady_iter_0 < (n-1)+1; __stady_iter_0++) {
                        free(old_ptr_t[__stady_iter_0]);
                        }
                        free(old_ptr_t);
                        return;
                      }
                    }
[kernel] preprocessing with "gcc -C -E -I.  stady_temp.c"
stady_temp.c:45:[kernel] warning: Calling undeclared function malloc. Old style K&R code?
stady_temp.c:58:[kernel] warning: Calling undeclared function free. Old style K&R code?
[kernel] preprocessing with "gcc -C -E -I. -include /usr/local/share/frama-c/pc/lib/lanceur_deb.h stady_temp.c"
stady_temp.c:45:[kernel] warning: Calling undeclared function malloc. Old style K&R code?
stady_temp.c:58:[kernel] warning: Calling undeclared function free. Old style K&R code?
[pc] analyzing...
[pc] Compiling pathcrawler_stady_temp/lanceur_f utilities ...
[pc] Compiling pathcrawler_stady_temp/lanceur_f ...
[pc] generating tests...
[pc] Starting lanceur_f (isc version)
[pc] Starting lanceur_pathcrawler__f_precond (isc version)
[pc] generation finished
[stady] all-paths: true
[stady] 32 test cases
[report] Computing properties status...

--------------------------------------------------------------------------------
--- Properties of Function 'f'
--------------------------------------------------------------------------------

[  Valid  ] Default behavior
            by Frama-C kernel.

--------------------------------------------------------------------------------
--- Status Report Summary
--------------------------------------------------------------------------------
     1 Completely validated
     1 Total
--------------------------------------------------------------------------------
