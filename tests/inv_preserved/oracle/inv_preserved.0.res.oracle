[kernel] Parsing FRAMAC_SHARE/libc/__fc_builtin_for_normalization.i (no preprocessing)
[kernel] Parsing tests/inv_preserved/inv_preserved.c (with preprocessing)
[stady:generated-pl] generated Prolog precondition:
:- module(test_parameters).
:- import create_input_val/3 from substitution.
:- export dom/4.
:- export create_input_vals/2.
:- export unquantif_preconds/2.
:- export quantif_preconds/2.
:- export strategy/2.
:- export precondition_of/2.

dom(0,0,0,0).
dom('f', cont('t',_), [], int([-2147483648..2147483647])).
dom('f', dim('t'), [], int([0..4294967295])).
dom('pathcrawler__f_precond',A,B,C) :-
  dom('f',A,B,C).
create_input_vals('f', Ins):-
  create_input_val('n', int([3..5]),Ins),
  create_input_val(dim('t'), int([0..4294967295]),Ins),
  true.
create_input_vals('pathcrawler__f_precond',Ins) :-
  create_input_vals('f',Ins).
quantif_preconds('f',
  [

  ]
).
quantif_preconds('pathcrawler__f_precond',A) :-
  quantif_preconds('f',A).
unquantif_preconds('f',
  [
    cond(egal,dim('t'),+(int(math), -(int(math), 'n', 1), 1),pre)
  ]
).
unquantif_preconds('pathcrawler__f_precond',A) :-
  unquantif_preconds('f',A).
strategy('f',[]).
strategy('pathcrawler__f_precond',A) :-
  strategy('f',A).
precondition_of('f','pathcrawler__f_precond').
[stady:generated-c] generated C file:
/* Generated by Frama-C */
struct __anonstruct___mpz_struct_1 {int _mp_alloc ;int _mp_size ;unsigned long *_mp_d ;};typedef struct __anonstruct___mpz_struct_1 __mpz_struct;typedef __mpz_struct mpz_t[1];
extern unsigned long int __gmpz_get_ui(mpz_t);
extern signed long int __gmpz_get_si(mpz_t);
extern int __gmpz_cmp_ui(mpz_t, unsigned long int);
extern int __gmpz_cmp(mpz_t, mpz_t);
extern void __gmpz_clear(mpz_t);
extern void __gmpz_init(mpz_t);
extern void __gmpz_init_set(mpz_t, mpz_t);
extern void __gmpz_init_set_si(mpz_t, signed long int);
extern void __gmpz_init_set_str(mpz_t, const char*, int);
extern void __gmpz_add_ui(mpz_t, const mpz_t, unsigned long int);
extern void __gmpz_sub(mpz_t, const mpz_t, const mpz_t);
extern int pathcrawler_assert_exception(char*,int);
extern void pathcrawler_to_framac(char*);
extern void* malloc(unsigned long);
extern void free(void*);
int fmax(int x, int y)
{
  int old_x;
  old_x = x;
  int old_y;
  old_y = y;
  {
    int tmp;
    if (x >= y) {
                  pathcrawler_to_framac("@FC:REACHABLE_STMT:3");
                  tmp = x;
                }
    else {
           pathcrawler_to_framac("@FC:REACHABLE_STMT:4");
           tmp = y;
         }
    return tmp;
  }
}

int f_precond(int n, int *t)
{
  return 1;
}

void f(int n, int *t)
{
  int old_n;
  old_n = n;
  int *old_t;
  int *old_ptr_t;
  old_t = t;
  mpz_t __stady_gmp_0;
  __gmpz_init_set_si(__stady_gmp_0,n);
  unsigned long __stady_term_0;
  unsigned long __stady_term_1;
  __stady_term_1 = __gmpz_get_ui(__stady_gmp_0);
  old_ptr_t = (int *)malloc(__stady_term_1 * (unsigned long)sizeof(int));
  __stady_term_1 = __gmpz_get_ui(__stady_gmp_0);
  __stady_term_0 = 0;
  while(__stady_term_0 < __stady_term_1) {
    *(old_ptr_t + __stady_term_0) = *(t + __stady_term_0);
    __stady_term_0 ++;
  }
  __gmpz_clear(__stady_gmp_0);
  {
    int i;
    i = 3;
    *(t + 2) = fmax(*(t + 1),*(t + 0));
    {
      mpz_t __stady_gmp_1;
      __gmpz_init_set_str(__stady_gmp_1,"3",10);
      mpz_t __stady_gmp_2;
      __gmpz_init_set_si(__stady_gmp_2,i);
      int __stady_term_2;
      __stady_term_2 = __gmpz_cmp(__stady_gmp_1,__stady_gmp_2);
      __gmpz_clear(__stady_gmp_1);
      __gmpz_clear(__stady_gmp_2);
      int __stady_pred_0;
      __stady_pred_0 = __stady_term_2 <= 0;
      if(__stady_pred_0) {
        __stady_pred_0 = i <= n;
      }
      if(! __stady_pred_0) {
        pathcrawler_assert_exception("Loop invariant not established!",1);
      }
      int __stady_pred_2;
      __stady_pred_2 = 1;
      {
        mpz_t __q_k;
        mpz_t __stady_gmp_5;
        __gmpz_init_set_str(__stady_gmp_5,"2",10);
        mpz_t __stady_gmp_6;
        __gmpz_init_set_si(__stady_gmp_6,i);
        mpz_t __stady_gmp_7;
        __gmpz_init_set_str(__stady_gmp_7,"1",10);
        mpz_t __stady_gmp_8;
        __gmpz_init(__stady_gmp_8);
        __gmpz_sub(__stady_gmp_8,__stady_gmp_6,__stady_gmp_7);
        __gmpz_clear(__stady_gmp_6);
        __gmpz_clear(__stady_gmp_7);
        __gmpz_init_set(__q_k,__stady_gmp_5);
        int __stady_term_4;
        __stady_term_4 = __gmpz_cmp(__q_k,__stady_gmp_8);
        while(__stady_term_4 < 0 && __stady_pred_2) {
          mpz_t __stady_gmp_9;
          __gmpz_init_set(__stady_gmp_9,__q_k);
          int __stady_term_5;
          __stady_term_5 = (int)__gmpz_get_si(__stady_gmp_9);
          __gmpz_clear(__stady_gmp_9);
          mpz_t __stady_gmp_10;
          __gmpz_init_set(__stady_gmp_10,__q_k);
          mpz_t __stady_gmp_11;
          __gmpz_init_set_str(__stady_gmp_11,"1",10);
          mpz_t __stady_gmp_12;
          __gmpz_init(__stady_gmp_12);
          __gmpz_sub(__stady_gmp_12,__stady_gmp_10,__stady_gmp_11);
          __gmpz_clear(__stady_gmp_10);
          __gmpz_clear(__stady_gmp_11);
          int __stady_term_6;
          __stady_term_6 = (int)__gmpz_get_si(__stady_gmp_12);
          __gmpz_clear(__stady_gmp_12);
          int __stady_pred_3;
          __stady_pred_3 = *(t + __stady_term_5) == *(t + __stady_term_6);
          if(__stady_pred_3) {
            
          }
          else {
            mpz_t __stady_gmp_13;
            __gmpz_init_set(__stady_gmp_13,__q_k);
            int __stady_term_7;
            __stady_term_7 = (int)__gmpz_get_si(__stady_gmp_13);
            __gmpz_clear(__stady_gmp_13);
            mpz_t __stady_gmp_14;
            __gmpz_init_set(__stady_gmp_14,__q_k);
            mpz_t __stady_gmp_15;
            __gmpz_init_set_str(__stady_gmp_15,"2",10);
            mpz_t __stady_gmp_16;
            __gmpz_init(__stady_gmp_16);
            __gmpz_sub(__stady_gmp_16,__stady_gmp_14,__stady_gmp_15);
            __gmpz_clear(__stady_gmp_14);
            __gmpz_clear(__stady_gmp_15);
            int __stady_term_8;
            __stady_term_8 = (int)__gmpz_get_si(__stady_gmp_16);
            __gmpz_clear(__stady_gmp_16);
            __stady_pred_3 = *(t + __stady_term_7) == *(t + __stady_term_8);
          }
          __stady_pred_2 = __stady_pred_3;
          __gmpz_add_ui(__q_k,__q_k,1);
          __stady_term_4 = __gmpz_cmp(__q_k,__stady_gmp_8);
        }
        __gmpz_clear(__q_k);
        __gmpz_clear(__stady_gmp_5);
        __gmpz_clear(__stady_gmp_8);
      }
      if(! __stady_pred_2) {
        pathcrawler_assert_exception("Loop invariant not established!",7);
      }
      while (1) {
        if (! (i < n)) {
                         pathcrawler_to_framac("@FC:REACHABLE_STMT:12");
                         break;
                       }mpz_t __stady_gmp_29;
        __gmpz_init_set_si(__stady_gmp_29,n);
        mpz_t __stady_gmp_30;
        __gmpz_init_set_si(__stady_gmp_30,i);
        mpz_t __stady_gmp_31;
        __gmpz_init(__stady_gmp_31);
        __gmpz_sub(__stady_gmp_31,__stady_gmp_29,__stady_gmp_30);
        __gmpz_clear(__stady_gmp_29);
        __gmpz_clear(__stady_gmp_30);
        int __stady_term_14;
        __stady_term_14 = __gmpz_cmp_ui(__stady_gmp_31,0);
        if(__stady_term_14 < 0) {
          pathcrawler_assert_exception("Variant non positive",0);
        }
        mpz_t __stady_gmp_32;
        __gmpz_init_set(__stady_gmp_32,__stady_gmp_31);
        *(t + i) = fmax(*(t + (i - 1)),*(t + (i - 2)));
        i ++;mpz_t __stady_gmp_3;
        __gmpz_init_set_str(__stady_gmp_3,"3",10);
        mpz_t __stady_gmp_4;
        __gmpz_init_set_si(__stady_gmp_4,i);
        int __stady_term_3;
        __stady_term_3 = __gmpz_cmp(__stady_gmp_3,__stady_gmp_4);
        __gmpz_clear(__stady_gmp_3);
        __gmpz_clear(__stady_gmp_4);
        int __stady_pred_1;
        __stady_pred_1 = __stady_term_3 <= 0;
        if(__stady_pred_1) {
          __stady_pred_1 = i <= n;
        }
        if(! __stady_pred_1) {
          pathcrawler_assert_exception("Loop invariant not preserved!",1);
        }
        int __stady_pred_4;
        __stady_pred_4 = 1;
        {
          mpz_t __q_k;
          mpz_t __stady_gmp_17;
          __gmpz_init_set_str(__stady_gmp_17,"2",10);
          mpz_t __stady_gmp_18;
          __gmpz_init_set_si(__stady_gmp_18,i);
          mpz_t __stady_gmp_19;
          __gmpz_init_set_str(__stady_gmp_19,"1",10);
          mpz_t __stady_gmp_20;
          __gmpz_init(__stady_gmp_20);
          __gmpz_sub(__stady_gmp_20,__stady_gmp_18,__stady_gmp_19);
          __gmpz_clear(__stady_gmp_18);
          __gmpz_clear(__stady_gmp_19);
          __gmpz_init_set(__q_k,__stady_gmp_17);
          int __stady_term_9;
          __stady_term_9 = __gmpz_cmp(__q_k,__stady_gmp_20);
          while(__stady_term_9 < 0 && __stady_pred_4) {
            mpz_t __stady_gmp_21;
            __gmpz_init_set(__stady_gmp_21,__q_k);
            int __stady_term_10;
            __stady_term_10 = (int)__gmpz_get_si(__stady_gmp_21);
            __gmpz_clear(__stady_gmp_21);
            mpz_t __stady_gmp_22;
            __gmpz_init_set(__stady_gmp_22,__q_k);
            mpz_t __stady_gmp_23;
            __gmpz_init_set_str(__stady_gmp_23,"1",10);
            mpz_t __stady_gmp_24;
            __gmpz_init(__stady_gmp_24);
            __gmpz_sub(__stady_gmp_24,__stady_gmp_22,__stady_gmp_23);
            __gmpz_clear(__stady_gmp_22);
            __gmpz_clear(__stady_gmp_23);
            int __stady_term_11;
            __stady_term_11 = (int)__gmpz_get_si(__stady_gmp_24);
            __gmpz_clear(__stady_gmp_24);
            int __stady_pred_5;
            __stady_pred_5 = *(t + __stady_term_10) == *(t + __stady_term_11);
            if(__stady_pred_5) {
              
            }
            else {
              mpz_t __stady_gmp_25;
              __gmpz_init_set(__stady_gmp_25,__q_k);
              int __stady_term_12;
              __stady_term_12 = (int)__gmpz_get_si(__stady_gmp_25);
              __gmpz_clear(__stady_gmp_25);
              mpz_t __stady_gmp_26;
              __gmpz_init_set(__stady_gmp_26,__q_k);
              mpz_t __stady_gmp_27;
              __gmpz_init_set_str(__stady_gmp_27,"2",10);
              mpz_t __stady_gmp_28;
              __gmpz_init(__stady_gmp_28);
              __gmpz_sub(__stady_gmp_28,__stady_gmp_26,__stady_gmp_27);
              __gmpz_clear(__stady_gmp_26);
              __gmpz_clear(__stady_gmp_27);
              int __stady_term_13;
              __stady_term_13 = (int)__gmpz_get_si(__stady_gmp_28);
              __gmpz_clear(__stady_gmp_28);
              __stady_pred_5 = *(t + __stady_term_12) == *(t + __stady_term_13);
            }
            __stady_pred_4 = __stady_pred_5;
            __gmpz_add_ui(__q_k,__q_k,1);
            __stady_term_9 = __gmpz_cmp(__q_k,__stady_gmp_20);
          }
          __gmpz_clear(__q_k);
          __gmpz_clear(__stady_gmp_17);
          __gmpz_clear(__stady_gmp_20);
        }
        if(! __stady_pred_4) {
          pathcrawler_assert_exception("Loop invariant not preserved!",7);
        }
        mpz_t __stady_gmp_33;
        __gmpz_init_set_si(__stady_gmp_33,n);
        mpz_t __stady_gmp_34;
        __gmpz_init_set_si(__stady_gmp_34,i);
        mpz_t __stady_gmp_35;
        __gmpz_init(__stady_gmp_35);
        __gmpz_sub(__stady_gmp_35,__stady_gmp_33,__stady_gmp_34);
        __gmpz_clear(__stady_gmp_33);
        __gmpz_clear(__stady_gmp_34);
        int __stady_term_15;
        __stady_term_15 = __gmpz_cmp(__stady_gmp_35,__stady_gmp_32);
        if(__stady_term_15 >= 0) {
          pathcrawler_assert_exception("Variant non decreasing",0);
        }
        __gmpz_clear(__stady_gmp_32);
        }
         
    }
    free(old_ptr_t);
    return;
  }
}


[kernel] Parsing FRAMAC_SHARE/libc/__fc_builtin_for_normalization.i (no preprocessing)
[kernel] Parsing __sd_instru_inv_preserved_f.c (with preprocessing)
[kernel] Parsing FRAMAC_SHARE/libc/__fc_builtin_for_normalization.i (no preprocessing)
[kernel] Parsing __sd_instru_inv_preserved_f.c (with preprocessing)
[pc] analyzing...
[pc] Compiling pathcrawler___sd_instru_inv_preserved_f/lanceur_f utilities ...
[pc] Compiling pathcrawler___sd_instru_inv_preserved_f/lanceur_f ...
[pc] generating tests...
[pc] Starting lanceur_f (isc version)
[pc] Starting lanceur_pathcrawler__f_precond (isc version)
[pc] generation finished
[stady] all-paths: true
[stady] 147 test cases
[report] Computing properties status...

--------------------------------------------------------------------------------
--- Properties of Function 'f'
--------------------------------------------------------------------------------

[ Partial ] Loop variant at loop (file tests/inv_preserved/inv_preserved.c, line 29)
            By StaDy, with pending:
             - Pre-condition (file tests/inv_preserved/inv_preserved.c, line 14)
[ Partial ] Invariant (file tests/inv_preserved/inv_preserved.c, line 23)
            By StaDy, with pending:
             - Pre-condition (file tests/inv_preserved/inv_preserved.c, line 14)
[ Partial ] Invariant (file tests/inv_preserved/inv_preserved.c, line 24)
            By StaDy, with pending:
             - Pre-condition (file tests/inv_preserved/inv_preserved.c, line 14)

--------------------------------------------------------------------------------
--- Status Report Summary
--------------------------------------------------------------------------------
     3 Locally validated
     3 Total
--------------------------------------------------------------------------------
