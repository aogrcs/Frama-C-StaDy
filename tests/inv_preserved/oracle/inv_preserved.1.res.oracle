[kernel] Parsing FRAMAC_SHARE/libc/__fc_builtin_for_normalization.i (no preprocessing)
[kernel] Parsing tests/inv_preserved/inv_preserved.c (with preprocessing)
[stady:generated-pl] generated Prolog precondition:
:- module(test_parameters).
:- import create_input_val/3 from substitution.
:- export dom/4.
:- export create_input_vals/2.
:- export unquantif_preconds/2.
:- export quantif_preconds/2.
:- export strategy/2.
:- export precondition_of/2.

dom(0,0,0,0).
dom('f', cont('__stady_term_3',_), [], int([-2147483648..2147483647])).
dom('f', dim('__stady_term_3'), [], int([0..4294967295])).
dom('f', cont('t',_), [], int([-2147483648..2147483647])).
dom('f', dim('t'), [], int([0..4294967295])).
dom('pathcrawler__f_precond',A,B,C) :-
  dom('f',A,B,C).
create_input_vals('f', Ins):-
  create_input_val('__stady_term_2', int([-2147483648..2147483647]),Ins),
  create_input_val(dim('__stady_term_3'), int([0..4294967295]),Ins),
  create_input_val('n', int([3..5]),Ins),
  create_input_val(dim('t'), int([0..4294967295]),Ins),
  true.
create_input_vals('pathcrawler__f_precond',Ins) :-
  create_input_vals('f',Ins).
quantif_preconds('f',
  [

  ]
).
quantif_preconds('pathcrawler__f_precond',A) :-
  quantif_preconds('f',A).
unquantif_preconds('f',
  [
    cond(egal,dim('t'),+(int(math), -(int(math), 'n', 1), 1),pre)
  ]
).
unquantif_preconds('pathcrawler__f_precond',A) :-
  unquantif_preconds('f',A).
strategy('f',[]).
strategy('pathcrawler__f_precond',A) :-
  strategy('f',A).
precondition_of('f','pathcrawler__f_precond').
[stady:generated-c] generated C file:
/* Generated by Frama-C */
struct __anonstruct___mpz_struct_1 {int _mp_alloc ;int _mp_size ;unsigned long *_mp_d ;};typedef struct __anonstruct___mpz_struct_1 __mpz_struct;typedef __mpz_struct mpz_t[1];
extern unsigned long int __gmpz_get_ui(mpz_t);
extern signed long int __gmpz_get_si(mpz_t);
extern int __gmpz_cmp_ui(mpz_t, unsigned long int);
extern int __gmpz_cmp(mpz_t, mpz_t);
extern void __gmpz_clear(mpz_t);
extern void __gmpz_init(mpz_t);
extern void __gmpz_init_set(mpz_t, mpz_t);
extern void __gmpz_init_set_si(mpz_t, signed long int);
extern void __gmpz_init_set_str(mpz_t, const char*, int);
extern void __gmpz_add_ui(mpz_t, const mpz_t, unsigned long int);
extern void __gmpz_sub(mpz_t, const mpz_t, const mpz_t);
extern int pathcrawler_assert_exception(char*,int);
extern int pathcrawler_dimension(void*);
extern void pathcrawler_to_framac(char*);
extern int pathcrawler_assume_exception(char*,int);
extern void* malloc(unsigned long);
extern void free(void*);
int *__stady_term_3;
int __stady_term_2;
int fmax(int x, int y)
{
  int old_x;
  old_x = x;
  int old_y;
  old_y = y;
  {
    int tmp;
    if (x >= y) {
                  pathcrawler_to_framac("@FC:REACHABLE_STMT:3");
                  tmp = x;
                }
    else {
           pathcrawler_to_framac("@FC:REACHABLE_STMT:4");
           tmp = y;
         }
    return tmp;
  }
}

int f_precond(int n, int *t)
{
  return 1;
}

void f(int n, int *t)
{
  int old_n;
  old_n = n;
  int *old_t;
  int *old_ptr_t;
  old_t = t;
  mpz_t __stady_gmp_0;
  __gmpz_init_set_si(__stady_gmp_0,n);
  unsigned long __stady_term_0;
  unsigned long __stady_term_1;
  __stady_term_1 = __gmpz_get_ui(__stady_gmp_0);
  old_ptr_t = (int *)malloc(__stady_term_1 * (unsigned long)sizeof(int));
  __stady_term_1 = __gmpz_get_ui(__stady_gmp_0);
  __stady_term_0 = 0;
  while(__stady_term_0 < __stady_term_1) {
    *(old_ptr_t + __stady_term_0) = *(t + __stady_term_0);
    __stady_term_0 ++;
  }
  __gmpz_clear(__stady_gmp_0);
  {
    int i;
    i = 3;
    *(t + 2) = fmax(*(t + 1),*(t + 0));
    {
      if(1) {
        mpz_t __stady_gmp_1;
        __gmpz_init_set_str(__stady_gmp_1,"3",10);
        mpz_t __stady_gmp_2;
        __gmpz_init_set_si(__stady_gmp_2,n);
        mpz_t __stady_gmp_3;
        __gmpz_init_set_str(__stady_gmp_3,"1",10);
        mpz_t __stady_gmp_4;
        __gmpz_init(__stady_gmp_4);
        __gmpz_sub(__stady_gmp_4,__stady_gmp_2,__stady_gmp_3);
        __gmpz_clear(__stady_gmp_2);
        __gmpz_clear(__stady_gmp_3);
        int __stady_pred_0;
        int __stady_pred_1;
        __stady_pred_1 = __gmpz_cmp(__stady_gmp_1,__stady_gmp_4);
        if(__stady_pred_1 <= 0) {
          int __stady_term_4;
          __stady_term_4 = pathcrawler_dimension(__stady_term_3);
          int __stady_term_5;
          __stady_term_5 = __gmpz_cmp_ui(__stady_gmp_4,__stady_term_4);
          int __stady_term_6;
          __stady_term_6 = __gmpz_cmp_ui(__stady_gmp_4,0);
          __stady_pred_0 = __stady_term_6 >= 0 && __stady_term_5 < 0;
        }
        else {
          __stady_pred_0 = 1;
        }
        __gmpz_clear(__stady_gmp_1);
        __gmpz_clear(__stady_gmp_4);
        if(! __stady_pred_0) {
          pathcrawler_assume_exception("",0);
        }
        mpz_t __stady_gmp_5;
        mpz_t __stady_gmp_6;
        __gmpz_init_set_str(__stady_gmp_6,"3",10);
        __gmpz_init_set(__stady_gmp_5,__stady_gmp_6);
        mpz_t __stady_gmp_7;
        __gmpz_init_set_si(__stady_gmp_7,n);
        mpz_t __stady_gmp_8;
        __gmpz_init_set_str(__stady_gmp_8,"1",10);
        mpz_t __stady_gmp_9;
        __gmpz_init(__stady_gmp_9);
        __gmpz_sub(__stady_gmp_9,__stady_gmp_7,__stady_gmp_8);
        __gmpz_clear(__stady_gmp_7);
        __gmpz_clear(__stady_gmp_8);
        int __stady_term_7;
        int __stady_term_8;
        __stady_term_8 = __gmpz_cmp(__stady_gmp_5,__stady_gmp_9);
        while(__stady_term_8 <= 0) {
          __stady_term_7 = (int)__gmpz_get_si(__stady_gmp_5);
          *(t + __stady_term_7) = *(__stady_term_3 + __stady_term_7);
          __gmpz_add_ui(__stady_gmp_5,__stady_gmp_5,1);
          __stady_term_8 = __gmpz_cmp(__stady_gmp_5,__stady_gmp_9);
        }
        __gmpz_clear(__stady_gmp_5);
        __gmpz_clear(__stady_gmp_6);
        __gmpz_clear(__stady_gmp_9);
        i = __stady_term_2;
        mpz_t __stady_gmp_10;
        __gmpz_init_set_str(__stady_gmp_10,"3",10);
        mpz_t __stady_gmp_11;
        __gmpz_init_set_si(__stady_gmp_11,i);
        int __stady_term_9;
        __stady_term_9 = __gmpz_cmp(__stady_gmp_10,__stady_gmp_11);
        __gmpz_clear(__stady_gmp_10);
        __gmpz_clear(__stady_gmp_11);
        int __stady_pred_2;
        __stady_pred_2 = __stady_term_9 <= 0;
        if(__stady_pred_2) {
          __stady_pred_2 = i <= n;
        }
        if(! __stady_pred_2) {
          pathcrawler_assume_exception("",0);
        }
        int __stady_pred_3;
        __stady_pred_3 = 1;
        {
          mpz_t __q_k;
          mpz_t __stady_gmp_12;
          __gmpz_init_set_str(__stady_gmp_12,"2",10);
          mpz_t __stady_gmp_13;
          __gmpz_init_set_si(__stady_gmp_13,i);
          mpz_t __stady_gmp_14;
          __gmpz_init_set_str(__stady_gmp_14,"1",10);
          mpz_t __stady_gmp_15;
          __gmpz_init(__stady_gmp_15);
          __gmpz_sub(__stady_gmp_15,__stady_gmp_13,__stady_gmp_14);
          __gmpz_clear(__stady_gmp_13);
          __gmpz_clear(__stady_gmp_14);
          __gmpz_init_set(__q_k,__stady_gmp_12);
          int __stady_term_10;
          __stady_term_10 = __gmpz_cmp(__q_k,__stady_gmp_15);
          while(__stady_term_10 < 0 && __stady_pred_3) {
            mpz_t __stady_gmp_16;
            __gmpz_init_set(__stady_gmp_16,__q_k);
            int __stady_term_11;
            __stady_term_11 = (int)__gmpz_get_si(__stady_gmp_16);
            __gmpz_clear(__stady_gmp_16);
            mpz_t __stady_gmp_17;
            __gmpz_init_set(__stady_gmp_17,__q_k);
            mpz_t __stady_gmp_18;
            __gmpz_init_set_str(__stady_gmp_18,"1",10);
            mpz_t __stady_gmp_19;
            __gmpz_init(__stady_gmp_19);
            __gmpz_sub(__stady_gmp_19,__stady_gmp_17,__stady_gmp_18);
            __gmpz_clear(__stady_gmp_17);
            __gmpz_clear(__stady_gmp_18);
            int __stady_term_12;
            __stady_term_12 = (int)__gmpz_get_si(__stady_gmp_19);
            __gmpz_clear(__stady_gmp_19);
            int __stady_pred_4;
            __stady_pred_4 = *(t + __stady_term_11) == *(t + __stady_term_12);
            if(__stady_pred_4) {
              
            }
            else {
              mpz_t __stady_gmp_20;
              __gmpz_init_set(__stady_gmp_20,__q_k);
              int __stady_term_13;
              __stady_term_13 = (int)__gmpz_get_si(__stady_gmp_20);
              __gmpz_clear(__stady_gmp_20);
              mpz_t __stady_gmp_21;
              __gmpz_init_set(__stady_gmp_21,__q_k);
              mpz_t __stady_gmp_22;
              __gmpz_init_set_str(__stady_gmp_22,"2",10);
              mpz_t __stady_gmp_23;
              __gmpz_init(__stady_gmp_23);
              __gmpz_sub(__stady_gmp_23,__stady_gmp_21,__stady_gmp_22);
              __gmpz_clear(__stady_gmp_21);
              __gmpz_clear(__stady_gmp_22);
              int __stady_term_14;
              __stady_term_14 = (int)__gmpz_get_si(__stady_gmp_23);
              __gmpz_clear(__stady_gmp_23);
              __stady_pred_4 = *(t + __stady_term_13) == *(t + __stady_term_14);
            }
            __stady_pred_3 = __stady_pred_4;
            __gmpz_add_ui(__q_k,__q_k,1);
            __stady_term_10 = __gmpz_cmp(__q_k,__stady_gmp_15);
          }
          __gmpz_clear(__q_k);
          __gmpz_clear(__stady_gmp_12);
          __gmpz_clear(__stady_gmp_15);
        }
        if(! __stady_pred_3) {
          pathcrawler_assume_exception("",0);
        }
      }
      mpz_t __stady_gmp_24;
      __gmpz_init_set_str(__stady_gmp_24,"3",10);
      mpz_t __stady_gmp_25;
      __gmpz_init_set_si(__stady_gmp_25,i);
      int __stady_term_15;
      __stady_term_15 = __gmpz_cmp(__stady_gmp_24,__stady_gmp_25);
      __gmpz_clear(__stady_gmp_24);
      __gmpz_clear(__stady_gmp_25);
      int __stady_pred_5;
      __stady_pred_5 = __stady_term_15 <= 0;
      if(__stady_pred_5) {
        __stady_pred_5 = i <= n;
      }
      if(! __stady_pred_5) {
        pathcrawler_assert_exception("Loop invariant not established!",1);
      }
      int __stady_pred_7;
      __stady_pred_7 = 1;
      {
        mpz_t __q_k;
        mpz_t __stady_gmp_28;
        __gmpz_init_set_str(__stady_gmp_28,"2",10);
        mpz_t __stady_gmp_29;
        __gmpz_init_set_si(__stady_gmp_29,i);
        mpz_t __stady_gmp_30;
        __gmpz_init_set_str(__stady_gmp_30,"1",10);
        mpz_t __stady_gmp_31;
        __gmpz_init(__stady_gmp_31);
        __gmpz_sub(__stady_gmp_31,__stady_gmp_29,__stady_gmp_30);
        __gmpz_clear(__stady_gmp_29);
        __gmpz_clear(__stady_gmp_30);
        __gmpz_init_set(__q_k,__stady_gmp_28);
        int __stady_term_17;
        __stady_term_17 = __gmpz_cmp(__q_k,__stady_gmp_31);
        while(__stady_term_17 < 0 && __stady_pred_7) {
          mpz_t __stady_gmp_32;
          __gmpz_init_set(__stady_gmp_32,__q_k);
          int __stady_term_18;
          __stady_term_18 = (int)__gmpz_get_si(__stady_gmp_32);
          __gmpz_clear(__stady_gmp_32);
          mpz_t __stady_gmp_33;
          __gmpz_init_set(__stady_gmp_33,__q_k);
          mpz_t __stady_gmp_34;
          __gmpz_init_set_str(__stady_gmp_34,"1",10);
          mpz_t __stady_gmp_35;
          __gmpz_init(__stady_gmp_35);
          __gmpz_sub(__stady_gmp_35,__stady_gmp_33,__stady_gmp_34);
          __gmpz_clear(__stady_gmp_33);
          __gmpz_clear(__stady_gmp_34);
          int __stady_term_19;
          __stady_term_19 = (int)__gmpz_get_si(__stady_gmp_35);
          __gmpz_clear(__stady_gmp_35);
          int __stady_pred_8;
          __stady_pred_8 = *(t + __stady_term_18) == *(t + __stady_term_19);
          if(__stady_pred_8) {
            
          }
          else {
            mpz_t __stady_gmp_36;
            __gmpz_init_set(__stady_gmp_36,__q_k);
            int __stady_term_20;
            __stady_term_20 = (int)__gmpz_get_si(__stady_gmp_36);
            __gmpz_clear(__stady_gmp_36);
            mpz_t __stady_gmp_37;
            __gmpz_init_set(__stady_gmp_37,__q_k);
            mpz_t __stady_gmp_38;
            __gmpz_init_set_str(__stady_gmp_38,"2",10);
            mpz_t __stady_gmp_39;
            __gmpz_init(__stady_gmp_39);
            __gmpz_sub(__stady_gmp_39,__stady_gmp_37,__stady_gmp_38);
            __gmpz_clear(__stady_gmp_37);
            __gmpz_clear(__stady_gmp_38);
            int __stady_term_21;
            __stady_term_21 = (int)__gmpz_get_si(__stady_gmp_39);
            __gmpz_clear(__stady_gmp_39);
            __stady_pred_8 = *(t + __stady_term_20) == *(t + __stady_term_21);
          }
          __stady_pred_7 = __stady_pred_8;
          __gmpz_add_ui(__q_k,__q_k,1);
          __stady_term_17 = __gmpz_cmp(__q_k,__stady_gmp_31);
        }
        __gmpz_clear(__q_k);
        __gmpz_clear(__stady_gmp_28);
        __gmpz_clear(__stady_gmp_31);
      }
      if(! __stady_pred_7) {
        pathcrawler_assert_exception("Loop invariant not established!",7);
      }
      while (1) {
        if (! (i < n)) {
                         pathcrawler_to_framac("@FC:REACHABLE_STMT:12");
                         break;
                       }mpz_t __stady_gmp_52;
        __gmpz_init_set_si(__stady_gmp_52,n);
        mpz_t __stady_gmp_53;
        __gmpz_init_set_si(__stady_gmp_53,i);
        mpz_t __stady_gmp_54;
        __gmpz_init(__stady_gmp_54);
        __gmpz_sub(__stady_gmp_54,__stady_gmp_52,__stady_gmp_53);
        __gmpz_clear(__stady_gmp_52);
        __gmpz_clear(__stady_gmp_53);
        int __stady_term_27;
        __stady_term_27 = __gmpz_cmp_ui(__stady_gmp_54,0);
        if(__stady_term_27 < 0) {
          pathcrawler_assert_exception("Variant non positive",0);
        }
        mpz_t __stady_gmp_55;
        __gmpz_init_set(__stady_gmp_55,__stady_gmp_54);
        *(t + i) = fmax(*(t + (i - 1)),*(t + (i - 2)));
        i ++;mpz_t __stady_gmp_26;
        __gmpz_init_set_str(__stady_gmp_26,"3",10);
        mpz_t __stady_gmp_27;
        __gmpz_init_set_si(__stady_gmp_27,i);
        int __stady_term_16;
        __stady_term_16 = __gmpz_cmp(__stady_gmp_26,__stady_gmp_27);
        __gmpz_clear(__stady_gmp_26);
        __gmpz_clear(__stady_gmp_27);
        int __stady_pred_6;
        __stady_pred_6 = __stady_term_16 <= 0;
        if(__stady_pred_6) {
          __stady_pred_6 = i <= n;
        }
        if(! __stady_pred_6) {
          pathcrawler_assert_exception("Loop invariant not preserved!",1);
        }
        int __stady_pred_9;
        __stady_pred_9 = 1;
        {
          mpz_t __q_k;
          mpz_t __stady_gmp_40;
          __gmpz_init_set_str(__stady_gmp_40,"2",10);
          mpz_t __stady_gmp_41;
          __gmpz_init_set_si(__stady_gmp_41,i);
          mpz_t __stady_gmp_42;
          __gmpz_init_set_str(__stady_gmp_42,"1",10);
          mpz_t __stady_gmp_43;
          __gmpz_init(__stady_gmp_43);
          __gmpz_sub(__stady_gmp_43,__stady_gmp_41,__stady_gmp_42);
          __gmpz_clear(__stady_gmp_41);
          __gmpz_clear(__stady_gmp_42);
          __gmpz_init_set(__q_k,__stady_gmp_40);
          int __stady_term_22;
          __stady_term_22 = __gmpz_cmp(__q_k,__stady_gmp_43);
          while(__stady_term_22 < 0 && __stady_pred_9) {
            mpz_t __stady_gmp_44;
            __gmpz_init_set(__stady_gmp_44,__q_k);
            int __stady_term_23;
            __stady_term_23 = (int)__gmpz_get_si(__stady_gmp_44);
            __gmpz_clear(__stady_gmp_44);
            mpz_t __stady_gmp_45;
            __gmpz_init_set(__stady_gmp_45,__q_k);
            mpz_t __stady_gmp_46;
            __gmpz_init_set_str(__stady_gmp_46,"1",10);
            mpz_t __stady_gmp_47;
            __gmpz_init(__stady_gmp_47);
            __gmpz_sub(__stady_gmp_47,__stady_gmp_45,__stady_gmp_46);
            __gmpz_clear(__stady_gmp_45);
            __gmpz_clear(__stady_gmp_46);
            int __stady_term_24;
            __stady_term_24 = (int)__gmpz_get_si(__stady_gmp_47);
            __gmpz_clear(__stady_gmp_47);
            int __stady_pred_10;
            __stady_pred_10 = *(t + __stady_term_23) == *(t + __stady_term_24);
            if(__stady_pred_10) {
              
            }
            else {
              mpz_t __stady_gmp_48;
              __gmpz_init_set(__stady_gmp_48,__q_k);
              int __stady_term_25;
              __stady_term_25 = (int)__gmpz_get_si(__stady_gmp_48);
              __gmpz_clear(__stady_gmp_48);
              mpz_t __stady_gmp_49;
              __gmpz_init_set(__stady_gmp_49,__q_k);
              mpz_t __stady_gmp_50;
              __gmpz_init_set_str(__stady_gmp_50,"2",10);
              mpz_t __stady_gmp_51;
              __gmpz_init(__stady_gmp_51);
              __gmpz_sub(__stady_gmp_51,__stady_gmp_49,__stady_gmp_50);
              __gmpz_clear(__stady_gmp_49);
              __gmpz_clear(__stady_gmp_50);
              int __stady_term_26;
              __stady_term_26 = (int)__gmpz_get_si(__stady_gmp_51);
              __gmpz_clear(__stady_gmp_51);
              __stady_pred_10 = *(t + __stady_term_25) == *(t + __stady_term_26);
            }
            __stady_pred_9 = __stady_pred_10;
            __gmpz_add_ui(__q_k,__q_k,1);
            __stady_term_22 = __gmpz_cmp(__q_k,__stady_gmp_43);
          }
          __gmpz_clear(__q_k);
          __gmpz_clear(__stady_gmp_40);
          __gmpz_clear(__stady_gmp_43);
        }
        if(! __stady_pred_9) {
          pathcrawler_assert_exception("Loop invariant not preserved!",7);
        }
        mpz_t __stady_gmp_56;
        __gmpz_init_set_si(__stady_gmp_56,n);
        mpz_t __stady_gmp_57;
        __gmpz_init_set_si(__stady_gmp_57,i);
        mpz_t __stady_gmp_58;
        __gmpz_init(__stady_gmp_58);
        __gmpz_sub(__stady_gmp_58,__stady_gmp_56,__stady_gmp_57);
        __gmpz_clear(__stady_gmp_56);
        __gmpz_clear(__stady_gmp_57);
        int __stady_term_28;
        __stady_term_28 = __gmpz_cmp(__stady_gmp_58,__stady_gmp_55);
        if(__stady_term_28 >= 0) {
          pathcrawler_assert_exception("Variant non decreasing",0);
        }
        __gmpz_clear(__stady_gmp_55);
        }
         
    }
    free(old_ptr_t);
    return;
  }
}


[kernel] Parsing FRAMAC_SHARE/libc/__fc_builtin_for_normalization.i (no preprocessing)
[kernel] Parsing __sd_instru_inv_preserved_f.c (with preprocessing)
[kernel] Parsing FRAMAC_SHARE/libc/__fc_builtin_for_normalization.i (no preprocessing)
[kernel] Parsing __sd_instru_inv_preserved_f.c (with preprocessing)
[pc] analyzing...
[pc] Compiling pathcrawler___sd_instru_inv_preserved_f/lanceur_f utilities ...
[pc] Compiling pathcrawler___sd_instru_inv_preserved_f/lanceur_f ...
[pc] generating tests...
[pc] Starting lanceur_f (isc version)
[pc] Starting lanceur_pathcrawler__f_precond (isc version)
[pc] Starting lanceur_f (isc version)
[pc] Starting lanceur_f (isc version)
[pc] generation finished
[stady] all-paths: true
[stady] 244 test cases
[stady]  Counter-example for loop invariant
                              ∀ ℤ k;
                                2 ≤ k < i-1 ⇒
                                *(t+k) ≡ *(t+(k-1)) ∨ *(t+k) ≡ *(t+(k-2));
[stady]  testcases___sd_instru_inv_preserved_f/f/testdrivers/TC_20.c
[stady]           variable|            input|  concrete output|  symbolic output
[stady]     __stady_term_2|                4|                 |
[stady]  __stady_term_3[0]|          -211632|                 |
[stady]  __stady_term_3[1]|            30702|                 |
[stady]  __stady_term_3[2]|            44912|                 |
[stady]  __stady_term_3[3]|            85041|                 |
[stady]  __stady_term_3[4]|          -119168|                 |
[stady]                  n|                5|                 |
[stady]               t[0]|                0|                 |
[stady]               t[1]|      -1073824500|                 |
[stady]               t[2]|          -141675|                0|             t[0]
[stady]               t[3]|          -109938|            85041|__stady_term_3[3]
[stady]               t[4]|          -126194|            85041|__stady_term_3[3]
[report] Computing properties status...

--------------------------------------------------------------------------------
--- Properties of Function 'f'
--------------------------------------------------------------------------------

[   Bug   ] Invariant (file tests/inv_preserved/inv_preserved.c, line 23)
            by StaDy.

--------------------------------------------------------------------------------
--- Status Report Summary
--------------------------------------------------------------------------------
     1 Bugs found
     1 Total
--------------------------------------------------------------------------------
