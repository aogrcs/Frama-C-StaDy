[kernel] preprocessing with "gcc -C -E -I.  tests/deleteSubstr1c/deleteSubstr1c.c"
[kernel] preprocessing with "gcc -C -E -I.  externals.c"
tests/deleteSubstr1c/deleteSubstr1c.c:68:[stady] warning: Native Precondition:
                 \separated(dest+(0 .. strlen-1), substr+(0 .. sublen-1)) unsupported
tests/deleteSubstr1c/deleteSubstr1c.c:68:[stady] warning: Native Precondition:
                 \separated(dest+(0 .. strlen-1), str+(0 .. strlen-1)) unsupported
[stady:generated-pl] generated Prolog precondition:
:- module(test_parameters).
:- import create_input_val/3 from substitution.
:- export dom/4.
:- export create_input_vals/2.
:- export unquantif_preconds/2.
:- export quantif_preconds/2.
:- export strategy/2.
:- export precondition_of/2.

dom(0,0,0,0).
dom('delete_substr', dim('str'), [], int([1..4294967295])).
dom('delete_substr', dim('substr'), [], int([1..4294967295])).
dom('delete_substr', dim('dest'), [], int([1..4294967295])).
dom('delete_substr', cont('str',_), [], int([-128..127])).
dom('delete_substr', cont('substr',_), [], int([-128..127])).
dom('delete_substr', cont('dest',_), [], int([-128..127])).
dom('pathcrawler__delete_substr_precond',A,B,C) :-
  dom('delete_substr',A,B,C).
create_input_vals('delete_substr', Ins):-
  create_input_val(dim('str'), int([1..4294967295]),Ins),
  create_input_val(dim('substr'), int([1..4294967295]),Ins),
  create_input_val(dim('dest'), int([1..4294967295]),Ins),
  create_input_val('strlen', int([-2147483648..2]),Ins),
  create_input_val('sublen', int([1..2147483647]),Ins),
  true.
create_input_vals('pathcrawler__delete_substr_precond',Ins) :-
  create_input_vals('delete_substr',Ins).
quantif_preconds('delete_substr',
  [
  ]
).
quantif_preconds('pathcrawler__delete_substr_precond',A) :-
  quantif_preconds('delete_substr',A).
unquantif_preconds('delete_substr',
  [
    cond(egal,dim('substr'),+(int(math), -(int(math), 'sublen', 1), 1),pre),
    cond(egal,dim('dest'),+(int(math), -(int(math), 'strlen', 1), 1),pre),
    cond(egal,dim('str'),+(int(math), -(int(math), 'strlen', 1), 1),pre),
    cond(infegal,'sublen','strlen',pre)
  ]
).
unquantif_preconds('pathcrawler__delete_substr_precond',A) :-
  unquantif_preconds('delete_substr',A).
strategy('delete_substr',[]).
strategy('pathcrawler__delete_substr_precond',A) :-
  strategy('delete_substr',A).
precondition_of('delete_substr','pathcrawler__delete_substr_precond').
tests/deleteSubstr1c/deleteSubstr1c.c:68:[stady] warning: \separated(dest+(0 .. strlen-1), substr+(0 .. sublen-1)) unsupported
tests/deleteSubstr1c/deleteSubstr1c.c:68:[stady] warning: \separated(dest+(0 .. strlen-1), str+(0 .. strlen-1)) unsupported
[stady:generated-c] generated C file:
/* Generated by Frama-C */
struct __anonstruct___mpz_struct_1 {int _mp_alloc ;int _mp_size ;unsigned long *_mp_d ;};typedef struct __anonstruct___mpz_struct_1 __mpz_struct;typedef __mpz_struct mpz_t[1];
extern signed long int __gmpz_get_si(mpz_t);
extern int __gmpz_cmp_ui(mpz_t, unsigned long int);
extern int __gmpz_cmp(mpz_t, mpz_t);
extern void __gmpz_clear(mpz_t);
extern void __gmpz_init(mpz_t);
extern void __gmpz_init_set(mpz_t, mpz_t);
extern void __gmpz_init_set_si(mpz_t, signed long int);
extern void __gmpz_init_set_str(mpz_t, const char*, int);
extern void __gmpz_add(mpz_t, const mpz_t, const mpz_t);
extern void __gmpz_add_ui(mpz_t, const mpz_t, unsigned long int);
extern void __gmpz_sub(mpz_t, const mpz_t, const mpz_t);
extern void __gmpz_ui_sub(mpz_t, unsigned long int, const mpz_t);
extern int pathcrawler_assert_exception(char*,int);
extern int pathcrawler_dimension(void*);
extern void pathcrawler_to_framac(char*);
extern void* malloc(unsigned long);
extern void free(void*);
int find_substr(char *str, int strlen, char *substr, int sublen)
{
  mpz_t __stady_gmp_0;
  __gmpz_init_set_str(__stady_gmp_0, "0", 10);
  mpz_t __stady_gmp_1;
  __gmpz_init_set_si(__stady_gmp_1, sublen);
  int __stady_term_0;
  __stady_term_0 = __gmpz_cmp(__stady_gmp_0, __stady_gmp_1);
  __gmpz_clear(__stady_gmp_0);
  __gmpz_clear(__stady_gmp_1);
  int __stady_pred_0;
  __stady_pred_0 = __stady_term_0 < 0;
  if(__stady_pred_0) {
    __stady_pred_0 = sublen <= strlen;
  }
  if(! __stady_pred_0) {
    pathcrawler_assert_exception("Pre-condition!", 25);
  }
  mpz_t __stady_gmp_2;
  __gmpz_init_set_si(__stady_gmp_2, strlen);
  mpz_t __stady_gmp_3;
  __gmpz_init_set_str(__stady_gmp_3, "1", 10);
  mpz_t __stady_gmp_4;
  __gmpz_init(__stady_gmp_4);
  __gmpz_sub(__stady_gmp_4, __stady_gmp_2, __stady_gmp_3);
  __gmpz_clear(__stady_gmp_2);
  __gmpz_clear(__stady_gmp_3);
  int __stady_pred_1;
  int __stady_term_1;
  __stady_term_1 = __gmpz_cmp_ui(__stady_gmp_4, 0);
  int __stady_term_2;
  __stady_term_2 = pathcrawler_dimension(str);
  int __stady_term_3;
  __stady_term_3 = __gmpz_cmp_ui(__stady_gmp_4, __stady_term_2);
  __stady_pred_1 = __stady_term_1 >= 0 && __stady_term_3 < 0;
  __gmpz_clear(__stady_gmp_4);
  if(! __stady_pred_1) {
    pathcrawler_assert_exception("Pre-condition!", 34);
  }
  mpz_t __stady_gmp_5;
  __gmpz_init_set_si(__stady_gmp_5, sublen);
  mpz_t __stady_gmp_6;
  __gmpz_init_set_str(__stady_gmp_6, "1", 10);
  mpz_t __stady_gmp_7;
  __gmpz_init(__stady_gmp_7);
  __gmpz_sub(__stady_gmp_7, __stady_gmp_5, __stady_gmp_6);
  __gmpz_clear(__stady_gmp_5);
  __gmpz_clear(__stady_gmp_6);
  int __stady_pred_2;
  int __stady_term_4;
  __stady_term_4 = __gmpz_cmp_ui(__stady_gmp_7, 0);
  int __stady_term_5;
  __stady_term_5 = pathcrawler_dimension(substr);
  int __stady_term_6;
  __stady_term_6 = __gmpz_cmp_ui(__stady_gmp_7, __stady_term_5);
  __stady_pred_2 = __stady_term_4 >= 0 && __stady_term_6 < 0;
  __gmpz_clear(__stady_gmp_7);
  if(! __stady_pred_2) {
    pathcrawler_assert_exception("Pre-condition!", 9);
  }
  char *old_str;
  char *old_ptr_str;
  old_str = str;
  mpz_t __stady_gmp_43;
  __gmpz_init_set_si(__stady_gmp_43, strlen);
  int __stady_term_21;
  unsigned long __stady_term_22;
  __stady_term_22 = __gmpz_get_si(__stady_gmp_43);
  old_ptr_str = malloc(__stady_term_22 * (unsigned long)sizeof(char));
  __stady_term_22 = __gmpz_get_si(__stady_gmp_43);
  for(__stady_term_21 = 0; (unsigned long)__stady_term_21 < __stady_term_22; __stady_term_21 = 
    __stady_term_21 + 1) {
    old_ptr_str[__stady_term_21] = str[__stady_term_21];
  }
  __gmpz_clear(__stady_gmp_43);
  int old_strlen;
  old_strlen = strlen;
  char *old_substr;
  char *old_ptr_substr;
  old_substr = substr;
  mpz_t __stady_gmp_44;
  __gmpz_init_set_si(__stady_gmp_44, sublen);
  int __stady_term_23;
  unsigned long __stady_term_24;
  __stady_term_24 = __gmpz_get_si(__stady_gmp_44);
  old_ptr_substr = malloc(__stady_term_24 * (unsigned long)sizeof(char));
  __stady_term_24 = __gmpz_get_si(__stady_gmp_44);
  for(__stady_term_23 = 0; (unsigned long)__stady_term_23 < __stady_term_24; __stady_term_23 = 
    __stady_term_23 + 1) {
    old_ptr_substr[__stady_term_23] = substr[__stady_term_23];
  }
  __gmpz_clear(__stady_gmp_44);
  int old_sublen;
  old_sublen = sublen;
  {
    int __retres;
    int i;
    i = 0;
    i = 0;
    {
      mpz_t __stady_gmp_71;
      __gmpz_init_set_str(__stady_gmp_71, "0", 10);
      mpz_t __stady_gmp_72;
      __gmpz_init_set_si(__stady_gmp_72, i);
      int __stady_term_34;
      __stady_term_34 = __gmpz_cmp(__stady_gmp_71, __stady_gmp_72);
      __gmpz_clear(__stady_gmp_71);
      __gmpz_clear(__stady_gmp_72);
      int __stady_pred_13;
      __stady_pred_13 = __stady_term_34 <= 0;
      if(__stady_pred_13) {
        mpz_t __stady_gmp_73;
        __gmpz_init_set_si(__stady_gmp_73, i);
        mpz_t __stady_gmp_74;
        __gmpz_init_set_si(__stady_gmp_74, strlen);
        mpz_t __stady_gmp_75;
        __gmpz_init_set_si(__stady_gmp_75, sublen);
        mpz_t __stady_gmp_76;
        __gmpz_init(__stady_gmp_76);
        __gmpz_sub(__stady_gmp_76, __stady_gmp_74, __stady_gmp_75);
        __gmpz_clear(__stady_gmp_74);
        __gmpz_clear(__stady_gmp_75);
        int __stady_term_35;
        __stady_term_35 = __gmpz_cmp(__stady_gmp_73, __stady_gmp_76);
        __gmpz_clear(__stady_gmp_73);
        __gmpz_clear(__stady_gmp_76);
        __stady_pred_13 = __stady_term_35 <= 0;
      }
      if(! __stady_pred_13) {
        pathcrawler_assert_exception("Loop invariant not established!", 15);
      }
      int __stady_pred_15;
      __stady_pred_15 = 1;
      {
        mpz_t __q_k;
        mpz_t __stady_gmp_83;
        __gmpz_init_set_str(__stady_gmp_83, "0", 10);
        mpz_t __stady_gmp_84;
        __gmpz_init_set_si(__stady_gmp_84, i);
        __gmpz_init_set(__q_k, __stady_gmp_83);
        int __stady_term_38;
        __stady_term_38 = __gmpz_cmp(__q_k, __stady_gmp_84);
        for(; __stady_term_38 < 0 && __stady_pred_15; ) {
          int __stady_pred_16;
          __stady_pred_16 = 0;
          {
            mpz_t __q_l;
            mpz_t __stady_gmp_85;
            __gmpz_init_set_str(__stady_gmp_85, "0", 10);
            mpz_t __stady_gmp_86;
            __gmpz_init_set_si(__stady_gmp_86, sublen);
            __gmpz_init_set(__q_l, __stady_gmp_85);
            int __stady_term_39;
            __stady_term_39 = __gmpz_cmp(__q_l, __stady_gmp_86);
            for(; __stady_term_39 < 0 && ! __stady_pred_16; ) {
              mpz_t __stady_gmp_87;
              __gmpz_init_set(__stady_gmp_87, __q_k);
              mpz_t __stady_gmp_88;
              __gmpz_init_set(__stady_gmp_88, __q_l);
              mpz_t __stady_gmp_89;
              __gmpz_init(__stady_gmp_89);
              __gmpz_add(__stady_gmp_89, __stady_gmp_87, __stady_gmp_88);
              __gmpz_clear(__stady_gmp_87);
              __gmpz_clear(__stady_gmp_88);
              int __stady_term_40;
              __stady_term_40 = __gmpz_get_si(__stady_gmp_89);
              __gmpz_clear(__stady_gmp_89);
              mpz_t __stady_gmp_90;
              __gmpz_init_set(__stady_gmp_90, __q_l);
              int __stady_term_41;
              __stady_term_41 = __gmpz_get_si(__stady_gmp_90);
              __gmpz_clear(__stady_gmp_90);
              __stady_pred_16 = (int)*(str + __stady_term_40) != (int)*(
                                substr + __stady_term_41);
              __gmpz_add_ui(__q_l, __q_l, 1);
              __stady_term_39 = __gmpz_cmp(__q_l, __stady_gmp_86);
            }
            __gmpz_clear(__q_l);
            __gmpz_clear(__stady_gmp_85);
            __gmpz_clear(__stady_gmp_86);
          }
          __stady_pred_15 = __stady_pred_16;
          __gmpz_add_ui(__q_k, __q_k, 1);
          __stady_term_38 = __gmpz_cmp(__q_k, __stady_gmp_84);
        }
        __gmpz_clear(__q_k);
        __gmpz_clear(__stady_gmp_83);
        __gmpz_clear(__stady_gmp_84);
      }
      if(! __stady_pred_15) {
        pathcrawler_assert_exception("Loop invariant not established!", 23);
      }
      mpz_t __stady_gmp_99;
      __gmpz_init_set_si(__stady_gmp_99, strlen);
      mpz_t __stady_gmp_100;
      __gmpz_init_set_si(__stady_gmp_100, sublen);
      mpz_t __stady_gmp_101;
      __gmpz_init(__stady_gmp_101);
      __gmpz_sub(__stady_gmp_101, __stady_gmp_99, __stady_gmp_100);
      __gmpz_clear(__stady_gmp_99);
      __gmpz_clear(__stady_gmp_100);
      mpz_t __stady_gmp_102;
      __gmpz_init_set_si(__stady_gmp_102, i);
      mpz_t __stady_gmp_103;
      __gmpz_init(__stady_gmp_103);
      __gmpz_sub(__stady_gmp_103, __stady_gmp_101, __stady_gmp_102);
      __gmpz_clear(__stady_gmp_101);
      __gmpz_clear(__stady_gmp_102);
      int __stady_term_46;
      __stady_term_46 = __gmpz_cmp_ui(__stady_gmp_103, 0);
      if(__stady_term_46 < 0) {
        pathcrawler_assert_exception("Variant non positive", 8);
      }
      while (1) {
        mpz_t __stady_gmp_104;
        __gmpz_init_set_si(__stady_gmp_104, strlen);
        mpz_t __stady_gmp_105;
        __gmpz_init_set_si(__stady_gmp_105, sublen);
        mpz_t __stady_gmp_106;
        __gmpz_init(__stady_gmp_106);
        __gmpz_sub(__stady_gmp_106, __stady_gmp_104, __stady_gmp_105);
        __gmpz_clear(__stady_gmp_104);
        __gmpz_clear(__stady_gmp_105);
        mpz_t __stady_gmp_107;
        __gmpz_init_set_si(__stady_gmp_107, i);
        mpz_t __stady_gmp_108;
        __gmpz_init(__stady_gmp_108);
        __gmpz_sub(__stady_gmp_108, __stady_gmp_106, __stady_gmp_107);
        __gmpz_clear(__stady_gmp_106);
        __gmpz_clear(__stady_gmp_107);
        mpz_t __stady_gmp_109;
        __gmpz_init_set(__stady_gmp_109, __stady_gmp_108);
        {
          if (! (i < strlen - sublen)) {
                                         pathcrawler_to_framac("@FC:REACHABLE_STMT:6");
                                         break;
                                       }
          {
            int j;
            j = 0;
            j = 0;
            {
              mpz_t __stady_gmp_45;
              __gmpz_init_set_str(__stady_gmp_45, "0", 10);
              mpz_t __stady_gmp_46;
              __gmpz_init_set_si(__stady_gmp_46, j);
              int __stady_term_25;
              __stady_term_25 = __gmpz_cmp(__stady_gmp_45, __stady_gmp_46);
              __gmpz_clear(__stady_gmp_45);
              __gmpz_clear(__stady_gmp_46);
              int __stady_pred_9;
              __stady_pred_9 = __stady_term_25 <= 0;
              if(__stady_pred_9) {
                __stady_pred_9 = j <= sublen;
              }
              if(! __stady_pred_9) {
                pathcrawler_assert_exception("Loop invariant not established!", 
                20);
              }
              int __stady_pred_11;
              __stady_pred_11 = 1;
              {
                mpz_t __q_k;
                mpz_t __stady_gmp_49;
                __gmpz_init_set_str(__stady_gmp_49, "0", 10);
                mpz_t __stady_gmp_50;
                __gmpz_init_set_si(__stady_gmp_50, j);
                __gmpz_init_set(__q_k, __stady_gmp_49);
                int __stady_term_27;
                __stady_term_27 = __gmpz_cmp(__q_k, __stady_gmp_50);
                for(; __stady_term_27 < 0 && __stady_pred_11; ) {
                  mpz_t __stady_gmp_51;
                  __gmpz_init_set_si(__stady_gmp_51, i);
                  mpz_t __stady_gmp_52;
                  __gmpz_init_set(__stady_gmp_52, __q_k);
                  mpz_t __stady_gmp_53;
                  __gmpz_init(__stady_gmp_53);
                  __gmpz_add(__stady_gmp_53, __stady_gmp_51, __stady_gmp_52);
                  __gmpz_clear(__stady_gmp_51);
                  __gmpz_clear(__stady_gmp_52);
                  int __stady_term_28;
                  __stady_term_28 = __gmpz_get_si(__stady_gmp_53);
                  __gmpz_clear(__stady_gmp_53);
                  mpz_t __stady_gmp_54;
                  __gmpz_init_set(__stady_gmp_54, __q_k);
                  int __stady_term_29;
                  __stady_term_29 = __gmpz_get_si(__stady_gmp_54);
                  __gmpz_clear(__stady_gmp_54);
                  __stady_pred_11 = (int)*(str + __stady_term_28) == (int)*(
                                    substr + __stady_term_29);
                  __gmpz_add_ui(__q_k, __q_k, 1);
                  __stady_term_27 = __gmpz_cmp(__q_k, __stady_gmp_50);
                }
                __gmpz_clear(__q_k);
                __gmpz_clear(__stady_gmp_49);
                __gmpz_clear(__stady_gmp_50);
              }
              if(! __stady_pred_11) {
                pathcrawler_assert_exception("Loop invariant not established!", 
                27);
              }
              mpz_t __stady_gmp_61;
              __gmpz_init_set_si(__stady_gmp_61, sublen);
              mpz_t __stady_gmp_62;
              __gmpz_init_set_si(__stady_gmp_62, j);
              mpz_t __stady_gmp_63;
              __gmpz_init(__stady_gmp_63);
              __gmpz_sub(__stady_gmp_63, __stady_gmp_61, __stady_gmp_62);
              __gmpz_clear(__stady_gmp_61);
              __gmpz_clear(__stady_gmp_62);
              int __stady_term_33;
              __stady_term_33 = __gmpz_cmp_ui(__stady_gmp_63, 0);
              if(__stady_term_33 < 0) {
                pathcrawler_assert_exception("Variant non positive", 14);
              }
              while (1) {
                mpz_t __stady_gmp_64;
                __gmpz_init_set_si(__stady_gmp_64, sublen);
                mpz_t __stady_gmp_65;
                __gmpz_init_set_si(__stady_gmp_65, j);
                mpz_t __stady_gmp_66;
                __gmpz_init(__stady_gmp_66);
                __gmpz_sub(__stady_gmp_66, __stady_gmp_64, __stady_gmp_65);
                __gmpz_clear(__stady_gmp_64);
                __gmpz_clear(__stady_gmp_65);
                mpz_t __stady_gmp_67;
                __gmpz_init_set(__stady_gmp_67, __stady_gmp_66);
                {
                  if (! (j < sublen)) {
                                        pathcrawler_to_framac("@FC:REACHABLE_STMT:13");
                                        break;
                                      }
                  if ((int)*(str + (i + j)) != (int)*(substr + j)) {
                                                                    pathcrawler_to_framac("@FC:REACHABLE_STMT:17");
                                                                    break;
                                                                   }
                  j ++;
                }mpz_t __stady_gmp_47;
                __gmpz_init_set_str(__stady_gmp_47, "0", 10);
                mpz_t __stady_gmp_48;
                __gmpz_init_set_si(__stady_gmp_48, j);
                int __stady_term_26;
                __stady_term_26 = __gmpz_cmp(__stady_gmp_47, __stady_gmp_48);
                __gmpz_clear(__stady_gmp_47);
                __gmpz_clear(__stady_gmp_48);
                int __stady_pred_10;
                __stady_pred_10 = __stady_term_26 <= 0;
                if(__stady_pred_10) {
                  __stady_pred_10 = j <= sublen;
                }
                if(! __stady_pred_10) {
                  pathcrawler_assert_exception("Loop invariant not preserved!", 
                  20);
                }
                int __stady_pred_12;
                __stady_pred_12 = 1;
                {
                  mpz_t __q_k;
                  mpz_t __stady_gmp_55;
                  __gmpz_init_set_str(__stady_gmp_55, "0", 10);
                  mpz_t __stady_gmp_56;
                  __gmpz_init_set_si(__stady_gmp_56, j);
                  __gmpz_init_set(__q_k, __stady_gmp_55);
                  int __stady_term_30;
                  __stady_term_30 = __gmpz_cmp(__q_k, __stady_gmp_56);
                  for(; __stady_term_30 < 0 && __stady_pred_12; ) {
                    mpz_t __stady_gmp_57;
                    __gmpz_init_set_si(__stady_gmp_57, i);
                    mpz_t __stady_gmp_58;
                    __gmpz_init_set(__stady_gmp_58, __q_k);
                    mpz_t __stady_gmp_59;
                    __gmpz_init(__stady_gmp_59);
                    __gmpz_add(__stady_gmp_59, __stady_gmp_57, 
                    __stady_gmp_58);
                    __gmpz_clear(__stady_gmp_57);
                    __gmpz_clear(__stady_gmp_58);
                    int __stady_term_31;
                    __stady_term_31 = __gmpz_get_si(__stady_gmp_59);
                    __gmpz_clear(__stady_gmp_59);
                    mpz_t __stady_gmp_60;
                    __gmpz_init_set(__stady_gmp_60, __q_k);
                    int __stady_term_32;
                    __stady_term_32 = __gmpz_get_si(__stady_gmp_60);
                    __gmpz_clear(__stady_gmp_60);
                    __stady_pred_12 = (int)*(str + __stady_term_31) == (int)*(
                                      substr + __stady_term_32);
                    __gmpz_add_ui(__q_k, __q_k, 1);
                    __stady_term_30 = __gmpz_cmp(__q_k, __stady_gmp_56);
                  }
                  __gmpz_clear(__q_k);
                  __gmpz_clear(__stady_gmp_55);
                  __gmpz_clear(__stady_gmp_56);
                }
                if(! __stady_pred_12) {
                  pathcrawler_assert_exception("Loop invariant not preserved!", 
                  27);
                }
                mpz_t __stady_gmp_68;
                __gmpz_init_set_si(__stady_gmp_68, sublen);
                mpz_t __stady_gmp_69;
                __gmpz_init_set_si(__stady_gmp_69, j);
                mpz_t __stady_gmp_70;
                __gmpz_init(__stady_gmp_70);
                __gmpz_sub(__stady_gmp_70, __stady_gmp_68, __stady_gmp_69);
                __gmpz_clear(__stady_gmp_68);
                __gmpz_clear(__stady_gmp_69);
                __stady_term_33 = __gmpz_cmp_ui(__stady_gmp_67, 0);
                if(__stady_term_33 < 0) {
                  pathcrawler_assert_exception("Variant non positive", 14);
                }
                __stady_term_33 = __gmpz_cmp(__stady_gmp_70, __stady_gmp_67);
                if(__stady_term_33 >= 0) {
                  pathcrawler_assert_exception("Variant non decreasing", 14);
                }
                __gmpz_clear(__stady_gmp_67);
                }
                 __gmpz_clear(__stady_gmp_63);
              
            }
            if (j == sublen) {
              {
                pathcrawler_to_framac("@FC:REACHABLE_STMT:23");
                __retres = i;
              }
              goto return_label;
            }
          }
          i ++;
        }mpz_t __stady_gmp_77;
        __gmpz_init_set_str(__stady_gmp_77, "0", 10);
        mpz_t __stady_gmp_78;
        __gmpz_init_set_si(__stady_gmp_78, i);
        int __stady_term_36;
        __stady_term_36 = __gmpz_cmp(__stady_gmp_77, __stady_gmp_78);
        __gmpz_clear(__stady_gmp_77);
        __gmpz_clear(__stady_gmp_78);
        int __stady_pred_14;
        __stady_pred_14 = __stady_term_36 <= 0;
        if(__stady_pred_14) {
          mpz_t __stady_gmp_79;
          __gmpz_init_set_si(__stady_gmp_79, i);
          mpz_t __stady_gmp_80;
          __gmpz_init_set_si(__stady_gmp_80, strlen);
          mpz_t __stady_gmp_81;
          __gmpz_init_set_si(__stady_gmp_81, sublen);
          mpz_t __stady_gmp_82;
          __gmpz_init(__stady_gmp_82);
          __gmpz_sub(__stady_gmp_82, __stady_gmp_80, __stady_gmp_81);
          __gmpz_clear(__stady_gmp_80);
          __gmpz_clear(__stady_gmp_81);
          int __stady_term_37;
          __stady_term_37 = __gmpz_cmp(__stady_gmp_79, __stady_gmp_82);
          __gmpz_clear(__stady_gmp_79);
          __gmpz_clear(__stady_gmp_82);
          __stady_pred_14 = __stady_term_37 <= 0;
        }
        if(! __stady_pred_14) {
          pathcrawler_assert_exception("Loop invariant not preserved!", 15);
        }
        int __stady_pred_17;
        __stady_pred_17 = 1;
        {
          mpz_t __q_k;
          mpz_t __stady_gmp_91;
          __gmpz_init_set_str(__stady_gmp_91, "0", 10);
          mpz_t __stady_gmp_92;
          __gmpz_init_set_si(__stady_gmp_92, i);
          __gmpz_init_set(__q_k, __stady_gmp_91);
          int __stady_term_42;
          __stady_term_42 = __gmpz_cmp(__q_k, __stady_gmp_92);
          for(; __stady_term_42 < 0 && __stady_pred_17; ) {
            int __stady_pred_18;
            __stady_pred_18 = 0;
            {
              mpz_t __q_l;
              mpz_t __stady_gmp_93;
              __gmpz_init_set_str(__stady_gmp_93, "0", 10);
              mpz_t __stady_gmp_94;
              __gmpz_init_set_si(__stady_gmp_94, sublen);
              __gmpz_init_set(__q_l, __stady_gmp_93);
              int __stady_term_43;
              __stady_term_43 = __gmpz_cmp(__q_l, __stady_gmp_94);
              for(; __stady_term_43 < 0 && ! __stady_pred_18; ) {
                mpz_t __stady_gmp_95;
                __gmpz_init_set(__stady_gmp_95, __q_k);
                mpz_t __stady_gmp_96;
                __gmpz_init_set(__stady_gmp_96, __q_l);
                mpz_t __stady_gmp_97;
                __gmpz_init(__stady_gmp_97);
                __gmpz_add(__stady_gmp_97, __stady_gmp_95, __stady_gmp_96);
                __gmpz_clear(__stady_gmp_95);
                __gmpz_clear(__stady_gmp_96);
                int __stady_term_44;
                __stady_term_44 = __gmpz_get_si(__stady_gmp_97);
                __gmpz_clear(__stady_gmp_97);
                mpz_t __stady_gmp_98;
                __gmpz_init_set(__stady_gmp_98, __q_l);
                int __stady_term_45;
                __stady_term_45 = __gmpz_get_si(__stady_gmp_98);
                __gmpz_clear(__stady_gmp_98);
                __stady_pred_18 = (int)*(str + __stady_term_44) != (int)*(
                                  substr + __stady_term_45);
                __gmpz_add_ui(__q_l, __q_l, 1);
                __stady_term_43 = __gmpz_cmp(__q_l, __stady_gmp_94);
              }
              __gmpz_clear(__q_l);
              __gmpz_clear(__stady_gmp_93);
              __gmpz_clear(__stady_gmp_94);
            }
            __stady_pred_17 = __stady_pred_18;
            __gmpz_add_ui(__q_k, __q_k, 1);
            __stady_term_42 = __gmpz_cmp(__q_k, __stady_gmp_92);
          }
          __gmpz_clear(__q_k);
          __gmpz_clear(__stady_gmp_91);
          __gmpz_clear(__stady_gmp_92);
        }
        if(! __stady_pred_17) {
          pathcrawler_assert_exception("Loop invariant not preserved!", 23);
        }
        mpz_t __stady_gmp_110;
        __gmpz_init_set_si(__stady_gmp_110, strlen);
        mpz_t __stady_gmp_111;
        __gmpz_init_set_si(__stady_gmp_111, sublen);
        mpz_t __stady_gmp_112;
        __gmpz_init(__stady_gmp_112);
        __gmpz_sub(__stady_gmp_112, __stady_gmp_110, __stady_gmp_111);
        __gmpz_clear(__stady_gmp_110);
        __gmpz_clear(__stady_gmp_111);
        mpz_t __stady_gmp_113;
        __gmpz_init_set_si(__stady_gmp_113, i);
        mpz_t __stady_gmp_114;
        __gmpz_init(__stady_gmp_114);
        __gmpz_sub(__stady_gmp_114, __stady_gmp_112, __stady_gmp_113);
        __gmpz_clear(__stady_gmp_112);
        __gmpz_clear(__stady_gmp_113);
        __stady_term_46 = __gmpz_cmp_ui(__stady_gmp_109, 0);
        if(__stady_term_46 < 0) {
          pathcrawler_assert_exception("Variant non positive", 8);
        }
        __stady_term_46 = __gmpz_cmp(__stady_gmp_114, __stady_gmp_109);
        if(__stady_term_46 >= 0) {
          pathcrawler_assert_exception("Variant non decreasing", 8);
        }
        __gmpz_clear(__stady_gmp_109);
        }
         __gmpz_clear(__stady_gmp_103);
      
    }
    __retres = -1;
    return_label:
      {
        int __stady_pred_3;
        __stady_pred_3 = 0;
        {
          mpz_t __q_i;
          mpz_t __stady_gmp_8;
          __gmpz_init_set_str(__stady_gmp_8, "0", 10);
          mpz_t __stady_gmp_9;
          __gmpz_init_set_si(__stady_gmp_9, strlen);
          mpz_t __stady_gmp_10;
          __gmpz_init_set_si(__stady_gmp_10, sublen);
          mpz_t __stady_gmp_11;
          __gmpz_init(__stady_gmp_11);
          __gmpz_sub(__stady_gmp_11, __stady_gmp_9, __stady_gmp_10);
          __gmpz_clear(__stady_gmp_9);
          __gmpz_clear(__stady_gmp_10);
          __gmpz_init_set(__q_i, __stady_gmp_8);
          int __stady_term_7;
          __stady_term_7 = __gmpz_cmp(__q_i, __stady_gmp_11);
          for(; __stady_term_7 < 0 && ! __stady_pred_3; ) {
            int __stady_pred_4;
            __stady_pred_4 = 1;
            {
              mpz_t __q_j;
              mpz_t __stady_gmp_12;
              __gmpz_init_set_str(__stady_gmp_12, "0", 10);
              mpz_t __stady_gmp_13;
              __gmpz_init_set_si(__stady_gmp_13, sublen);
              __gmpz_init_set(__q_j, __stady_gmp_12);
              int __stady_term_8;
              __stady_term_8 = __gmpz_cmp(__q_j, __stady_gmp_13);
              for(; __stady_term_8 < 0 && __stady_pred_4; ) {
                mpz_t __stady_gmp_14;
                __gmpz_init_set(__stady_gmp_14, __q_i);
                mpz_t __stady_gmp_15;
                __gmpz_init_set(__stady_gmp_15, __q_j);
                mpz_t __stady_gmp_16;
                __gmpz_init(__stady_gmp_16);
                __gmpz_add(__stady_gmp_16, __stady_gmp_14, __stady_gmp_15);
                __gmpz_clear(__stady_gmp_14);
                __gmpz_clear(__stady_gmp_15);
                int __stady_term_9;
                __stady_term_9 = __gmpz_get_si(__stady_gmp_16);
                __gmpz_clear(__stady_gmp_16);
                mpz_t __stady_gmp_17;
                __gmpz_init_set(__stady_gmp_17, __q_j);
                int __stady_term_10;
                __stady_term_10 = __gmpz_get_si(__stady_gmp_17);
                __gmpz_clear(__stady_gmp_17);
                __stady_pred_4 = (int)*(str + __stady_term_9) == (int)*(
                                 substr + __stady_term_10);
                __gmpz_add_ui(__q_j, __q_j, 1);
                __stady_term_8 = __gmpz_cmp(__q_j, __stady_gmp_13);
              }
              __gmpz_clear(__q_j);
              __gmpz_clear(__stady_gmp_12);
              __gmpz_clear(__stady_gmp_13);
            }
            __stady_pred_3 = __stady_pred_4;
            __gmpz_add_ui(__q_i, __q_i, 1);
            __stady_term_7 = __gmpz_cmp(__q_i, __stady_gmp_11);
          }
          __gmpz_clear(__q_i);
          __gmpz_clear(__stady_gmp_8);
          __gmpz_clear(__stady_gmp_11);
        }
        if(__stady_pred_3) {
          mpz_t __stady_gmp_18;
          __gmpz_init_set_str(__stady_gmp_18, "0", 10);
          mpz_t __stady_gmp_19;
          __gmpz_init_set_si(__stady_gmp_19, __retres);
          int __stady_term_11;
          __stady_term_11 = __gmpz_cmp(__stady_gmp_18, __stady_gmp_19);
          __gmpz_clear(__stady_gmp_18);
          __gmpz_clear(__stady_gmp_19);
          int __stady_pred_5;
          __stady_pred_5 = __stady_term_11 <= 0;
          if(__stady_pred_5) {
            mpz_t __stady_gmp_20;
            __gmpz_init_set_si(__stady_gmp_20, __retres);
            mpz_t __stady_gmp_21;
            __gmpz_init_set_si(__stady_gmp_21, old_strlen);
            mpz_t __stady_gmp_22;
            __gmpz_init_set_si(__stady_gmp_22, old_sublen);
            mpz_t __stady_gmp_23;
            __gmpz_init(__stady_gmp_23);
            __gmpz_sub(__stady_gmp_23, __stady_gmp_21, __stady_gmp_22);
            __gmpz_clear(__stady_gmp_21);
            __gmpz_clear(__stady_gmp_22);
            int __stady_term_12;
            __stady_term_12 = __gmpz_cmp(__stady_gmp_20, __stady_gmp_23);
            __gmpz_clear(__stady_gmp_20);
            __gmpz_clear(__stady_gmp_23);
            __stady_pred_5 = __stady_term_12 < 0;
          }
          if(! __stady_pred_5) {
            pathcrawler_assert_exception("Post-condition!", 22);
          }
          int __stady_pred_6;
          __stady_pred_6 = 1;
          {
            mpz_t __q_j;
            mpz_t __stady_gmp_24;
            __gmpz_init_set_str(__stady_gmp_24, "0", 10);
            mpz_t __stady_gmp_25;
            __gmpz_init_set_si(__stady_gmp_25, old_sublen);
            __gmpz_init_set(__q_j, __stady_gmp_24);
            int __stady_term_13;
            __stady_term_13 = __gmpz_cmp(__q_j, __stady_gmp_25);
            for(; __stady_term_13 < 0 && __stady_pred_6; ) {
              mpz_t __stady_gmp_26;
              __gmpz_init_set_si(__stady_gmp_26, __retres);
              mpz_t __stady_gmp_27;
              __gmpz_init_set(__stady_gmp_27, __q_j);
              mpz_t __stady_gmp_28;
              __gmpz_init(__stady_gmp_28);
              __gmpz_add(__stady_gmp_28, __stady_gmp_26, __stady_gmp_27);
              __gmpz_clear(__stady_gmp_26);
              __gmpz_clear(__stady_gmp_27);
              int __stady_term_14;
              __stady_term_14 = __gmpz_get_si(__stady_gmp_28);
              __gmpz_clear(__stady_gmp_28);
              mpz_t __stady_gmp_29;
              __gmpz_init_set(__stady_gmp_29, __q_j);
              int __stady_term_15;
              __stady_term_15 = __gmpz_get_si(__stady_gmp_29);
              __gmpz_clear(__stady_gmp_29);
              __stady_pred_6 = (int)*(old_str + __stady_term_14) == (int)*(
                               old_substr + __stady_term_15);
              __gmpz_add_ui(__q_j, __q_j, 1);
              __stady_term_13 = __gmpz_cmp(__q_j, __stady_gmp_25);
            }
            __gmpz_clear(__q_j);
            __gmpz_clear(__stady_gmp_24);
            __gmpz_clear(__stady_gmp_25);
          }
          if(! __stady_pred_6) {
            pathcrawler_assert_exception("Post-condition!", 29);
          }
        }
        int __stady_pred_7;
        __stady_pred_7 = 1;
        {
          mpz_t __q_i;
          mpz_t __stady_gmp_30;
          __gmpz_init_set_str(__stady_gmp_30, "0", 10);
          mpz_t __stady_gmp_31;
          __gmpz_init_set_si(__stady_gmp_31, strlen);
          mpz_t __stady_gmp_32;
          __gmpz_init_set_si(__stady_gmp_32, sublen);
          mpz_t __stady_gmp_33;
          __gmpz_init(__stady_gmp_33);
          __gmpz_sub(__stady_gmp_33, __stady_gmp_31, __stady_gmp_32);
          __gmpz_clear(__stady_gmp_31);
          __gmpz_clear(__stady_gmp_32);
          __gmpz_init_set(__q_i, __stady_gmp_30);
          int __stady_term_16;
          __stady_term_16 = __gmpz_cmp(__q_i, __stady_gmp_33);
          for(; __stady_term_16 < 0 && __stady_pred_7; ) {
            int __stady_pred_8;
            __stady_pred_8 = 0;
            {
              mpz_t __q_j;
              mpz_t __stady_gmp_34;
              __gmpz_init_set_str(__stady_gmp_34, "0", 10);
              mpz_t __stady_gmp_35;
              __gmpz_init_set_si(__stady_gmp_35, sublen);
              __gmpz_init_set(__q_j, __stady_gmp_34);
              int __stady_term_17;
              __stady_term_17 = __gmpz_cmp(__q_j, __stady_gmp_35);
              for(; __stady_term_17 < 0 && ! __stady_pred_8; ) {
                mpz_t __stady_gmp_36;
                __gmpz_init_set(__stady_gmp_36, __q_i);
                mpz_t __stady_gmp_37;
                __gmpz_init_set(__stady_gmp_37, __q_j);
                mpz_t __stady_gmp_38;
                __gmpz_init(__stady_gmp_38);
                __gmpz_add(__stady_gmp_38, __stady_gmp_36, __stady_gmp_37);
                __gmpz_clear(__stady_gmp_36);
                __gmpz_clear(__stady_gmp_37);
                int __stady_term_18;
                __stady_term_18 = __gmpz_get_si(__stady_gmp_38);
                __gmpz_clear(__stady_gmp_38);
                mpz_t __stady_gmp_39;
                __gmpz_init_set(__stady_gmp_39, __q_j);
                int __stady_term_19;
                __stady_term_19 = __gmpz_get_si(__stady_gmp_39);
                __gmpz_clear(__stady_gmp_39);
                __stady_pred_8 = (int)*(str + __stady_term_18) != (int)*(
                                 substr + __stady_term_19);
                __gmpz_add_ui(__q_j, __q_j, 1);
                __stady_term_17 = __gmpz_cmp(__q_j, __stady_gmp_35);
              }
              __gmpz_clear(__q_j);
              __gmpz_clear(__stady_gmp_34);
              __gmpz_clear(__stady_gmp_35);
            }
            __stady_pred_7 = __stady_pred_8;
            __gmpz_add_ui(__q_i, __q_i, 1);
            __stady_term_16 = __gmpz_cmp(__q_i, __stady_gmp_33);
          }
          __gmpz_clear(__q_i);
          __gmpz_clear(__stady_gmp_30);
          __gmpz_clear(__stady_gmp_33);
        }
        if(__stady_pred_7) {
          mpz_t __stady_gmp_40;
          __gmpz_init_set_si(__stady_gmp_40, __retres);
          mpz_t __stady_gmp_41;
          __gmpz_init_set_str(__stady_gmp_41, "1", 10);
          mpz_t __stady_gmp_42;
          __gmpz_init(__stady_gmp_42);
          __gmpz_ui_sub(__stady_gmp_42, 0, __stady_gmp_41);
          __gmpz_clear(__stady_gmp_41);
          int __stady_term_20;
          __stady_term_20 = __gmpz_cmp(__stady_gmp_40, __stady_gmp_42);
          __gmpz_clear(__stady_gmp_40);
          __gmpz_clear(__stady_gmp_42);
          if(! (__stady_term_20 == 0)) {
            pathcrawler_assert_exception("Post-condition!", 16);
          }
        }
      }
      free(old_ptr_str);
      free(old_ptr_substr);
      return __retres;
  }
}

int delete_substr_precond(char *str, int strlen, char *substr, int sublen,
                          char *dest)
{
  return 1;
}

int delete_substr(char *str, int strlen, char *substr, int sublen, char *dest)
{
  char *old_str;
  char *old_ptr_str;
  old_str = str;
  mpz_t __stady_gmp_153;
  __gmpz_init_set_si(__stady_gmp_153, strlen);
  int __stady_term_64;
  unsigned long __stady_term_65;
  __stady_term_65 = __gmpz_get_si(__stady_gmp_153);
  old_ptr_str = malloc(__stady_term_65 * (unsigned long)sizeof(char));
  __stady_term_65 = __gmpz_get_si(__stady_gmp_153);
  for(__stady_term_64 = 0; (unsigned long)__stady_term_64 < __stady_term_65; __stady_term_64 = 
    __stady_term_64 + 1) {
    old_ptr_str[__stady_term_64] = str[__stady_term_64];
  }
  __gmpz_clear(__stady_gmp_153);
  int old_strlen;
  old_strlen = strlen;
  char *old_substr;
  char *old_ptr_substr;
  old_substr = substr;
  mpz_t __stady_gmp_154;
  __gmpz_init_set_si(__stady_gmp_154, sublen);
  int __stady_term_66;
  unsigned long __stady_term_67;
  __stady_term_67 = __gmpz_get_si(__stady_gmp_154);
  old_ptr_substr = malloc(__stady_term_67 * (unsigned long)sizeof(char));
  __stady_term_67 = __gmpz_get_si(__stady_gmp_154);
  for(__stady_term_66 = 0; (unsigned long)__stady_term_66 < __stady_term_67; __stady_term_66 = 
    __stady_term_66 + 1) {
    old_ptr_substr[__stady_term_66] = substr[__stady_term_66];
  }
  __gmpz_clear(__stady_gmp_154);
  int old_sublen;
  old_sublen = sublen;
  char *old_dest;
  char *old_ptr_dest;
  old_dest = dest;
  mpz_t __stady_gmp_155;
  __gmpz_init_set_si(__stady_gmp_155, strlen);
  int __stady_term_68;
  unsigned long __stady_term_69;
  __stady_term_69 = __gmpz_get_si(__stady_gmp_155);
  old_ptr_dest = malloc(__stady_term_69 * (unsigned long)sizeof(char));
  __stady_term_69 = __gmpz_get_si(__stady_gmp_155);
  for(__stady_term_68 = 0; (unsigned long)__stady_term_68 < __stady_term_69; __stady_term_68 = 
    __stady_term_68 + 1) {
    old_ptr_dest[__stady_term_68] = dest[__stady_term_68];
  }
  __gmpz_clear(__stady_gmp_155);
  {
    int __retres;
    int start;
    int j;
    int k;
    start = find_substr(str,strlen,substr,sublen);
    if (start == -1) {
      {
        pathcrawler_to_framac("@FC:REACHABLE_STMT:31");
        k = 0;
      }
      while (1) {
        {
          if (! (k < strlen)) {
                                pathcrawler_to_framac("@FC:REACHABLE_STMT:35");
                                break;
                              }
          *(dest + k) = *(str + k);
          k ++;
        }}
         
      __retres = 0;
      goto return_label;
    }
    j = 0;
    while (1) {
      {
        if (! (j < start)) {
                             pathcrawler_to_framac("@FC:REACHABLE_STMT:44");
                             break;
                           }
        *(dest + j) = *(str + j);
        j ++;
      }}
       
    j = start;
    while (1) {
      {
        if (! (j < strlen - sublen)) {
                                       pathcrawler_to_framac("@FC:REACHABLE_STMT:51");
                                       break;
                                     }
        *(dest + j) = *(str + (j + sublen));
        j ++;
      }}
       
    __retres = 1;
    return_label:
      {
        int __stady_pred_19;
        __stady_pred_19 = 0;
        {
          mpz_t __q_i;
          mpz_t __stady_gmp_115;
          __gmpz_init_set_str(__stady_gmp_115, "0", 10);
          mpz_t __stady_gmp_116;
          __gmpz_init_set_si(__stady_gmp_116, strlen);
          mpz_t __stady_gmp_117;
          __gmpz_init_set_si(__stady_gmp_117, sublen);
          mpz_t __stady_gmp_118;
          __gmpz_init(__stady_gmp_118);
          __gmpz_sub(__stady_gmp_118, __stady_gmp_116, __stady_gmp_117);
          __gmpz_clear(__stady_gmp_116);
          __gmpz_clear(__stady_gmp_117);
          __gmpz_init_set(__q_i, __stady_gmp_115);
          int __stady_term_47;
          __stady_term_47 = __gmpz_cmp(__q_i, __stady_gmp_118);
          for(; __stady_term_47 < 0 && ! __stady_pred_19; ) {
            int __stady_pred_20;
            __stady_pred_20 = 1;
            {
              mpz_t __q_j;
              mpz_t __stady_gmp_119;
              __gmpz_init_set_str(__stady_gmp_119, "0", 10);
              mpz_t __stady_gmp_120;
              __gmpz_init_set_si(__stady_gmp_120, sublen);
              __gmpz_init_set(__q_j, __stady_gmp_119);
              int __stady_term_48;
              __stady_term_48 = __gmpz_cmp(__q_j, __stady_gmp_120);
              for(; __stady_term_48 < 0 && __stady_pred_20; ) {
                mpz_t __stady_gmp_121;
                __gmpz_init_set(__stady_gmp_121, __q_i);
                mpz_t __stady_gmp_122;
                __gmpz_init_set(__stady_gmp_122, __q_j);
                mpz_t __stady_gmp_123;
                __gmpz_init(__stady_gmp_123);
                __gmpz_add(__stady_gmp_123, __stady_gmp_121, 
                __stady_gmp_122);
                __gmpz_clear(__stady_gmp_121);
                __gmpz_clear(__stady_gmp_122);
                int __stady_term_49;
                __stady_term_49 = __gmpz_get_si(__stady_gmp_123);
                __gmpz_clear(__stady_gmp_123);
                mpz_t __stady_gmp_124;
                __gmpz_init_set(__stady_gmp_124, __q_j);
                int __stady_term_50;
                __stady_term_50 = __gmpz_get_si(__stady_gmp_124);
                __gmpz_clear(__stady_gmp_124);
                __stady_pred_20 = (int)*(str + __stady_term_49) == (int)*(
                                  substr + __stady_term_50);
                __gmpz_add_ui(__q_j, __q_j, 1);
                __stady_term_48 = __gmpz_cmp(__q_j, __stady_gmp_120);
              }
              __gmpz_clear(__q_j);
              __gmpz_clear(__stady_gmp_119);
              __gmpz_clear(__stady_gmp_120);
            }
            __stady_pred_19 = __stady_pred_20;
            __gmpz_add_ui(__q_i, __q_i, 1);
            __stady_term_47 = __gmpz_cmp(__q_i, __stady_gmp_118);
          }
          __gmpz_clear(__q_i);
          __gmpz_clear(__stady_gmp_115);
          __gmpz_clear(__stady_gmp_118);
        }
        if(! __stady_pred_19) {
          int __stady_pred_21;
          __stady_pred_21 = 1;
          {
            mpz_t __q_k;
            mpz_t __stady_gmp_125;
            __gmpz_init_set_str(__stady_gmp_125, "0", 10);
            mpz_t __stady_gmp_126;
            __gmpz_init_set_si(__stady_gmp_126, old_strlen);
            __gmpz_init_set(__q_k, __stady_gmp_125);
            int __stady_term_51;
            __stady_term_51 = __gmpz_cmp(__q_k, __stady_gmp_126);
            for(; __stady_term_51 < 0 && __stady_pred_21; ) {
              mpz_t __stady_gmp_127;
              __gmpz_init_set(__stady_gmp_127, __q_k);
              int __stady_term_52;
              __stady_term_52 = __gmpz_get_si(__stady_gmp_127);
              __gmpz_clear(__stady_gmp_127);
              mpz_t __stady_gmp_128;
              __gmpz_init_set(__stady_gmp_128, __q_k);
              int __stady_term_53;
              __stady_term_53 = __gmpz_get_si(__stady_gmp_128);
              __gmpz_clear(__stady_gmp_128);
              __stady_pred_21 = (int)*(old_ptr_str + __stady_term_52) == (int)*(
                                old_dest + __stady_term_53);
              __gmpz_add_ui(__q_k, __q_k, 1);
              __stady_term_51 = __gmpz_cmp(__q_k, __stady_gmp_126);
            }
            __gmpz_clear(__q_k);
            __gmpz_clear(__stady_gmp_125);
            __gmpz_clear(__stady_gmp_126);
          }
          if(! __stady_pred_21) {
            pathcrawler_assert_exception("Post-condition!", 30);
          }
          mpz_t __stady_gmp_129;
          __gmpz_init_set_si(__stady_gmp_129, __retres);
          mpz_t __stady_gmp_130;
          __gmpz_init_set_str(__stady_gmp_130, "0", 10);
          int __stady_term_54;
          __stady_term_54 = __gmpz_cmp(__stady_gmp_129, __stady_gmp_130);
          __gmpz_clear(__stady_gmp_129);
          __gmpz_clear(__stady_gmp_130);
          if(! (__stady_term_54 == 0)) {
            pathcrawler_assert_exception("Post-condition!", 5);
          }
        }
        int __stady_pred_22;
        __stady_pred_22 = 0;
        {
          mpz_t __q_i;
          mpz_t __stady_gmp_131;
          __gmpz_init_set_str(__stady_gmp_131, "0", 10);
          mpz_t __stady_gmp_132;
          __gmpz_init_set_si(__stady_gmp_132, strlen);
          mpz_t __stady_gmp_133;
          __gmpz_init_set_si(__stady_gmp_133, sublen);
          mpz_t __stady_gmp_134;
          __gmpz_init(__stady_gmp_134);
          __gmpz_sub(__stady_gmp_134, __stady_gmp_132, __stady_gmp_133);
          __gmpz_clear(__stady_gmp_132);
          __gmpz_clear(__stady_gmp_133);
          __gmpz_init_set(__q_i, __stady_gmp_131);
          int __stady_term_55;
          __stady_term_55 = __gmpz_cmp(__q_i, __stady_gmp_134);
          for(; __stady_term_55 < 0 && ! __stady_pred_22; ) {
            int __stady_pred_23;
            __stady_pred_23 = 1;
            {
              mpz_t __q_j;
              mpz_t __stady_gmp_135;
              __gmpz_init_set_str(__stady_gmp_135, "0", 10);
              mpz_t __stady_gmp_136;
              __gmpz_init_set_si(__stady_gmp_136, sublen);
              __gmpz_init_set(__q_j, __stady_gmp_135);
              int __stady_term_56;
              __stady_term_56 = __gmpz_cmp(__q_j, __stady_gmp_136);
              for(; __stady_term_56 < 0 && __stady_pred_23; ) {
                mpz_t __stady_gmp_137;
                __gmpz_init_set(__stady_gmp_137, __q_i);
                mpz_t __stady_gmp_138;
                __gmpz_init_set(__stady_gmp_138, __q_j);
                mpz_t __stady_gmp_139;
                __gmpz_init(__stady_gmp_139);
                __gmpz_add(__stady_gmp_139, __stady_gmp_137, 
                __stady_gmp_138);
                __gmpz_clear(__stady_gmp_137);
                __gmpz_clear(__stady_gmp_138);
                int __stady_term_57;
                __stady_term_57 = __gmpz_get_si(__stady_gmp_139);
                __gmpz_clear(__stady_gmp_139);
                mpz_t __stady_gmp_140;
                __gmpz_init_set(__stady_gmp_140, __q_j);
                int __stady_term_58;
                __stady_term_58 = __gmpz_get_si(__stady_gmp_140);
                __gmpz_clear(__stady_gmp_140);
                __stady_pred_23 = (int)*(str + __stady_term_57) == (int)*(
                                  substr + __stady_term_58);
                __gmpz_add_ui(__q_j, __q_j, 1);
                __stady_term_56 = __gmpz_cmp(__q_j, __stady_gmp_136);
              }
              __gmpz_clear(__q_j);
              __gmpz_clear(__stady_gmp_135);
              __gmpz_clear(__stady_gmp_136);
            }
            __stady_pred_22 = __stady_pred_23;
            __gmpz_add_ui(__q_i, __q_i, 1);
            __stady_term_55 = __gmpz_cmp(__q_i, __stady_gmp_134);
          }
          __gmpz_clear(__q_i);
          __gmpz_clear(__stady_gmp_131);
          __gmpz_clear(__stady_gmp_134);
        }
        if(__stady_pred_22) {
          int __stady_pred_24;
          __stady_pred_24 = 0;
          {
            mpz_t __q_i;
            mpz_t __stady_gmp_141;
            __gmpz_init_set_str(__stady_gmp_141, "0", 10);
            mpz_t __stady_gmp_142;
            __gmpz_init_set_si(__stady_gmp_142, old_strlen);
            mpz_t __stady_gmp_143;
            __gmpz_init_set_si(__stady_gmp_143, old_sublen);
            mpz_t __stady_gmp_144;
            __gmpz_init(__stady_gmp_144);
            __gmpz_sub(__stady_gmp_144, __stady_gmp_142, __stady_gmp_143);
            __gmpz_clear(__stady_gmp_142);
            __gmpz_clear(__stady_gmp_143);
            __gmpz_init_set(__q_i, __stady_gmp_141);
            int __stady_term_59;
            __stady_term_59 = __gmpz_cmp(__q_i, __stady_gmp_144);
            for(; __stady_term_59 < 0 && ! __stady_pred_24; ) {
              int __stady_pred_25;
              __stady_pred_25 = 1;
              {
                mpz_t __q_l;
                mpz_t __stady_gmp_145;
                __gmpz_init_set(__stady_gmp_145, __q_i);
                mpz_t __stady_gmp_146;
                __gmpz_init_set_si(__stady_gmp_146, old_strlen);
                __gmpz_init_set(__q_l, __stady_gmp_145);
                int __stady_term_60;
                __stady_term_60 = __gmpz_cmp(__q_l, __stady_gmp_146);
                for(; __stady_term_60 < 0 && __stady_pred_25; ) {
                  mpz_t __stady_gmp_147;
                  __gmpz_init_set(__stady_gmp_147, __q_l);
                  mpz_t __stady_gmp_148;
                  __gmpz_init_set_si(__stady_gmp_148, old_sublen);
                  mpz_t __stady_gmp_149;
                  __gmpz_init(__stady_gmp_149);
                  __gmpz_add(__stady_gmp_149, __stady_gmp_147, 
                  __stady_gmp_148);
                  __gmpz_clear(__stady_gmp_147);
                  __gmpz_clear(__stady_gmp_148);
                  int __stady_term_61;
                  __stady_term_61 = __gmpz_get_si(__stady_gmp_149);
                  __gmpz_clear(__stady_gmp_149);
                  mpz_t __stady_gmp_150;
                  __gmpz_init_set(__stady_gmp_150, __q_l);
                  int __stady_term_62;
                  __stady_term_62 = __gmpz_get_si(__stady_gmp_150);
                  __gmpz_clear(__stady_gmp_150);
                  __stady_pred_25 = (int)*(old_ptr_str + __stady_term_61) == (int)*(
                                    old_dest + __stady_term_62);
                  __gmpz_add_ui(__q_l, __q_l, 1);
                  __stady_term_60 = __gmpz_cmp(__q_l, __stady_gmp_146);
                }
                __gmpz_clear(__q_l);
                __gmpz_clear(__stady_gmp_145);
                __gmpz_clear(__stady_gmp_146);
              }
              __stady_pred_24 = __stady_pred_25;
              __gmpz_add_ui(__q_i, __q_i, 1);
              __stady_term_59 = __gmpz_cmp(__q_i, __stady_gmp_144);
            }
            __gmpz_clear(__q_i);
            __gmpz_clear(__stady_gmp_141);
            __gmpz_clear(__stady_gmp_144);
          }
          if(! __stady_pred_24) {
            pathcrawler_assert_exception("Post-condition!", 26);
          }
          mpz_t __stady_gmp_151;
          __gmpz_init_set_si(__stady_gmp_151, __retres);
          mpz_t __stady_gmp_152;
          __gmpz_init_set_str(__stady_gmp_152, "1", 10);
          int __stady_term_63;
          __stady_term_63 = __gmpz_cmp(__stady_gmp_151, __stady_gmp_152);
          __gmpz_clear(__stady_gmp_151);
          __gmpz_clear(__stady_gmp_152);
          if(! (__stady_term_63 == 0)) {
            pathcrawler_assert_exception("Post-condition!", 35);
          }
        }
      }
      free(old_ptr_str);
      free(old_ptr_substr);
      free(old_ptr_dest);
      return __retres;
  }
}


[kernel] preprocessing with "gcc -C -E -I.  __sd_instru_deleteSubstr1c_delete_substr.c"
[kernel] preprocessing with "gcc -C -E -I. -include /usr/local/share/frama-c/pc/lib/lanceur_deb.h __sd_instru_deleteSubstr1c_delete_substr.c"
[pc] analyzing...
[pc] Compiling pathcrawler___sd_instru_deleteSubstr1c_delete_substr/lanceur_delete_substr utilities ...
[pc] Compiling pathcrawler___sd_instru_deleteSubstr1c_delete_substr/lanceur_delete_substr ...
[pc] generating tests...
[pc] Starting lanceur_delete_substr (isc version)
[pc] Starting lanceur_pathcrawler__delete_substr_precond (isc version)
[pc] Starting lanceur_delete_substr (isc version)
[pc] TEST GENERATION WARNING!!!
[pc] Bad projection on input values of expression old_ptr_str__delete_substr[__stady_term_61__delete_substr] in the constraint corresponding to the 1st subcondition (or only condition) at line number 1135 of file __sd_instru_deleteSubstr1c_delete_substr.c.
[pc] Please check your test context and source code for uninitialised variables.
[pc] TEST GENERATION WARNING!!!
[pc] Unexpected failure of goal write_status_prefix_and_path(3) in the constraint corresponding to the 1st subcondition (or only condition) at line number 1135 of file __sd_instru_deleteSubstr1c_delete_substr.c.
[pc] Please report this bug.
[pc] generation finished
[stady] all-paths: true
[stady] 261 test cases
[report] Computing properties status...

--------------------------------------------------------------------------------
--- Properties of Function 'find_substr'
--------------------------------------------------------------------------------

[ Partial ] Pre-condition (file tests/deleteSubstr1c/deleteSubstr1c.c, line 6)
            By StaDy, with pending:
             - Pre-condition (file tests/deleteSubstr1c/deleteSubstr1c.c, line 53) of 'delete_substr'
[ Partial ] Pre-condition (file tests/deleteSubstr1c/deleteSubstr1c.c, line 7)
            By StaDy, with pending:
             - Pre-condition (file tests/deleteSubstr1c/deleteSubstr1c.c, line 53) of 'delete_substr'
[ Partial ] Pre-condition (file tests/deleteSubstr1c/deleteSubstr1c.c, line 8)
            By StaDy, with pending:
             - Pre-condition (file tests/deleteSubstr1c/deleteSubstr1c.c, line 53) of 'delete_substr'
[ Partial ] Post-condition for 'present' (file tests/deleteSubstr1c/deleteSubstr1c.c, line 13)
            By StaDy, with pending:
             - Pre-condition (file tests/deleteSubstr1c/deleteSubstr1c.c, line 53) of 'delete_substr'
[ Partial ] Post-condition for 'present' (file tests/deleteSubstr1c/deleteSubstr1c.c, line 14)
            By StaDy, with pending:
             - Pre-condition (file tests/deleteSubstr1c/deleteSubstr1c.c, line 53) of 'delete_substr'
[ Partial ] Post-condition for 'not_present' (file tests/deleteSubstr1c/deleteSubstr1c.c, line 18)
            By StaDy, with pending:
             - Pre-condition (file tests/deleteSubstr1c/deleteSubstr1c.c, line 53) of 'delete_substr'
[ Partial ] Loop variant at loop (file tests/deleteSubstr1c/deleteSubstr1c.c, line 28)
            By StaDy, with pending:
             - Pre-condition (file tests/deleteSubstr1c/deleteSubstr1c.c, line 53) of 'delete_substr'
[ Partial ] Loop variant at loop (file tests/deleteSubstr1c/deleteSubstr1c.c, line 35)
            By StaDy, with pending:
             - Pre-condition (file tests/deleteSubstr1c/deleteSubstr1c.c, line 53) of 'delete_substr'
[ Partial ] Invariant (file tests/deleteSubstr1c/deleteSubstr1c.c, line 22)
            By StaDy, with pending:
             - Pre-condition (file tests/deleteSubstr1c/deleteSubstr1c.c, line 53) of 'delete_substr'
[ Partial ] Invariant (file tests/deleteSubstr1c/deleteSubstr1c.c, line 23)
            By StaDy, with pending:
             - Pre-condition (file tests/deleteSubstr1c/deleteSubstr1c.c, line 53) of 'delete_substr'
[ Partial ] Invariant (file tests/deleteSubstr1c/deleteSubstr1c.c, line 30)
            By StaDy, with pending:
             - Pre-condition (file tests/deleteSubstr1c/deleteSubstr1c.c, line 53) of 'delete_substr'
[ Partial ] Invariant (file tests/deleteSubstr1c/deleteSubstr1c.c, line 31)
            By StaDy, with pending:
             - Pre-condition (file tests/deleteSubstr1c/deleteSubstr1c.c, line 53) of 'delete_substr'
[ Partial ] Behavior 'not_present'
            By Frama-C kernel, with pending:
             - Pre-condition (file tests/deleteSubstr1c/deleteSubstr1c.c, line 53) of 'delete_substr'
[ Partial ] Behavior 'present'
            By Frama-C kernel, with pending:
             - Pre-condition (file tests/deleteSubstr1c/deleteSubstr1c.c, line 53) of 'delete_substr'

--------------------------------------------------------------------------------
--- Properties of Function 'delete_substr'
--------------------------------------------------------------------------------

[ Partial ] Post-condition for 'not_present' (file tests/deleteSubstr1c/deleteSubstr1c.c, line 58)
            By StaDy, with pending:
             - Pre-condition (file tests/deleteSubstr1c/deleteSubstr1c.c, line 53)
[ Partial ] Post-condition for 'not_present' (file tests/deleteSubstr1c/deleteSubstr1c.c, line 59)
            By StaDy, with pending:
             - Pre-condition (file tests/deleteSubstr1c/deleteSubstr1c.c, line 53)
[ Partial ] Post-condition for 'present' (file tests/deleteSubstr1c/deleteSubstr1c.c, line 63)
            By StaDy, with pending:
             - Pre-condition (file tests/deleteSubstr1c/deleteSubstr1c.c, line 53)
[ Partial ] Post-condition for 'present' (file tests/deleteSubstr1c/deleteSubstr1c.c, line 67)
            By StaDy, with pending:
             - Pre-condition (file tests/deleteSubstr1c/deleteSubstr1c.c, line 53)
[ Partial ] Behavior 'not_present'
            By Frama-C kernel, with pending:
             - Pre-condition (file tests/deleteSubstr1c/deleteSubstr1c.c, line 53)
[ Partial ] Behavior 'present'
            By Frama-C kernel, with pending:
             - Pre-condition (file tests/deleteSubstr1c/deleteSubstr1c.c, line 53)

--------------------------------------------------------------------------------
--- Status Report Summary
--------------------------------------------------------------------------------
    20 Locally validated
    20 Total
--------------------------------------------------------------------------------
