[kernel] preprocessing with "gcc -C -E -I.  tests/deleteSubstr3/deleteSubstr3.c"
[stady] warning: Native Precondition:
                 \separated(dest+(0 .. strlen-1), substr+(0 .. sublen-1)) unsupported
[stady] warning: Native Precondition:
                 \separated(dest+(0 .. strlen-1), str+(0 .. strlen-1)) unsupported
[stady:generated-pl] :- module(test_parameters).
                     :- import create_input_val/3 from substitution.
                     :- export dom/4.
                     :- export create_input_vals/2.
                     :- export unquantif_preconds/2.
                     :- export quantif_preconds/2.
                     :- export strategy/2.
                     :- export precondition_of/2.
                     
                     dom(0,0,0,0).
[stady:generated-pl] dom('delete_substr', cont('str',_), [], int([-128..127])).
[stady:generated-pl] dom('delete_substr', cont('substr',_), [], int([-128..127])).
[stady:generated-pl] dom('delete_substr', cont('dest',_), [], int([-128..127])).
[stady:generated-pl] dom('pathcrawler__delete_substr_precond',A,B,C) :-
                       dom('delete_substr',A,B,C).
[stady:generated-pl] create_input_vals('delete_substr', Ins):-
[stady:generated-pl] create_input_val(dim('str'), int([1..4294967295]),Ins),
[stady:generated-pl] create_input_val(dim('substr'), int([1..4294967295]),Ins),
[stady:generated-pl] create_input_val(dim('dest'), int([1..4294967295]),Ins),
[stady:generated-pl] create_input_val('strlen', int([-2147483648..2147483647]),Ins),
[stady:generated-pl] create_input_val('sublen', int([-2147483648..2147483647]),Ins),
[stady:generated-pl] true.
[stady:generated-pl] create_input_vals('pathcrawler__delete_substr_precond',Ins) :-
                       create_input_vals('delete_substr',Ins).
[stady:generated-pl] quantif_preconds('delete_substr',
                       [
                     
                       ]
                     ).
[stady:generated-pl] quantif_preconds('pathcrawler__delete_substr_precond',A) :-
                       quantif_preconds('delete_substr',A).
[stady:generated-pl] unquantif_preconds('delete_substr',
                       [
                         cond(egal,dim('substr'),+(int(math), -(int(math), 'sublen', 1), 1),pre),
                         cond(egal,dim('dest'),+(int(math), -(int(math), 'strlen', 1), 1),pre),
                         cond(egal,dim('str'),+(int(math), -(int(math), 'strlen', 1), 1),pre),
                         cond(infegal,'sublen','strlen',pre),
                         cond(inf,0,'sublen',pre),
                         cond(infegal,'strlen',3,pre)
                       ]
                     ).
[stady:generated-pl] unquantif_preconds('pathcrawler__delete_substr_precond',A) :-
                       unquantif_preconds('delete_substr',A).
[stady:generated-pl] strategy('delete_substr',[]).
[stady:generated-pl] strategy('pathcrawler__delete_substr_precond',A) :-
                       strategy('delete_substr',A).
[stady:generated-pl] precondition_of('delete_substr','pathcrawler__delete_substr_precond').
[stady] warning: \separated(dest+(0 .. strlen-1), substr+(0 .. sublen-1)) unsupported
[stady] warning: \separated(dest+(0 .. strlen-1), str+(0 .. strlen-1)) unsupported
[stady:generated-c] generated C file:
/* Generated by Frama-C */
extern int pathcrawler_assert_exception(char*,int);
extern int pathcrawler_dimension(void*);
extern void pathcrawler_to_framac(char*);
int find_substr(char *str, int strlen, char *substr, int sublen)
{
  if(!((0 < sublen) && (sublen <= strlen)))pathcrawler_assert_exception("Pre-condition!", 34);
  if(!((strlen - 1) >= 0 && pathcrawler_dimension(str) > (strlen - 1)))pathcrawler_assert_exception("Pre-condition!", 46);
  if(!((sublen - 1) >= 0 && pathcrawler_dimension(substr) > (sublen - 1)))pathcrawler_assert_exception("Pre-condition!", 11);
  char *old_str = str;
  char *old_ptr_str;
  old_ptr_str = malloc((((strlen - 1) + 1))*sizeof(char));
  int __stady_iter_0;
  for (__stady_iter_0 = 0; __stady_iter_0 < ((strlen - 1) + 1); __stady_iter_0++) {
  old_ptr_str[__stady_iter_0] = str[__stady_iter_0];
  }
  int old_strlen = strlen;
  char *old_substr = substr;
  char *old_ptr_substr;
  old_ptr_substr = malloc((((sublen - 1) + 1))*sizeof(char));
  int __stady_iter_1;
  for (__stady_iter_1 = 0; __stady_iter_1 < ((sublen - 1) + 1); __stady_iter_1++) {
  old_ptr_substr[__stady_iter_1] = substr[__stady_iter_1];
  }
  int old_sublen = sublen;
  {
    int __retres;
    int i;
    i = 0;
    i = 0;
    {
      if ((((strlen - sublen) - i)) < 0)pathcrawler_assert_exception("Variant non positive",20);int __stady_pred_0 = 1;
      {
      int __q_k;
      for (__q_k = 0; __q_k < i &&  __stady_pred_0; __q_k++) {
      int __stady_pred_1 = 0;
      {
      int __q_l;
      for (__q_l = 0; __q_l < sublen && ! __stady_pred_1; __q_l++) {
      __stady_pred_1 = (*(str + (__q_k + __q_l)) != *(substr + __q_l));
      }
      }
      __stady_pred_0 = __stady_pred_1;
      }
      }
      if(!__stady_pred_0)pathcrawler_assert_exception("Loop invariant not established!", 30);
      if(!((0 <= i) && (i <= (strlen - sublen))))pathcrawler_assert_exception("Loop invariant not established!", 16);
      while (1) {
        int old_variant_20 = ((strlen - sublen) - i);
        {
          if (! (i < strlen - sublen)) { pathcrawler_to_framac("@FC:REACHABLE_STMT:6");
                                       break; }
                                       
          {
            int j;
            j = 0;
            j = 0;
            {
              if (((sublen - j)) < 0)pathcrawler_assert_exception("Variant non positive",26);int __stady_pred_2 = 1;
              {
              int __q_k;
              for (__q_k = 0; __q_k < j &&  __stady_pred_2; __q_k++) {
              __stady_pred_2 = (*(str + (i + __q_k)) == *(substr + __q_k));
              }
              }
              if(!__stady_pred_2)pathcrawler_assert_exception("Loop invariant not established!", 36);
              if(!((0 <= j) && (j <= sublen)))pathcrawler_assert_exception("Loop invariant not established!", 24);
              while (1) {
                int old_variant_26 = (sublen - j);
                {
                  if (! (j < sublen)) { pathcrawler_to_framac("@FC:REACHABLE_STMT:13");
                                      break; }
                                      
                  if ((int)*(str + (i + j)) != (int)*(substr + j)) { pathcrawler_to_framac("@FC:REACHABLE_STMT:17");
                                                                   break; }
                                                                   
                  j ++;
                }if(!((0 <= j) && (j <= sublen)))pathcrawler_assert_exception("Loop invariant not preserved!", 24);
                int __stady_pred_3 = 1;
                {
                int __q_k;
                for (__q_k = 0; __q_k < j &&  __stady_pred_3; __q_k++) {
                __stady_pred_3 = (*(str + (i + __q_k)) == *(substr + __q_k));
                }
                }
                if(!__stady_pred_3)pathcrawler_assert_exception("Loop invariant not preserved!", 36);
                if ((old_variant_26) < 0)pathcrawler_assert_exception("Variant non positive",26);
                if (((sublen - j)) >= old_variant_26)pathcrawler_assert_exception("Variant non decreasing",26);}
                 }
               
            if (j == sublen) {
              { pathcrawler_to_framac("@FC:REACHABLE_STMT:23");
              __retres = i; }
              
              goto return_label;
            }
          }
          i ++;
        }if(!((0 <= i) && (i <= (strlen - sublen))))pathcrawler_assert_exception("Loop invariant not preserved!", 16);
        int __stady_pred_4 = 1;
        {
        int __q_k;
        for (__q_k = 0; __q_k < i &&  __stady_pred_4; __q_k++) {
        int __stady_pred_5 = 0;
        {
        int __q_l;
        for (__q_l = 0; __q_l < sublen && ! __stady_pred_5; __q_l++) {
        __stady_pred_5 = (*(str + (__q_k + __q_l)) != *(substr + __q_l));
        }
        }
        __stady_pred_4 = __stady_pred_5;
        }
        }
        if(!__stady_pred_4)pathcrawler_assert_exception("Loop invariant not preserved!", 30);
        if ((old_variant_20) < 0)pathcrawler_assert_exception("Variant non positive",20);
        if ((((strlen - sublen) - i)) >= old_variant_20)pathcrawler_assert_exception("Variant non decreasing",20);}
         }
       
    __retres = -1;
    return_label:
      {
        int __stady_pred_6 = 0;
        {
        int __q_i;
        for (__q_i = 0; __q_i < (strlen - sublen) && ! __stady_pred_6; __q_i++) {
        int __stady_pred_7 = 1;
        {
        int __q_j;
        for (__q_j = 0; __q_j < sublen &&  __stady_pred_7; __q_j++) {
        __stady_pred_7 = (*(str + (__q_i + __q_j)) == *(substr + __q_j));
        }
        }
        __stady_pred_6 = __stady_pred_7;
        }
        }
        if (__stady_pred_6 && 1) {
          if(!((0 <= __retres) && (__retres < (old_strlen - old_sublen))))pathcrawler_assert_exception("Post-condition!", 27);
          int __stady_pred_8 = 1;
          {
          int __q_j;
          for (__q_j = 0; __q_j < old_sublen &&  __stady_pred_8; __q_j++) {
          __stady_pred_8 = (*(old_str + (__retres + __q_j)) == *(old_substr + __q_j));
          }
          }
          if(!__stady_pred_8)pathcrawler_assert_exception("Post-condition!", 40);
          }
        int __stady_pred_9 = 1;
        {
        int __q_i;
        for (__q_i = 0; __q_i < (strlen - sublen) &&  __stady_pred_9; __q_i++) {
        int __stady_pred_10 = 0;
        {
        int __q_j;
        for (__q_j = 0; __q_j < sublen && ! __stady_pred_10; __q_j++) {
        __stady_pred_10 = (*(str + (__q_i + __q_j)) != *(substr + __q_j));
        }
        }
        __stady_pred_9 = __stady_pred_10;
        }
        }
        if (__stady_pred_9 && 1) {
          if(!(__retres == (- 1)))pathcrawler_assert_exception("Post-condition!", 17);
          }
        
        }
      free(old_ptr_str);
      free(old_ptr_substr);
      return __retres;
  }
}

int delete_substr_precond(char *str, int strlen, char *substr, int sublen,
                          char *dest)
{
return 1;
}

int delete_substr(char *str, int strlen, char *substr, int sublen, char *dest)
{
  char *old_str = str;
  char *old_ptr_str;
  old_ptr_str = malloc((((strlen - 1) + 1))*sizeof(char));
  int __stady_iter_0;
  for (__stady_iter_0 = 0; __stady_iter_0 < ((strlen - 1) + 1); __stady_iter_0++) {
  old_ptr_str[__stady_iter_0] = str[__stady_iter_0];
  }
  int old_strlen = strlen;
  char *old_substr = substr;
  char *old_ptr_substr;
  old_ptr_substr = malloc((((sublen - 1) + 1))*sizeof(char));
  int __stady_iter_1;
  for (__stady_iter_1 = 0; __stady_iter_1 < ((sublen - 1) + 1); __stady_iter_1++) {
  old_ptr_substr[__stady_iter_1] = substr[__stady_iter_1];
  }
  int old_sublen = sublen;
  char *old_dest = dest;
  char *old_ptr_dest;
  old_ptr_dest = malloc((((strlen - 1) + 1))*sizeof(char));
  int __stady_iter_2;
  for (__stady_iter_2 = 0; __stady_iter_2 < ((strlen - 1) + 1); __stady_iter_2++) {
  old_ptr_dest[__stady_iter_2] = dest[__stady_iter_2];
  }
  {
    int __retres;
    int start;
    int j;
    int k;
    start = find_substr(str,strlen,substr,sublen);
    if (start == -1) {
      { pathcrawler_to_framac("@FC:REACHABLE_STMT:31");
      k = 0; }
      
      {
        if (((strlen - k)) < 0)pathcrawler_assert_exception("Variant non positive",37);
        if(!((0 <= k) && (k <= strlen)))pathcrawler_assert_exception("Loop invariant not established!", 42);
        int __stady_pred_11 = 1;
        {
        int __q_m;
        for (__q_m = 0; __q_m < k &&  __stady_pred_11; __q_m++) {
        __stady_pred_11 = (*(dest + __q_m) == *(old_ptr_str + __q_m));
        }
        }
        if(!__stady_pred_11)pathcrawler_assert_exception("Loop invariant not established!", 28);
        while (1) {
          int old_variant_37 = (strlen - k);
          {
            if (! (k < strlen)) { pathcrawler_to_framac("@FC:REACHABLE_STMT:35");
                                break; }
                                
            *(dest + k) = *(str + k);
            k ++;
          }int __stady_pred_12 = 1;
          {
          int __q_m;
          for (__q_m = 0; __q_m < k &&  __stady_pred_12; __q_m++) {
          __stady_pred_12 = (*(dest + __q_m) == *(old_ptr_str + __q_m));
          }
          }
          if(!__stady_pred_12)pathcrawler_assert_exception("Loop invariant not preserved!", 28);
          if(!((0 <= k) && (k <= strlen)))pathcrawler_assert_exception("Loop invariant not preserved!", 42);
          if ((old_variant_37) < 0)pathcrawler_assert_exception("Variant non positive",37);
          if (((strlen - k)) >= old_variant_37)pathcrawler_assert_exception("Variant non decreasing",37);}
           }
         
      __retres = 0;
      goto return_label;
    }
    j = 0;
    {
      if (((start - j)) < 0)pathcrawler_assert_exception("Variant non positive",5);
      if(!((0 <= j) && (j <= start)))pathcrawler_assert_exception("Loop invariant not established!", 45);
      int __stady_pred_13 = 1;
      {
      int __q_m;
      for (__q_m = 0; __q_m < j &&  __stady_pred_13; __q_m++) {
      __stady_pred_13 = (*(dest + __q_m) == *(old_ptr_str + __q_m));
      }
      }
      if(!__stady_pred_13)pathcrawler_assert_exception("Loop invariant not established!", 33);
      while (1) {
        int old_variant_5 = (start - j);
        {
          if (! (j < start)) { pathcrawler_to_framac("@FC:REACHABLE_STMT:44");
                             break; }
                             
          *(dest + j) = *(str + j);
          j ++;
        }int __stady_pred_14 = 1;
        {
        int __q_m;
        for (__q_m = 0; __q_m < j &&  __stady_pred_14; __q_m++) {
        __stady_pred_14 = (*(dest + __q_m) == *(old_ptr_str + __q_m));
        }
        }
        if(!__stady_pred_14)pathcrawler_assert_exception("Loop invariant not preserved!", 33);
        if(!((0 <= j) && (j <= start)))pathcrawler_assert_exception("Loop invariant not preserved!", 45);
        if ((old_variant_5) < 0)pathcrawler_assert_exception("Variant non positive",5);
        if (((start - j)) >= old_variant_5)pathcrawler_assert_exception("Variant non decreasing",5);}
         }
       
    j = start;
    {
      if ((((strlen - sublen) - j)) < 0)pathcrawler_assert_exception("Variant non positive",9);
      if(!((start <= j) && (j <= (strlen - sublen))))pathcrawler_assert_exception("Loop invariant not established!", 1);
      int __stady_pred_15 = 1;
      {
      int __q_m;
      for (__q_m = start; __q_m < j &&  __stady_pred_15; __q_m++) {
      __stady_pred_15 = (*(old_ptr_str + (__q_m + old_sublen)) == *(dest + __q_m));
      }
      }
      if(!__stady_pred_15)pathcrawler_assert_exception("Loop invariant not established!", 39);
      while (1) {
        int old_variant_9 = ((strlen - sublen) - j);
        {
          if (! (j < strlen - sublen)) { pathcrawler_to_framac("@FC:REACHABLE_STMT:51");
                                       break; }
                                       
          *(dest + j) = *(str + (j + sublen));
          j ++;
        }int __stady_pred_16 = 1;
        {
        int __q_m;
        for (__q_m = start; __q_m < j &&  __stady_pred_16; __q_m++) {
        __stady_pred_16 = (*(old_ptr_str + (__q_m + old_sublen)) == *(dest + __q_m));
        }
        }
        if(!__stady_pred_16)pathcrawler_assert_exception("Loop invariant not preserved!", 39);
        if(!((start <= j) && (j <= (strlen - sublen))))pathcrawler_assert_exception("Loop invariant not preserved!", 1);
        if ((old_variant_9) < 0)pathcrawler_assert_exception("Variant non positive",9);
        if ((((strlen - sublen) - j)) >= old_variant_9)pathcrawler_assert_exception("Variant non decreasing",9);}
         }
       
    __retres = 1;
    return_label:
      {
        int __stady_pred_17 = 0;
        {
        int __q_i;
        for (__q_i = 0; __q_i < (strlen - sublen) && ! __stady_pred_17; __q_i++) {
        int __stady_pred_18 = 1;
        {
        int __q_j;
        for (__q_j = 0; __q_j < sublen &&  __stady_pred_18; __q_j++) {
        __stady_pred_18 = (*(str + (__q_i + __q_j)) == *(substr + __q_j));
        }
        }
        __stady_pred_17 = __stady_pred_18;
        }
        }
        if ((! __stady_pred_17) && 1) {
          int __stady_pred_19 = 1;
          {
          int __q_k;
          for (__q_k = 0; __q_k < old_strlen &&  __stady_pred_19; __q_k++) {
          __stady_pred_19 = (*(old_ptr_str + __q_k) == *(old_dest + __q_k));
          }
          }
          if(!__stady_pred_19)pathcrawler_assert_exception("Post-condition!", 43);
          if(!(__retres == 0))pathcrawler_assert_exception("Post-condition!", 6);
          }
        int __stady_pred_20 = 0;
        {
        int __q_i;
        for (__q_i = 0; __q_i < (strlen - sublen) && ! __stady_pred_20; __q_i++) {
        int __stady_pred_21 = 1;
        {
        int __q_j;
        for (__q_j = 0; __q_j < sublen &&  __stady_pred_21; __q_j++) {
        __stady_pred_21 = (*(str + (__q_i + __q_j)) == *(substr + __q_j));
        }
        }
        __stady_pred_20 = __stady_pred_21;
        }
        }
        if (__stady_pred_20 && 1) {
          int __stady_pred_22 = 0;
          {
          int __q_i;
          for (__q_i = 0; __q_i < (old_strlen - old_sublen) && ! __stady_pred_22; __q_i++) {
          int __stady_pred_23 = 1;
          {
          int __q_j;
          for (__q_j = 0; __q_j < old_sublen &&  __stady_pred_23; __q_j++) {
          __stady_pred_23 = (*(old_ptr_str + (__q_i + __q_j)) == *(old_ptr_substr + __q_j));
          }
          }
          int __stady_pred_24 = 1;
          {
          int __q_k;
          for (__q_k = 0; __q_k < __q_i &&  __stady_pred_24; __q_k++) {
          __stady_pred_24 = (*(old_ptr_str + __q_k) == *(old_dest + __q_k));
          }
          }
          int __stady_pred_25 = 1;
          {
          int __q_l;
          for (__q_l = __q_i; __q_l < (old_strlen - old_sublen) &&  __stady_pred_25; __q_l++) {
          __stady_pred_25 = (*(old_ptr_str + (__q_l + old_sublen)) == *(old_dest + __q_l));
          }
          }
          __stady_pred_22 = ((__stady_pred_23 && __stady_pred_24) && __stady_pred_25);
          }
          }
          if(!__stady_pred_22)pathcrawler_assert_exception("Post-condition!", 35);
          if(!(__retres == 1))pathcrawler_assert_exception("Post-condition!", 47);
          }
        
        }
      free(old_ptr_str);
      free(old_ptr_substr);
      free(old_ptr_dest);
      return __retres;
  }
}


[kernel] preprocessing with "gcc -C -E -I.  stady_temp.c"
stady_temp.c:12:[kernel] warning: Calling undeclared function malloc. Old style K&R code?
stady_temp.c:166:[kernel] warning: Calling undeclared function free. Old style K&R code?
[kernel] preprocessing with "gcc -C -E -I. -include /usr/local/share/frama-c/pc/lib/lanceur_deb.h stady_temp.c"
stady_temp.c:12:[kernel] warning: Calling undeclared function malloc. Old style K&R code?
stady_temp.c:166:[kernel] warning: Calling undeclared function free. Old style K&R code?
[pc] analyzing...
[pc] Compiling pathcrawler_stady_temp/lanceur_delete_substr utilities ...
[pc] Compiling pathcrawler_stady_temp/lanceur_delete_substr ...
[pc] generating tests...
[pc] Starting lanceur_delete_substr (isc version)
[pc] Starting lanceur_pathcrawler__delete_substr_precond (isc version)
[pc] generation finished
[stady] all-paths: true
[stady] 1245 test cases
[report] Computing properties status...

--------------------------------------------------------------------------------
--- Properties of Function 'find_substr'
--------------------------------------------------------------------------------

[ Partial ] Pre-condition (file tests/deleteSubstr3/deleteSubstr3.c, line 6)
            By StaDy, with pending:
             - Pre-condition (file tests/deleteSubstr3/deleteSubstr3.c, line 53) of 'delete_substr'
[ Partial ] Pre-condition (file tests/deleteSubstr3/deleteSubstr3.c, line 7)
            By StaDy, with pending:
             - Pre-condition (file tests/deleteSubstr3/deleteSubstr3.c, line 53) of 'delete_substr'
[ Partial ] Pre-condition (file tests/deleteSubstr3/deleteSubstr3.c, line 8)
            By StaDy, with pending:
             - Pre-condition (file tests/deleteSubstr3/deleteSubstr3.c, line 53) of 'delete_substr'
[ Partial ] Post-condition for 'present' (file tests/deleteSubstr3/deleteSubstr3.c, line 13)
            By StaDy, with pending:
             - Pre-condition (file tests/deleteSubstr3/deleteSubstr3.c, line 53) of 'delete_substr'
[ Partial ] Post-condition for 'present' (file tests/deleteSubstr3/deleteSubstr3.c, line 14)
            By StaDy, with pending:
             - Pre-condition (file tests/deleteSubstr3/deleteSubstr3.c, line 53) of 'delete_substr'
[ Partial ] Post-condition for 'not_present' (file tests/deleteSubstr3/deleteSubstr3.c, line 18)
            By StaDy, with pending:
             - Pre-condition (file tests/deleteSubstr3/deleteSubstr3.c, line 53) of 'delete_substr'
[ Partial ] Loop variant at loop (file tests/deleteSubstr3/deleteSubstr3.c, line 28)
            By StaDy, with pending:
             - Pre-condition (file tests/deleteSubstr3/deleteSubstr3.c, line 53) of 'delete_substr'
[ Partial ] Loop variant at loop (file tests/deleteSubstr3/deleteSubstr3.c, line 35)
            By StaDy, with pending:
             - Pre-condition (file tests/deleteSubstr3/deleteSubstr3.c, line 53) of 'delete_substr'
[ Partial ] Invariant (file tests/deleteSubstr3/deleteSubstr3.c, line 22)
            By StaDy, with pending:
             - Pre-condition (file tests/deleteSubstr3/deleteSubstr3.c, line 53) of 'delete_substr'
[ Partial ] Invariant (file tests/deleteSubstr3/deleteSubstr3.c, line 23)
            By StaDy, with pending:
             - Pre-condition (file tests/deleteSubstr3/deleteSubstr3.c, line 53) of 'delete_substr'
[ Partial ] Invariant (file tests/deleteSubstr3/deleteSubstr3.c, line 30)
            By StaDy, with pending:
             - Pre-condition (file tests/deleteSubstr3/deleteSubstr3.c, line 53) of 'delete_substr'
[ Partial ] Invariant (file tests/deleteSubstr3/deleteSubstr3.c, line 31)
            By StaDy, with pending:
             - Pre-condition (file tests/deleteSubstr3/deleteSubstr3.c, line 53) of 'delete_substr'
[ Partial ] Behavior 'not_present'
            By Frama-C kernel, with pending:
             - Pre-condition (file tests/deleteSubstr3/deleteSubstr3.c, line 53) of 'delete_substr'
[ Partial ] Behavior 'present'
            By Frama-C kernel, with pending:
             - Pre-condition (file tests/deleteSubstr3/deleteSubstr3.c, line 53) of 'delete_substr'

--------------------------------------------------------------------------------
--- Properties of Function 'delete_substr'
--------------------------------------------------------------------------------

[    -    ] Pre-condition (file tests/deleteSubstr3/deleteSubstr3.c, line 53)
[ Partial ] Post-condition for 'not_present' (file tests/deleteSubstr3/deleteSubstr3.c, line 58)
            By StaDy, with pending:
             - Pre-condition (file tests/deleteSubstr3/deleteSubstr3.c, line 53)
[ Partial ] Post-condition for 'not_present' (file tests/deleteSubstr3/deleteSubstr3.c, line 59)
            By StaDy, with pending:
             - Pre-condition (file tests/deleteSubstr3/deleteSubstr3.c, line 53)
[ Partial ] Post-condition for 'present' (file tests/deleteSubstr3/deleteSubstr3.c, line 63)
            By StaDy, with pending:
             - Pre-condition (file tests/deleteSubstr3/deleteSubstr3.c, line 53)
[ Partial ] Post-condition for 'present' (file tests/deleteSubstr3/deleteSubstr3.c, line 67)
            By StaDy, with pending:
             - Pre-condition (file tests/deleteSubstr3/deleteSubstr3.c, line 53)
[ Partial ] Loop variant at loop (file tests/deleteSubstr3/deleteSubstr3.c, line 75)
            By StaDy, with pending:
             - Pre-condition (file tests/deleteSubstr3/deleteSubstr3.c, line 53)
[ Partial ] Loop variant at loop (file tests/deleteSubstr3/deleteSubstr3.c, line 82)
            By StaDy, with pending:
             - Pre-condition (file tests/deleteSubstr3/deleteSubstr3.c, line 53)
[ Partial ] Loop variant at loop (file tests/deleteSubstr3/deleteSubstr3.c, line 87)
            By StaDy, with pending:
             - Pre-condition (file tests/deleteSubstr3/deleteSubstr3.c, line 53)
[ Partial ] Invariant (file tests/deleteSubstr3/deleteSubstr3.c, line 71)
            By StaDy, with pending:
             - Pre-condition (file tests/deleteSubstr3/deleteSubstr3.c, line 53)
[ Partial ] Invariant (file tests/deleteSubstr3/deleteSubstr3.c, line 72)
            By StaDy, with pending:
             - Pre-condition (file tests/deleteSubstr3/deleteSubstr3.c, line 53)
[ Partial ] Invariant (file tests/deleteSubstr3/deleteSubstr3.c, line 78)
            By StaDy, with pending:
             - Pre-condition (file tests/deleteSubstr3/deleteSubstr3.c, line 53)
[ Partial ] Invariant (file tests/deleteSubstr3/deleteSubstr3.c, line 79)
            By StaDy, with pending:
             - Pre-condition (file tests/deleteSubstr3/deleteSubstr3.c, line 53)
[ Partial ] Invariant (file tests/deleteSubstr3/deleteSubstr3.c, line 83)
            By StaDy, with pending:
             - Pre-condition (file tests/deleteSubstr3/deleteSubstr3.c, line 53)
[ Partial ] Invariant (file tests/deleteSubstr3/deleteSubstr3.c, line 84)
            By StaDy, with pending:
             - Pre-condition (file tests/deleteSubstr3/deleteSubstr3.c, line 53)
[ Partial ] Behavior 'not_present'
            By Frama-C kernel, with pending:
             - Pre-condition (file tests/deleteSubstr3/deleteSubstr3.c, line 53)
[ Partial ] Behavior 'present'
            By Frama-C kernel, with pending:
             - Pre-condition (file tests/deleteSubstr3/deleteSubstr3.c, line 53)

--------------------------------------------------------------------------------
--- Status Report Summary
--------------------------------------------------------------------------------
    29 Locally validated
     1 To be validated
    30 Total
--------------------------------------------------------------------------------
